<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0813.0408                               -->
<workbook original-version='18.1' source-build='2022.1.5 (20221.22.0813.0408)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='DeloitteCaseStudy_16640978842030' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='PreviousYear' datatype='integer' default-format='n0;-0' name='[CurrrentYear (copy)_91620115807444999]' param-domain-type='range' role='measure' type='quantitative' value='2012'>
        <calculation class='tableau' formula='2012' />
        <range granularity='1' max='2017' min='1990' />
      </column>
      <column caption='CurrrentYear' datatype='integer' default-format='n0;-0' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='2009'>
        <calculation class='tableau' formula='2009' />
        <range granularity='1' max='2017' min='1990' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (exports_monthly)' inline='true' name='federated.0iynzyu0k9870v15i0jmc03qe5co' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='exports_monthly' name='excel-direct.0kchb8b03relwt1395dyj1b4sqhy'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/peramnavachandureddy/Desktop/college/untitled folder/exports_monthly.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Argentina]' />
            <value name='[Australia]' />
            <value name='[Belgium]' />
            <value name='[Brazil]' />
            <value name='[Canada]' />
            <value name='[Chile]' />
            <value name='[China]' />
            <value name='[Czech Republic]' />
            <value name='[Denmark]' />
            <value name='[Developing Asia]' />
            <value name='[Developing Countries]' />
            <value name='[East Asia &amp; Pacific developing]' />
            <value name='[Estonia]' />
            <value name='[Europe &amp; Central Asia developing]' />
            <value name='[Finland]' />
            <value name='[France]' />
            <value name='[Germany]' />
            <value name='[High Income Countries]' />
            <value name='[High Income: Non-OECD]' />
            <value name='[High income: OECD]' />
            <value name='[Hong Kong SAR, China]' />
            <value name='[Hungary]' />
            <value name='[Indonesia]' />
            <value name='[Israel]' />
            <value name='[Italy]' />
            <value name='[Japan]' />
            <value name='[Jordan]' />
            <value name='[Korea, Rep.]' />
            <value name='[Latin America &amp; Caribbean developing]' />
            <value name='[Low Income]' />
            <value name='[Malaysia]' />
            <value name='[Mexico]' />
            <value name='[Middle East &amp; N. Africa developing]' />
            <value name='[Middle Income Countries]' />
            <value name='[Netherlands]' />
            <value name='[New Zealand]' />
            <value name='[Norway]' />
            <value name='[Peru]' />
            <value name='[Philippines]' />
            <value name='[Poland]' />
            <value name='[Russian Federation]' />
            <value name='[Singapore]' />
            <value name='[Slovakia]' />
            <value name='[South Asia developing]' />
            <value name='[Spain]' />
            <value name='[Sub-Saharan Africa developing]' />
            <value name='[Sweden]' />
            <value name='[Taiwan, China]' />
            <value name='[Thailand]' />
            <value name='[Turkey]' />
            <value name='[Uganda]' />
            <value name='[United Kingdom]' />
            <value name='[United States]' />
            <value name='[World (WBG members)]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Sheet1].[Argentina]' />
              <field name='[Sheet1].[Australia]' />
              <field name='[Sheet1].[Belgium]' />
              <field name='[Sheet1].[Brazil]' />
              <field name='[Sheet1].[Canada]' />
              <field name='[Sheet1].[Chile]' />
              <field name='[Sheet1].[China]' />
              <field name='[Sheet1].[Czech Republic]' />
              <field name='[Sheet1].[Denmark]' />
              <field name='[Sheet1].[Developing Asia]' />
              <field name='[Sheet1].[Developing Countries]' />
              <field name='[Sheet1].[East Asia &amp; Pacific developing]' />
              <field name='[Sheet1].[Estonia]' />
              <field name='[Sheet1].[Europe &amp; Central Asia developing]' />
              <field name='[Sheet1].[Finland]' />
              <field name='[Sheet1].[France]' />
              <field name='[Sheet1].[Germany]' />
              <field name='[Sheet1].[High Income Countries]' />
              <field name='[Sheet1].[High Income: Non-OECD]' />
              <field name='[Sheet1].[High income: OECD]' />
              <field name='[Sheet1].[Hong Kong SAR, China]' />
              <field name='[Sheet1].[Hungary]' />
              <field name='[Sheet1].[Indonesia]' />
              <field name='[Sheet1].[Israel]' />
              <field name='[Sheet1].[Italy]' />
              <field name='[Sheet1].[Japan]' />
              <field name='[Sheet1].[Jordan]' />
              <field name='[Sheet1].[Korea, Rep.]' />
              <field name='[Sheet1].[Latin America &amp; Caribbean developing]' />
              <field name='[Sheet1].[Low Income]' />
              <field name='[Sheet1].[Malaysia]' />
              <field name='[Sheet1].[Mexico]' />
              <field name='[Sheet1].[Middle East &amp; N. Africa developing]' />
              <field name='[Sheet1].[Middle Income Countries]' />
              <field name='[Sheet1].[Netherlands]' />
              <field name='[Sheet1].[New Zealand]' />
              <field name='[Sheet1].[Norway]' />
              <field name='[Sheet1].[Peru]' />
              <field name='[Sheet1].[Philippines]' />
              <field name='[Sheet1].[Poland]' />
              <field name='[Sheet1].[Russian Federation]' />
              <field name='[Sheet1].[Singapore]' />
              <field name='[Sheet1].[Slovakia]' />
              <field name='[Sheet1].[South Asia developing]' />
              <field name='[Sheet1].[Spain]' />
              <field name='[Sheet1].[Sub-Saharan Africa developing]' />
              <field name='[Sheet1].[Sweden]' />
              <field name='[Sheet1].[Taiwan, China]' />
              <field name='[Sheet1].[Thailand]' />
              <field name='[Sheet1].[Turkey]' />
              <field name='[Sheet1].[Uganda]' />
              <field name='[Sheet1].[United Kingdom]' />
              <field name='[Sheet1].[United States]' />
              <field name='[Sheet1].[World (WBG members)]' />
            </group>
          </groups>
          <relation connection='excel-direct.0kchb8b03relwt1395dyj1b4sqhy' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:BD334:no:A1:BD334:0' header='yes' outcome='6'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='date' name='year' ordinal='1' />
              <column datatype='real' name='Argentina' ordinal='2' />
              <column datatype='real' name='Developing Asia' ordinal='3' />
              <column datatype='real' name='Australia' ordinal='4' />
              <column datatype='real' name='Belgium' ordinal='5' />
              <column datatype='real' name='Brazil' ordinal='6' />
              <column datatype='real' name='Canada' ordinal='7' />
              <column datatype='real' name='Chile' ordinal='8' />
              <column datatype='real' name='China' ordinal='9' />
              <column datatype='real' name='Czech Republic' ordinal='10' />
              <column datatype='real' name='Germany' ordinal='11' />
              <column datatype='real' name='Developing Countries' ordinal='12' />
              <column datatype='real' name='Denmark' ordinal='13' />
              <column datatype='real' name='East Asia &amp; Pacific developing' ordinal='14' />
              <column datatype='real' name='Europe &amp; Central Asia developing' ordinal='15' />
              <column datatype='real' name='Spain' ordinal='16' />
              <column datatype='real' name='Estonia' ordinal='17' />
              <column datatype='real' name='Finland' ordinal='18' />
              <column datatype='real' name='France' ordinal='19' />
              <column datatype='real' name='United Kingdom' ordinal='20' />
              <column datatype='real' name='High Income Countries' ordinal='21' />
              <column datatype='real' name='Hong Kong SAR, China' ordinal='22' />
              <column datatype='real' name='Hungary' ordinal='23' />
              <column datatype='real' name='High income: OECD' ordinal='24' />
              <column datatype='real' name='Indonesia' ordinal='25' />
              <column datatype='real' name='Israel' ordinal='26' />
              <column datatype='real' name='Italy' ordinal='27' />
              <column datatype='real' name='Jordan' ordinal='28' />
              <column datatype='real' name='Japan' ordinal='29' />
              <column datatype='real' name='Korea, Rep.' ordinal='30' />
              <column datatype='real' name='Latin America &amp; Caribbean developing' ordinal='31' />
              <column datatype='real' name='Low Income' ordinal='32' />
              <column datatype='real' name='Mexico' ordinal='33' />
              <column datatype='real' name='Middle Income Countries' ordinal='34' />
              <column datatype='real' name='Middle East &amp; N. Africa developing' ordinal='35' />
              <column datatype='real' name='Malaysia' ordinal='36' />
              <column datatype='real' name='Netherlands' ordinal='37' />
              <column datatype='real' name='Norway' ordinal='38' />
              <column datatype='real' name='New Zealand' ordinal='39' />
              <column datatype='real' name='High Income: Non-OECD' ordinal='40' />
              <column datatype='real' name='Peru' ordinal='41' />
              <column datatype='real' name='Philippines' ordinal='42' />
              <column datatype='real' name='Poland' ordinal='43' />
              <column datatype='real' name='Russian Federation' ordinal='44' />
              <column datatype='integer' name='South Asia developing' ordinal='45' />
              <column datatype='real' name='Singapore' ordinal='46' />
              <column datatype='real' name='Sub-Saharan Africa developing' ordinal='47' />
              <column datatype='real' name='Slovakia' ordinal='48' />
              <column datatype='real' name='Sweden' ordinal='49' />
              <column datatype='real' name='Thailand' ordinal='50' />
              <column datatype='real' name='Turkey' ordinal='51' />
              <column datatype='real' name='Taiwan, China' ordinal='52' />
              <column datatype='real' name='Uganda' ordinal='53' />
              <column datatype='real' name='United States' ordinal='54' />
              <column datatype='real' name='World (WBG members)' ordinal='55' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Argentina]' />
            <value name='[Australia]' />
            <value name='[Belgium]' />
            <value name='[Brazil]' />
            <value name='[Canada]' />
            <value name='[Chile]' />
            <value name='[China]' />
            <value name='[Czech Republic]' />
            <value name='[Denmark]' />
            <value name='[Developing Asia]' />
            <value name='[Developing Countries]' />
            <value name='[East Asia &amp; Pacific developing]' />
            <value name='[Estonia]' />
            <value name='[Europe &amp; Central Asia developing]' />
            <value name='[Finland]' />
            <value name='[France]' />
            <value name='[Germany]' />
            <value name='[High Income Countries]' />
            <value name='[High Income: Non-OECD]' />
            <value name='[High income: OECD]' />
            <value name='[Hong Kong SAR, China]' />
            <value name='[Hungary]' />
            <value name='[Indonesia]' />
            <value name='[Israel]' />
            <value name='[Italy]' />
            <value name='[Japan]' />
            <value name='[Jordan]' />
            <value name='[Korea, Rep.]' />
            <value name='[Latin America &amp; Caribbean developing]' />
            <value name='[Low Income]' />
            <value name='[Malaysia]' />
            <value name='[Mexico]' />
            <value name='[Middle East &amp; N. Africa developing]' />
            <value name='[Middle Income Countries]' />
            <value name='[Netherlands]' />
            <value name='[New Zealand]' />
            <value name='[Norway]' />
            <value name='[Peru]' />
            <value name='[Philippines]' />
            <value name='[Poland]' />
            <value name='[Russian Federation]' />
            <value name='[Singapore]' />
            <value name='[Slovakia]' />
            <value name='[South Asia developing]' />
            <value name='[Spain]' />
            <value name='[Sub-Saharan Africa developing]' />
            <value name='[Sweden]' />
            <value name='[Taiwan, China]' />
            <value name='[Thailand]' />
            <value name='[Turkey]' />
            <value name='[Uganda]' />
            <value name='[United Kingdom]' />
            <value name='[United States]' />
            <value name='[World (WBG members)]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Sheet1].[Argentina]' />
              <field name='[Sheet1].[Australia]' />
              <field name='[Sheet1].[Belgium]' />
              <field name='[Sheet1].[Brazil]' />
              <field name='[Sheet1].[Canada]' />
              <field name='[Sheet1].[Chile]' />
              <field name='[Sheet1].[China]' />
              <field name='[Sheet1].[Czech Republic]' />
              <field name='[Sheet1].[Denmark]' />
              <field name='[Sheet1].[Developing Asia]' />
              <field name='[Sheet1].[Developing Countries]' />
              <field name='[Sheet1].[East Asia &amp; Pacific developing]' />
              <field name='[Sheet1].[Estonia]' />
              <field name='[Sheet1].[Europe &amp; Central Asia developing]' />
              <field name='[Sheet1].[Finland]' />
              <field name='[Sheet1].[France]' />
              <field name='[Sheet1].[Germany]' />
              <field name='[Sheet1].[High Income Countries]' />
              <field name='[Sheet1].[High Income: Non-OECD]' />
              <field name='[Sheet1].[High income: OECD]' />
              <field name='[Sheet1].[Hong Kong SAR, China]' />
              <field name='[Sheet1].[Hungary]' />
              <field name='[Sheet1].[Indonesia]' />
              <field name='[Sheet1].[Israel]' />
              <field name='[Sheet1].[Italy]' />
              <field name='[Sheet1].[Japan]' />
              <field name='[Sheet1].[Jordan]' />
              <field name='[Sheet1].[Korea, Rep.]' />
              <field name='[Sheet1].[Latin America &amp; Caribbean developing]' />
              <field name='[Sheet1].[Low Income]' />
              <field name='[Sheet1].[Malaysia]' />
              <field name='[Sheet1].[Mexico]' />
              <field name='[Sheet1].[Middle East &amp; N. Africa developing]' />
              <field name='[Sheet1].[Middle Income Countries]' />
              <field name='[Sheet1].[Netherlands]' />
              <field name='[Sheet1].[New Zealand]' />
              <field name='[Sheet1].[Norway]' />
              <field name='[Sheet1].[Peru]' />
              <field name='[Sheet1].[Philippines]' />
              <field name='[Sheet1].[Poland]' />
              <field name='[Sheet1].[Russian Federation]' />
              <field name='[Sheet1].[Singapore]' />
              <field name='[Sheet1].[Slovakia]' />
              <field name='[Sheet1].[South Asia developing]' />
              <field name='[Sheet1].[Spain]' />
              <field name='[Sheet1].[Sub-Saharan Africa developing]' />
              <field name='[Sheet1].[Sweden]' />
              <field name='[Sheet1].[Taiwan, China]' />
              <field name='[Sheet1].[Thailand]' />
              <field name='[Sheet1].[Turkey]' />
              <field name='[Sheet1].[Uganda]' />
              <field name='[Sheet1].[United Kingdom]' />
              <field name='[Sheet1].[United States]' />
              <field name='[Sheet1].[World (WBG members)]' />
            </group>
          </groups>
          <relation connection='excel-direct.0kchb8b03relwt1395dyj1b4sqhy' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:BD334:no:A1:BD334:0' header='yes' outcome='6'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='date' name='year' ordinal='1' />
              <column datatype='real' name='Argentina' ordinal='2' />
              <column datatype='real' name='Developing Asia' ordinal='3' />
              <column datatype='real' name='Australia' ordinal='4' />
              <column datatype='real' name='Belgium' ordinal='5' />
              <column datatype='real' name='Brazil' ordinal='6' />
              <column datatype='real' name='Canada' ordinal='7' />
              <column datatype='real' name='Chile' ordinal='8' />
              <column datatype='real' name='China' ordinal='9' />
              <column datatype='real' name='Czech Republic' ordinal='10' />
              <column datatype='real' name='Germany' ordinal='11' />
              <column datatype='real' name='Developing Countries' ordinal='12' />
              <column datatype='real' name='Denmark' ordinal='13' />
              <column datatype='real' name='East Asia &amp; Pacific developing' ordinal='14' />
              <column datatype='real' name='Europe &amp; Central Asia developing' ordinal='15' />
              <column datatype='real' name='Spain' ordinal='16' />
              <column datatype='real' name='Estonia' ordinal='17' />
              <column datatype='real' name='Finland' ordinal='18' />
              <column datatype='real' name='France' ordinal='19' />
              <column datatype='real' name='United Kingdom' ordinal='20' />
              <column datatype='real' name='High Income Countries' ordinal='21' />
              <column datatype='real' name='Hong Kong SAR, China' ordinal='22' />
              <column datatype='real' name='Hungary' ordinal='23' />
              <column datatype='real' name='High income: OECD' ordinal='24' />
              <column datatype='real' name='Indonesia' ordinal='25' />
              <column datatype='real' name='Israel' ordinal='26' />
              <column datatype='real' name='Italy' ordinal='27' />
              <column datatype='real' name='Jordan' ordinal='28' />
              <column datatype='real' name='Japan' ordinal='29' />
              <column datatype='real' name='Korea, Rep.' ordinal='30' />
              <column datatype='real' name='Latin America &amp; Caribbean developing' ordinal='31' />
              <column datatype='real' name='Low Income' ordinal='32' />
              <column datatype='real' name='Mexico' ordinal='33' />
              <column datatype='real' name='Middle Income Countries' ordinal='34' />
              <column datatype='real' name='Middle East &amp; N. Africa developing' ordinal='35' />
              <column datatype='real' name='Malaysia' ordinal='36' />
              <column datatype='real' name='Netherlands' ordinal='37' />
              <column datatype='real' name='Norway' ordinal='38' />
              <column datatype='real' name='New Zealand' ordinal='39' />
              <column datatype='real' name='High Income: Non-OECD' ordinal='40' />
              <column datatype='real' name='Peru' ordinal='41' />
              <column datatype='real' name='Philippines' ordinal='42' />
              <column datatype='real' name='Poland' ordinal='43' />
              <column datatype='real' name='Russian Federation' ordinal='44' />
              <column datatype='integer' name='South Asia developing' ordinal='45' />
              <column datatype='real' name='Singapore' ordinal='46' />
              <column datatype='real' name='Sub-Saharan Africa developing' ordinal='47' />
              <column datatype='real' name='Slovakia' ordinal='48' />
              <column datatype='real' name='Sweden' ordinal='49' />
              <column datatype='real' name='Thailand' ordinal='50' />
              <column datatype='real' name='Turkey' ordinal='51' />
              <column datatype='real' name='Taiwan, China' ordinal='52' />
              <column datatype='real' name='Uganda' ordinal='53' />
              <column datatype='real' name='United States' ordinal='54' />
              <column datatype='real' name='World (WBG members)' ordinal='55' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BD334:no:A1:BD334:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A2B92EB57405DB593958F381E2DA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A2B92EB57405DB593958F381E2DA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A2B92EB57405DB593958F381E2DA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A2B92EB57405DB593958F381E2DA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Exports_monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_8C3A2B92EB57405DB593958F381E2DA9]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country,YEAR(Year)) 1' hidden='true' name='[Action (Country,YEAR(Year)) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Pivot Field Names]' />
          <groupfilter function='level-members' level='[tyr:year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,YEAR(Year))' hidden='true' name='[Action (Country,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Pivot Field Names]' />
          <groupfilter function='level-members' level='[yr:year:ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/peramnavachandureddy/Documents/My Tableau Repository/Datasources/Sheet1 (exports_monthly).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/25/2022 10:02:51 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (exports_monthly)' increment-value='%null%' refresh-type='create' rows-inserted='17982' timestamp-start='2022-09-25 10:02:49.736' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A2B92EB57405DB593958F381E2DA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A2B92EB57405DB593958F381E2DA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Names</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Pivot Field Names]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Names</remote-alias>
              <ordinal>2</ordinal>
              <family>Pivot</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A2B92EB57405DB593958F381E2DA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Values</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Pivot Field Values]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Values</remote-alias>
              <ordinal>3</ordinal>
              <family>Pivot</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10235</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A2B92EB57405DB593958F381E2DA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Pivot Field Names:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#006699'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#08916d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latin America &amp; Caribbean developing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#4f6980'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#529ee0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Middle East &amp; N. Africa developing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Developing Asia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Low Income&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sub-Saharan Africa developing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;High Income: Non-OECD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe &amp; Central Asia developing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Middle Income Countries&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World (WBG members)&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;High Income Countries&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;High income: OECD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7ce9f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d9a6c2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Developing Countries&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f0e442'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f59b00'>
              <bucket>&quot;Taiwan, China&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Asia &amp; Pacific developing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Asia developing&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <filter class='categorical' column='[Pivot Field Names]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Pivot Field Names]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Argentina&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Developing Asia&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Developing Countries&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;East Asia &amp; Pacific developing&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Europe &amp; Central Asia developing&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;High Income Countries&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;High Income: Non-OECD&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;High income: OECD&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Hong Kong SAR, China&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Latin America &amp; Caribbean developing&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Low Income&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Middle East &amp; N. Africa developing&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Middle Income Countries&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;South Asia developing&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Sub-Saharan Africa developing&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;World (WBG members)&quot;' />
          </groupfilter>
        </groupfilter>
      </filter>
      <filter class='categorical' column='[yr:year:ok]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[yr:year:ok]' />
          <groupfilter function='member' level='[yr:year:ok]' member='2018' />
        </groupfilter>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_8C3A2B92EB57405DB593958F381E2DA9'>
            <properties context=''>
              <relation name='Pivot' type='pivot'>
                <columns>
                  <column datatype='string' name='Pivot Field Names' />
                  <column datatype='real' name='Pivot Field Values' />
                </columns>
                <tag name='Pivot Field Names'>
                  <value name='[Argentina]' />
                  <value name='[Australia]' />
                  <value name='[Belgium]' />
                  <value name='[Brazil]' />
                  <value name='[Canada]' />
                  <value name='[Chile]' />
                  <value name='[China]' />
                  <value name='[Czech Republic]' />
                  <value name='[Denmark]' />
                  <value name='[Developing Asia]' />
                  <value name='[Developing Countries]' />
                  <value name='[East Asia &amp; Pacific developing]' />
                  <value name='[Estonia]' />
                  <value name='[Europe &amp; Central Asia developing]' />
                  <value name='[Finland]' />
                  <value name='[France]' />
                  <value name='[Germany]' />
                  <value name='[High Income Countries]' />
                  <value name='[High Income: Non-OECD]' />
                  <value name='[High income: OECD]' />
                  <value name='[Hong Kong SAR, China]' />
                  <value name='[Hungary]' />
                  <value name='[Indonesia]' />
                  <value name='[Israel]' />
                  <value name='[Italy]' />
                  <value name='[Japan]' />
                  <value name='[Jordan]' />
                  <value name='[Korea, Rep.]' />
                  <value name='[Latin America &amp; Caribbean developing]' />
                  <value name='[Low Income]' />
                  <value name='[Malaysia]' />
                  <value name='[Mexico]' />
                  <value name='[Middle East &amp; N. Africa developing]' />
                  <value name='[Middle Income Countries]' />
                  <value name='[Netherlands]' />
                  <value name='[New Zealand]' />
                  <value name='[Norway]' />
                  <value name='[Peru]' />
                  <value name='[Philippines]' />
                  <value name='[Poland]' />
                  <value name='[Russian Federation]' />
                  <value name='[Singapore]' />
                  <value name='[Slovakia]' />
                  <value name='[South Asia developing]' />
                  <value name='[Spain]' />
                  <value name='[Sub-Saharan Africa developing]' />
                  <value name='[Sweden]' />
                  <value name='[Taiwan, China]' />
                  <value name='[Thailand]' />
                  <value name='[Turkey]' />
                  <value name='[Uganda]' />
                  <value name='[United Kingdom]' />
                  <value name='[United States]' />
                  <value name='[World (WBG members)]' />
                </tag>
                <groups>
                  <group name='Pivot Field Values'>
                    <field name='[Sheet1].[Argentina]' />
                    <field name='[Sheet1].[Australia]' />
                    <field name='[Sheet1].[Belgium]' />
                    <field name='[Sheet1].[Brazil]' />
                    <field name='[Sheet1].[Canada]' />
                    <field name='[Sheet1].[Chile]' />
                    <field name='[Sheet1].[China]' />
                    <field name='[Sheet1].[Czech Republic]' />
                    <field name='[Sheet1].[Denmark]' />
                    <field name='[Sheet1].[Developing Asia]' />
                    <field name='[Sheet1].[Developing Countries]' />
                    <field name='[Sheet1].[East Asia &amp; Pacific developing]' />
                    <field name='[Sheet1].[Estonia]' />
                    <field name='[Sheet1].[Europe &amp; Central Asia developing]' />
                    <field name='[Sheet1].[Finland]' />
                    <field name='[Sheet1].[France]' />
                    <field name='[Sheet1].[Germany]' />
                    <field name='[Sheet1].[High Income Countries]' />
                    <field name='[Sheet1].[High Income: Non-OECD]' />
                    <field name='[Sheet1].[High income: OECD]' />
                    <field name='[Sheet1].[Hong Kong SAR, China]' />
                    <field name='[Sheet1].[Hungary]' />
                    <field name='[Sheet1].[Indonesia]' />
                    <field name='[Sheet1].[Israel]' />
                    <field name='[Sheet1].[Italy]' />
                    <field name='[Sheet1].[Japan]' />
                    <field name='[Sheet1].[Jordan]' />
                    <field name='[Sheet1].[Korea, Rep.]' />
                    <field name='[Sheet1].[Latin America &amp; Caribbean developing]' />
                    <field name='[Sheet1].[Low Income]' />
                    <field name='[Sheet1].[Malaysia]' />
                    <field name='[Sheet1].[Mexico]' />
                    <field name='[Sheet1].[Middle East &amp; N. Africa developing]' />
                    <field name='[Sheet1].[Middle Income Countries]' />
                    <field name='[Sheet1].[Netherlands]' />
                    <field name='[Sheet1].[New Zealand]' />
                    <field name='[Sheet1].[Norway]' />
                    <field name='[Sheet1].[Peru]' />
                    <field name='[Sheet1].[Philippines]' />
                    <field name='[Sheet1].[Poland]' />
                    <field name='[Sheet1].[Russian Federation]' />
                    <field name='[Sheet1].[Singapore]' />
                    <field name='[Sheet1].[Slovakia]' />
                    <field name='[Sheet1].[South Asia developing]' />
                    <field name='[Sheet1].[Spain]' />
                    <field name='[Sheet1].[Sub-Saharan Africa developing]' />
                    <field name='[Sheet1].[Sweden]' />
                    <field name='[Sheet1].[Taiwan, China]' />
                    <field name='[Sheet1].[Thailand]' />
                    <field name='[Sheet1].[Turkey]' />
                    <field name='[Sheet1].[Uganda]' />
                    <field name='[Sheet1].[United Kingdom]' />
                    <field name='[Sheet1].[United States]' />
                    <field name='[Sheet1].[World (WBG members)]' />
                  </group>
                </groups>
                <relation connection='excel-direct.0kchb8b03relwt1395dyj1b4sqhy' name='Sheet1' table='[Sheet1$]' type='table'>
                  <columns gridOrigin='A1:BD334:no:A1:BD334:0' header='yes' outcome='6'>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='date' name='year' ordinal='1' />
                    <column datatype='real' name='Argentina' ordinal='2' />
                    <column datatype='real' name='Developing Asia' ordinal='3' />
                    <column datatype='real' name='Australia' ordinal='4' />
                    <column datatype='real' name='Belgium' ordinal='5' />
                    <column datatype='real' name='Brazil' ordinal='6' />
                    <column datatype='real' name='Canada' ordinal='7' />
                    <column datatype='real' name='Chile' ordinal='8' />
                    <column datatype='real' name='China' ordinal='9' />
                    <column datatype='real' name='Czech Republic' ordinal='10' />
                    <column datatype='real' name='Germany' ordinal='11' />
                    <column datatype='real' name='Developing Countries' ordinal='12' />
                    <column datatype='real' name='Denmark' ordinal='13' />
                    <column datatype='real' name='East Asia &amp; Pacific developing' ordinal='14' />
                    <column datatype='real' name='Europe &amp; Central Asia developing' ordinal='15' />
                    <column datatype='real' name='Spain' ordinal='16' />
                    <column datatype='real' name='Estonia' ordinal='17' />
                    <column datatype='real' name='Finland' ordinal='18' />
                    <column datatype='real' name='France' ordinal='19' />
                    <column datatype='real' name='United Kingdom' ordinal='20' />
                    <column datatype='real' name='High Income Countries' ordinal='21' />
                    <column datatype='real' name='Hong Kong SAR, China' ordinal='22' />
                    <column datatype='real' name='Hungary' ordinal='23' />
                    <column datatype='real' name='High income: OECD' ordinal='24' />
                    <column datatype='real' name='Indonesia' ordinal='25' />
                    <column datatype='real' name='Israel' ordinal='26' />
                    <column datatype='real' name='Italy' ordinal='27' />
                    <column datatype='real' name='Jordan' ordinal='28' />
                    <column datatype='real' name='Japan' ordinal='29' />
                    <column datatype='real' name='Korea, Rep.' ordinal='30' />
                    <column datatype='real' name='Latin America &amp; Caribbean developing' ordinal='31' />
                    <column datatype='real' name='Low Income' ordinal='32' />
                    <column datatype='real' name='Mexico' ordinal='33' />
                    <column datatype='real' name='Middle Income Countries' ordinal='34' />
                    <column datatype='real' name='Middle East &amp; N. Africa developing' ordinal='35' />
                    <column datatype='real' name='Malaysia' ordinal='36' />
                    <column datatype='real' name='Netherlands' ordinal='37' />
                    <column datatype='real' name='Norway' ordinal='38' />
                    <column datatype='real' name='New Zealand' ordinal='39' />
                    <column datatype='real' name='High Income: Non-OECD' ordinal='40' />
                    <column datatype='real' name='Peru' ordinal='41' />
                    <column datatype='real' name='Philippines' ordinal='42' />
                    <column datatype='real' name='Poland' ordinal='43' />
                    <column datatype='real' name='Russian Federation' ordinal='44' />
                    <column datatype='integer' name='South Asia developing' ordinal='45' />
                    <column datatype='real' name='Singapore' ordinal='46' />
                    <column datatype='real' name='Sub-Saharan Africa developing' ordinal='47' />
                    <column datatype='real' name='Slovakia' ordinal='48' />
                    <column datatype='real' name='Sweden' ordinal='49' />
                    <column datatype='real' name='Thailand' ordinal='50' />
                    <column datatype='real' name='Turkey' ordinal='51' />
                    <column datatype='real' name='Taiwan, China' ordinal='52' />
                    <column datatype='real' name='Uganda' ordinal='53' />
                    <column datatype='real' name='United States' ordinal='54' />
                    <column datatype='real' name='World (WBG members)' ordinal='55' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (exchange_monthly)' inline='true' name='federated.098uei71m1aili129s8t8014b1h5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='exchange_monthly' name='excel-direct.0x68k790n87pia10tidxf0kn0tn2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/peramnavachandureddy/Desktop/college/untitled folder/exchange_monthly.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[0Mibia]' />
            <value name='[Afghanistan]' />
            <value name='[Albania]' />
            <value name='[Algeria]' />
            <value name='[Angola]' />
            <value name='[Antigua and Barbuda]' />
            <value name='[Argenti0]' />
            <value name='[Armenia]' />
            <value name='[Australia]' />
            <value name='[Austria]' />
            <value name='[Azerbaijan]' />
            <value name='[Bahamas]' />
            <value name='[Bahrain]' />
            <value name='[Bangladesh]' />
            <value name='[Barbados]' />
            <value name='[Belarus]' />
            <value name='[Belgium]' />
            <value name='[Belize]' />
            <value name='[Benin]' />
            <value name='[Bhutan]' />
            <value name='[Bolivia]' />
            <value name='[Bosnia and Herzegovi0]' />
            <value name='[Botswa0]' />
            <value name='[Brazil]' />
            <value name='[Brunei Darussalam]' />
            <value name='[Bulgaria]' />
            <value name='[Burki0 Faso]' />
            <value name='[Burundi]' />
            <value name='[Ca0da]' />
            <value name='[Cabo Verde]' />
            <value name='[Cambodia]' />
            <value name='[Cameroon]' />
            <value name='[Central African Republic]' />
            <value name='[Chad]' />
            <value name='[Chi0]' />
            <value name='[Chile]' />
            <value name='[Colombia]' />
            <value name='[Comoros]' />
            <value name='[Congo, Dem. Rep.]' />
            <value name='[Congo, Rep.]' />
            <value name='[Costa Rica]' />
            <value name='[Cote d&apos;Ivoire]' />
            <value name='[Croatia]' />
            <value name='[Cyprus]' />
            <value name='[Czech Republic]' />
            <value name='[Denmark]' />
            <value name='[Developing Asia]' />
            <value name='[Developing Countries]' />
            <value name='[Djibouti]' />
            <value name='[Dominica]' />
            <value name='[Dominican Republic]' />
            <value name='[East Asia &amp; Pacific developing]' />
            <value name='[Ecuador]' />
            <value name='[Egypt, Arab Rep.]' />
            <value name='[El Salvador]' />
            <value name='[Equatorial Guinea]' />
            <value name='[Eritrea]' />
            <value name='[Estonia]' />
            <value name='[Ethiopia]' />
            <value name='[Europe &amp; Central Asia developing]' />
            <value name='[Fiji]' />
            <value name='[Finland]' />
            <value name='[France]' />
            <value name='[Gabon]' />
            <value name='[Gambia, The]' />
            <value name='[Georgia]' />
            <value name='[Germany]' />
            <value name='[Gha0]' />
            <value name='[Gre0da]' />
            <value name='[Greece]' />
            <value name='[Guatemala]' />
            <value name='[Guinea-Bissau]' />
            <value name='[Guinea]' />
            <value name='[Guya0]' />
            <value name='[Haiti]' />
            <value name='[High Income Countries]' />
            <value name='[High Income: Non-OECD]' />
            <value name='[High income: OECD]' />
            <value name='[Honduras]' />
            <value name='[Hong Kong SAR, Chi0]' />
            <value name='[Hungary]' />
            <value name='[Iceland]' />
            <value name='[India]' />
            <value name='[Indonesia]' />
            <value name='[Iran, Islamic Rep.]' />
            <value name='[Iraq]' />
            <value name='[Ireland]' />
            <value name='[Israel]' />
            <value name='[Italy]' />
            <value name='[Jamaica]' />
            <value name='[Japan]' />
            <value name='[Jordan]' />
            <value name='[Kazakhstan]' />
            <value name='[Kenya]' />
            <value name='[Kiribati]' />
            <value name='[Korea, Rep.]' />
            <value name='[Kuwait]' />
            <value name='[Kyrgyz Republic]' />
            <value name='[Lao, PDR]' />
            <value name='[Latin America &amp; Caribbean developing]' />
            <value name='[Latvia]' />
            <value name='[Lebanon]' />
            <value name='[Lesotho]' />
            <value name='[Liberia]' />
            <value name='[Libya]' />
            <value name='[Lithuania]' />
            <value name='[Low Income]' />
            <value name='[Luxembourg]' />
            <value name='[Macedonia, FYR]' />
            <value name='[Madagascar]' />
            <value name='[Malawi]' />
            <value name='[Malaysia]' />
            <value name='[Maldives]' />
            <value name='[Mali]' />
            <value name='[Malta]' />
            <value name='[Mauritania]' />
            <value name='[Mauritius]' />
            <value name='[Mexico]' />
            <value name='[Micronesia, Fed. Sts.]' />
            <value name='[Middle East &amp; N. Africa developing]' />
            <value name='[Middle Income Countries]' />
            <value name='[Moldova, Rep.]' />
            <value name='[Mongolia]' />
            <value name='[Montenegro]' />
            <value name='[Morocco]' />
            <value name='[Mozambique]' />
            <value name='[Myanmar]' />
            <value name='[Nepal]' />
            <value name='[Netherlands]' />
            <value name='[New Zealand]' />
            <value name='[Nicaragua]' />
            <value name='[Niger]' />
            <value name='[Nigeria]' />
            <value name='[Norway]' />
            <value name='[Oman]' />
            <value name='[Pa0ma]' />
            <value name='[Pakistan]' />
            <value name='[Papua New Guinea]' />
            <value name='[Paraguay]' />
            <value name='[Peru]' />
            <value name='[Philippines]' />
            <value name='[Poland]' />
            <value name='[Portugal]' />
            <value name='[Qatar]' />
            <value name='[Romania]' />
            <value name='[Russian Federation]' />
            <value name='[Rwanda]' />
            <value name='[Samoa]' />
            <value name='[San Marino]' />
            <value name='[Sao Tome and Principe]' />
            <value name='[Saudi Arabia]' />
            <value name='[Senegal]' />
            <value name='[Serbia]' />
            <value name='[Seychelles]' />
            <value name='[Sierra Leone]' />
            <value name='[Singapore]' />
            <value name='[Slovakia]' />
            <value name='[Slovenia]' />
            <value name='[Solomon Islands]' />
            <value name='[South Africa]' />
            <value name='[South Asia developing]' />
            <value name='[South Sudan]' />
            <value name='[Spain]' />
            <value name='[Sri Lanka]' />
            <value name='[St. Kitts and Nevis]' />
            <value name='[St. Lucia]' />
            <value name='[St. Vincent and the Gre0dines]' />
            <value name='[Sub-Saharan Africa developing]' />
            <value name='[Sudan]' />
            <value name='[Suri0me]' />
            <value name='[Swaziland]' />
            <value name='[Sweden]' />
            <value name='[Switzerland]' />
            <value name='[Syrian Arab Republic]' />
            <value name='[Taiwan, Chi0]' />
            <value name='[Tajikistan]' />
            <value name='[Tanzania, United Rep.]' />
            <value name='[Thailand]' />
            <value name='[Timor-Leste]' />
            <value name='[Togo]' />
            <value name='[Tonga]' />
            <value name='[Trinidad and Tobago]' />
            <value name='[Tunisia]' />
            <value name='[Turkey]' />
            <value name='[Turkmenistan]' />
            <value name='[Uganda]' />
            <value name='[Ukraine]' />
            <value name='[United Arab Emirates]' />
            <value name='[United Kingdom]' />
            <value name='[United States]' />
            <value name='[Uruguay]' />
            <value name='[Uzbekistan]' />
            <value name='[Vanuatu]' />
            <value name='[Venezuela, RB]' />
            <value name='[Viet0m]' />
            <value name='[West Bank and Gaza]' />
            <value name='[World (WBG members)]' />
            <value name='[Yemen, Rep.]' />
            <value name='[Zambia]' />
            <value name='[Zimbabwe]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Sheet1].[0mibia]' />
              <field name='[Sheet1].[Afghanistan]' />
              <field name='[Sheet1].[Albania]' />
              <field name='[Sheet1].[Algeria]' />
              <field name='[Sheet1].[Angola]' />
              <field name='[Sheet1].[Antigua and Barbuda]' />
              <field name='[Sheet1].[Argenti0]' />
              <field name='[Sheet1].[Armenia]' />
              <field name='[Sheet1].[Australia]' />
              <field name='[Sheet1].[Austria]' />
              <field name='[Sheet1].[Azerbaijan]' />
              <field name='[Sheet1].[Bahamas]' />
              <field name='[Sheet1].[Bahrain]' />
              <field name='[Sheet1].[Bangladesh]' />
              <field name='[Sheet1].[Barbados]' />
              <field name='[Sheet1].[Belarus]' />
              <field name='[Sheet1].[Belgium]' />
              <field name='[Sheet1].[Belize]' />
              <field name='[Sheet1].[Benin]' />
              <field name='[Sheet1].[Bhutan]' />
              <field name='[Sheet1].[Bolivia]' />
              <field name='[Sheet1].[Bosnia and Herzegovi0]' />
              <field name='[Sheet1].[Botswa0]' />
              <field name='[Sheet1].[Brazil]' />
              <field name='[Sheet1].[Brunei Darussalam]' />
              <field name='[Sheet1].[Bulgaria]' />
              <field name='[Sheet1].[Burki0 Faso]' />
              <field name='[Sheet1].[Burundi]' />
              <field name='[Sheet1].[Ca0da]' />
              <field name='[Sheet1].[Cabo Verde]' />
              <field name='[Sheet1].[Cambodia]' />
              <field name='[Sheet1].[Cameroon]' />
              <field name='[Sheet1].[Central African Republic]' />
              <field name='[Sheet1].[Chad]' />
              <field name='[Sheet1].[Chi0]' />
              <field name='[Sheet1].[Chile]' />
              <field name='[Sheet1].[Colombia]' />
              <field name='[Sheet1].[Comoros]' />
              <field name='[Sheet1].[Congo, Dem. Rep.]' />
              <field name='[Sheet1].[Congo, Rep.]' />
              <field name='[Sheet1].[Costa Rica]' />
              <field name='[Sheet1].[Cote d&apos;Ivoire]' />
              <field name='[Sheet1].[Croatia]' />
              <field name='[Sheet1].[Cyprus]' />
              <field name='[Sheet1].[Czech Republic]' />
              <field name='[Sheet1].[Denmark]' />
              <field name='[Sheet1].[Developing Asia]' />
              <field name='[Sheet1].[Developing Countries]' />
              <field name='[Sheet1].[Djibouti]' />
              <field name='[Sheet1].[Dominica]' />
              <field name='[Sheet1].[Dominican Republic]' />
              <field name='[Sheet1].[East Asia &amp; Pacific developing]' />
              <field name='[Sheet1].[Ecuador]' />
              <field name='[Sheet1].[Egypt, Arab Rep.]' />
              <field name='[Sheet1].[El Salvador]' />
              <field name='[Sheet1].[Equatorial Guinea]' />
              <field name='[Sheet1].[Eritrea]' />
              <field name='[Sheet1].[Estonia]' />
              <field name='[Sheet1].[Ethiopia]' />
              <field name='[Sheet1].[Europe &amp; Central Asia developing]' />
              <field name='[Sheet1].[Fiji]' />
              <field name='[Sheet1].[Finland]' />
              <field name='[Sheet1].[France]' />
              <field name='[Sheet1].[Gabon]' />
              <field name='[Sheet1].[Gambia, The]' />
              <field name='[Sheet1].[Georgia]' />
              <field name='[Sheet1].[Germany]' />
              <field name='[Sheet1].[Gha0]' />
              <field name='[Sheet1].[Gre0da]' />
              <field name='[Sheet1].[Greece]' />
              <field name='[Sheet1].[Guatemala]' />
              <field name='[Sheet1].[Guinea-Bissau]' />
              <field name='[Sheet1].[Guinea]' />
              <field name='[Sheet1].[Guya0]' />
              <field name='[Sheet1].[Haiti]' />
              <field name='[Sheet1].[High Income Countries]' />
              <field name='[Sheet1].[High Income: Non-OECD]' />
              <field name='[Sheet1].[High income: OECD]' />
              <field name='[Sheet1].[Honduras]' />
              <field name='[Sheet1].[Hong Kong SAR, Chi0]' />
              <field name='[Sheet1].[Hungary]' />
              <field name='[Sheet1].[Iceland]' />
              <field name='[Sheet1].[India]' />
              <field name='[Sheet1].[Indonesia]' />
              <field name='[Sheet1].[Iran, Islamic Rep.]' />
              <field name='[Sheet1].[Iraq]' />
              <field name='[Sheet1].[Ireland]' />
              <field name='[Sheet1].[Israel]' />
              <field name='[Sheet1].[Italy]' />
              <field name='[Sheet1].[Jamaica]' />
              <field name='[Sheet1].[Japan]' />
              <field name='[Sheet1].[Jordan]' />
              <field name='[Sheet1].[Kazakhstan]' />
              <field name='[Sheet1].[Kenya]' />
              <field name='[Sheet1].[Kiribati]' />
              <field name='[Sheet1].[Korea, Rep.]' />
              <field name='[Sheet1].[Kuwait]' />
              <field name='[Sheet1].[Kyrgyz Republic]' />
              <field name='[Sheet1].[Lao, PDR]' />
              <field name='[Sheet1].[Latin America &amp; Caribbean developing]' />
              <field name='[Sheet1].[Latvia]' />
              <field name='[Sheet1].[Lebanon]' />
              <field name='[Sheet1].[Lesotho]' />
              <field name='[Sheet1].[Liberia]' />
              <field name='[Sheet1].[Libya]' />
              <field name='[Sheet1].[Lithuania]' />
              <field name='[Sheet1].[Low Income]' />
              <field name='[Sheet1].[Luxembourg]' />
              <field name='[Sheet1].[Macedonia, FYR]' />
              <field name='[Sheet1].[Madagascar]' />
              <field name='[Sheet1].[Malawi]' />
              <field name='[Sheet1].[Malaysia]' />
              <field name='[Sheet1].[Maldives]' />
              <field name='[Sheet1].[Mali]' />
              <field name='[Sheet1].[Malta]' />
              <field name='[Sheet1].[Mauritania]' />
              <field name='[Sheet1].[Mauritius]' />
              <field name='[Sheet1].[Mexico]' />
              <field name='[Sheet1].[Micronesia, Fed. Sts.]' />
              <field name='[Sheet1].[Middle East &amp; N. Africa developing]' />
              <field name='[Sheet1].[Middle Income Countries]' />
              <field name='[Sheet1].[Moldova, Rep.]' />
              <field name='[Sheet1].[Mongolia]' />
              <field name='[Sheet1].[Montenegro]' />
              <field name='[Sheet1].[Morocco]' />
              <field name='[Sheet1].[Mozambique]' />
              <field name='[Sheet1].[Myanmar]' />
              <field name='[Sheet1].[Nepal]' />
              <field name='[Sheet1].[Netherlands]' />
              <field name='[Sheet1].[New Zealand]' />
              <field name='[Sheet1].[Nicaragua]' />
              <field name='[Sheet1].[Niger]' />
              <field name='[Sheet1].[Nigeria]' />
              <field name='[Sheet1].[Norway]' />
              <field name='[Sheet1].[Oman]' />
              <field name='[Sheet1].[Pa0ma]' />
              <field name='[Sheet1].[Pakistan]' />
              <field name='[Sheet1].[Papua New Guinea]' />
              <field name='[Sheet1].[Paraguay]' />
              <field name='[Sheet1].[Peru]' />
              <field name='[Sheet1].[Philippines]' />
              <field name='[Sheet1].[Poland]' />
              <field name='[Sheet1].[Portugal]' />
              <field name='[Sheet1].[Qatar]' />
              <field name='[Sheet1].[Romania]' />
              <field name='[Sheet1].[Russian Federation]' />
              <field name='[Sheet1].[Rwanda]' />
              <field name='[Sheet1].[Samoa]' />
              <field name='[Sheet1].[San Marino]' />
              <field name='[Sheet1].[Sao Tome and Principe]' />
              <field name='[Sheet1].[Saudi Arabia]' />
              <field name='[Sheet1].[Senegal]' />
              <field name='[Sheet1].[Serbia]' />
              <field name='[Sheet1].[Seychelles]' />
              <field name='[Sheet1].[Sierra Leone]' />
              <field name='[Sheet1].[Singapore]' />
              <field name='[Sheet1].[Slovakia]' />
              <field name='[Sheet1].[Slovenia]' />
              <field name='[Sheet1].[Solomon Islands]' />
              <field name='[Sheet1].[South Africa]' />
              <field name='[Sheet1].[South Asia developing]' />
              <field name='[Sheet1].[South Sudan]' />
              <field name='[Sheet1].[Spain]' />
              <field name='[Sheet1].[Sri Lanka]' />
              <field name='[Sheet1].[St. Kitts and Nevis]' />
              <field name='[Sheet1].[St. Lucia]' />
              <field name='[Sheet1].[St. Vincent and the Gre0dines]' />
              <field name='[Sheet1].[Sub-Saharan Africa developing]' />
              <field name='[Sheet1].[Sudan]' />
              <field name='[Sheet1].[Suri0me]' />
              <field name='[Sheet1].[Swaziland]' />
              <field name='[Sheet1].[Sweden]' />
              <field name='[Sheet1].[Switzerland]' />
              <field name='[Sheet1].[Syrian Arab Republic]' />
              <field name='[Sheet1].[Taiwan, Chi0]' />
              <field name='[Sheet1].[Tajikistan]' />
              <field name='[Sheet1].[Tanzania, United Rep.]' />
              <field name='[Sheet1].[Thailand]' />
              <field name='[Sheet1].[Timor-Leste]' />
              <field name='[Sheet1].[Togo]' />
              <field name='[Sheet1].[Tonga]' />
              <field name='[Sheet1].[Trinidad and Tobago]' />
              <field name='[Sheet1].[Tunisia]' />
              <field name='[Sheet1].[Turkey]' />
              <field name='[Sheet1].[Turkmenistan]' />
              <field name='[Sheet1].[Uganda]' />
              <field name='[Sheet1].[Ukraine]' />
              <field name='[Sheet1].[United Arab Emirates]' />
              <field name='[Sheet1].[United Kingdom]' />
              <field name='[Sheet1].[United States]' />
              <field name='[Sheet1].[Uruguay]' />
              <field name='[Sheet1].[Uzbekistan]' />
              <field name='[Sheet1].[Vanuatu]' />
              <field name='[Sheet1].[Venezuela, RB]' />
              <field name='[Sheet1].[Viet0m]' />
              <field name='[Sheet1].[West Bank and Gaza]' />
              <field name='[Sheet1].[World (WBG members)]' />
              <field name='[Sheet1].[Yemen, Rep.]' />
              <field name='[Sheet1].[Zambia]' />
              <field name='[Sheet1].[Zimbabwe]' />
            </group>
          </groups>
          <relation connection='excel-direct.0x68k790n87pia10tidxf0kn0tn2' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:GT361:no:A1:GT361:0' header='yes' outcome='6'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='date' name='year' ordinal='1' />
              <column datatype='real' name='Afghanistan' ordinal='2' />
              <column datatype='real' name='Angola' ordinal='3' />
              <column datatype='real' name='Albania' ordinal='4' />
              <column datatype='real' name='United Arab Emirates' ordinal='5' />
              <column datatype='real' name='Argenti0' ordinal='6' />
              <column datatype='real' name='Armenia' ordinal='7' />
              <column datatype='real' name='Developing Asia' ordinal='8' />
              <column datatype='real' name='Antigua and Barbuda' ordinal='9' />
              <column datatype='real' name='Australia' ordinal='10' />
              <column datatype='real' name='Austria' ordinal='11' />
              <column datatype='real' name='Azerbaijan' ordinal='12' />
              <column datatype='real' name='Burundi' ordinal='13' />
              <column datatype='real' name='Belgium' ordinal='14' />
              <column datatype='real' name='Benin' ordinal='15' />
              <column datatype='real' name='Burki0 Faso' ordinal='16' />
              <column datatype='real' name='Bangladesh' ordinal='17' />
              <column datatype='real' name='Bulgaria' ordinal='18' />
              <column datatype='real' name='Bahrain' ordinal='19' />
              <column datatype='real' name='Bahamas' ordinal='20' />
              <column datatype='real' name='Bosnia and Herzegovi0' ordinal='21' />
              <column datatype='real' name='Belarus' ordinal='22' />
              <column datatype='integer' name='Belize' ordinal='23' />
              <column datatype='real' name='Bolivia' ordinal='24' />
              <column datatype='real' name='Brazil' ordinal='25' />
              <column datatype='real' name='Barbados' ordinal='26' />
              <column datatype='real' name='Brunei Darussalam' ordinal='27' />
              <column datatype='real' name='Bhutan' ordinal='28' />
              <column datatype='real' name='Botswa0' ordinal='29' />
              <column datatype='real' name='Central African Republic' ordinal='30' />
              <column datatype='real' name='Ca0da' ordinal='31' />
              <column datatype='real' name='Switzerland' ordinal='32' />
              <column datatype='real' name='Chile' ordinal='33' />
              <column datatype='real' name='Chi0' ordinal='34' />
              <column datatype='real' name='Cote d&apos;Ivoire' ordinal='35' />
              <column datatype='real' name='Cameroon' ordinal='36' />
              <column datatype='real' name='Congo, Dem. Rep.' ordinal='37' />
              <column datatype='real' name='Congo, Rep.' ordinal='38' />
              <column datatype='real' name='Colombia' ordinal='39' />
              <column datatype='real' name='Comoros' ordinal='40' />
              <column datatype='real' name='Cabo Verde' ordinal='41' />
              <column datatype='real' name='Costa Rica' ordinal='42' />
              <column datatype='real' name='Cyprus' ordinal='43' />
              <column datatype='real' name='Czech Republic' ordinal='44' />
              <column datatype='real' name='Germany' ordinal='45' />
              <column datatype='real' name='Developing Countries' ordinal='46' />
              <column datatype='real' name='Djibouti' ordinal='47' />
              <column datatype='real' name='Dominica' ordinal='48' />
              <column datatype='real' name='Denmark' ordinal='49' />
              <column datatype='real' name='Dominican Republic' ordinal='50' />
              <column datatype='real' name='Algeria' ordinal='51' />
              <column datatype='real' name='East Asia &amp; Pacific developing' ordinal='52' />
              <column datatype='real' name='Europe &amp; Central Asia developing' ordinal='53' />
              <column datatype='integer' name='Ecuador' ordinal='54' />
              <column datatype='real' name='Egypt, Arab Rep.' ordinal='55' />
              <column datatype='real' name='Eritrea' ordinal='56' />
              <column datatype='real' name='Spain' ordinal='57' />
              <column datatype='real' name='Estonia' ordinal='58' />
              <column datatype='real' name='Ethiopia' ordinal='59' />
              <column datatype='real' name='Finland' ordinal='60' />
              <column datatype='real' name='Fiji' ordinal='61' />
              <column datatype='real' name='France' ordinal='62' />
              <column datatype='integer' name='Micronesia, Fed. Sts.' ordinal='63' />
              <column datatype='real' name='Gabon' ordinal='64' />
              <column datatype='real' name='United Kingdom' ordinal='65' />
              <column datatype='real' name='Georgia' ordinal='66' />
              <column datatype='real' name='Gha0' ordinal='67' />
              <column datatype='real' name='Guinea' ordinal='68' />
              <column datatype='real' name='Gambia, The' ordinal='69' />
              <column datatype='real' name='Guinea-Bissau' ordinal='70' />
              <column datatype='real' name='Equatorial Guinea' ordinal='71' />
              <column datatype='real' name='Greece' ordinal='72' />
              <column datatype='real' name='Gre0da' ordinal='73' />
              <column datatype='real' name='Guatemala' ordinal='74' />
              <column datatype='real' name='Guya0' ordinal='75' />
              <column datatype='real' name='High Income Countries' ordinal='76' />
              <column datatype='real' name='Hong Kong SAR, Chi0' ordinal='77' />
              <column datatype='real' name='Honduras' ordinal='78' />
              <column datatype='real' name='Croatia' ordinal='79' />
              <column datatype='real' name='Haiti' ordinal='80' />
              <column datatype='real' name='Hungary' ordinal='81' />
              <column datatype='real' name='High income: OECD' ordinal='82' />
              <column datatype='real' name='Indonesia' ordinal='83' />
              <column datatype='real' name='India' ordinal='84' />
              <column datatype='real' name='Ireland' ordinal='85' />
              <column datatype='real' name='Iran, Islamic Rep.' ordinal='86' />
              <column datatype='real' name='Iraq' ordinal='87' />
              <column datatype='real' name='Iceland' ordinal='88' />
              <column datatype='real' name='Israel' ordinal='89' />
              <column datatype='real' name='Italy' ordinal='90' />
              <column datatype='real' name='Jamaica' ordinal='91' />
              <column datatype='real' name='Jordan' ordinal='92' />
              <column datatype='real' name='Japan' ordinal='93' />
              <column datatype='real' name='Kazakhstan' ordinal='94' />
              <column datatype='real' name='Kenya' ordinal='95' />
              <column datatype='real' name='Kyrgyz Republic' ordinal='96' />
              <column datatype='real' name='Cambodia' ordinal='97' />
              <column datatype='real' name='Kiribati' ordinal='98' />
              <column datatype='real' name='St. Kitts and Nevis' ordinal='99' />
              <column datatype='real' name='Korea, Rep.' ordinal='100' />
              <column datatype='real' name='Kuwait' ordinal='101' />
              <column datatype='real' name='Latin America &amp; Caribbean developing' ordinal='102' />
              <column datatype='real' name='Lao, PDR' ordinal='103' />
              <column datatype='real' name='Lebanon' ordinal='104' />
              <column datatype='real' name='Liberia' ordinal='105' />
              <column datatype='real' name='Libya' ordinal='106' />
              <column datatype='real' name='St. Lucia' ordinal='107' />
              <column datatype='real' name='Low Income' ordinal='108' />
              <column datatype='real' name='Sri Lanka' ordinal='109' />
              <column datatype='real' name='Lesotho' ordinal='110' />
              <column datatype='real' name='Lithuania' ordinal='111' />
              <column datatype='real' name='Luxembourg' ordinal='112' />
              <column datatype='real' name='Latvia' ordinal='113' />
              <column datatype='real' name='Morocco' ordinal='114' />
              <column datatype='real' name='Moldova, Rep.' ordinal='115' />
              <column datatype='real' name='Madagascar' ordinal='116' />
              <column datatype='real' name='Maldives' ordinal='117' />
              <column datatype='real' name='Mexico' ordinal='118' />
              <column datatype='real' name='Middle Income Countries' ordinal='119' />
              <column datatype='real' name='Macedonia, FYR' ordinal='120' />
              <column datatype='real' name='Mali' ordinal='121' />
              <column datatype='real' name='Malta' ordinal='122' />
              <column datatype='real' name='Myanmar' ordinal='123' />
              <column datatype='real' name='Middle East &amp; N. Africa developing' ordinal='124' />
              <column datatype='real' name='Montenegro' ordinal='125' />
              <column datatype='real' name='Mongolia' ordinal='126' />
              <column datatype='real' name='Mozambique' ordinal='127' />
              <column datatype='real' name='Mauritania' ordinal='128' />
              <column datatype='real' name='Mauritius' ordinal='129' />
              <column datatype='real' name='Malawi' ordinal='130' />
              <column datatype='real' name='Malaysia' ordinal='131' />
              <column datatype='real' name='0mibia' ordinal='132' />
              <column datatype='real' name='Niger' ordinal='133' />
              <column datatype='real' name='Nigeria' ordinal='134' />
              <column datatype='real' name='Nicaragua' ordinal='135' />
              <column datatype='real' name='Netherlands' ordinal='136' />
              <column datatype='real' name='Norway' ordinal='137' />
              <column datatype='real' name='Nepal' ordinal='138' />
              <column datatype='real' name='New Zealand' ordinal='139' />
              <column datatype='real' name='High Income: Non-OECD' ordinal='140' />
              <column datatype='real' name='Oman' ordinal='141' />
              <column datatype='real' name='Pakistan' ordinal='142' />
              <column datatype='integer' name='Pa0ma' ordinal='143' />
              <column datatype='real' name='Peru' ordinal='144' />
              <column datatype='real' name='Philippines' ordinal='145' />
              <column datatype='real' name='Papua New Guinea' ordinal='146' />
              <column datatype='real' name='Poland' ordinal='147' />
              <column datatype='real' name='Portugal' ordinal='148' />
              <column datatype='real' name='Paraguay' ordinal='149' />
              <column datatype='integer' name='West Bank and Gaza' ordinal='150' />
              <column datatype='real' name='Qatar' ordinal='151' />
              <column datatype='real' name='Romania' ordinal='152' />
              <column datatype='real' name='Russian Federation' ordinal='153' />
              <column datatype='real' name='Rwanda' ordinal='154' />
              <column datatype='real' name='South Asia developing' ordinal='155' />
              <column datatype='real' name='Saudi Arabia' ordinal='156' />
              <column datatype='real' name='Sudan' ordinal='157' />
              <column datatype='real' name='Senegal' ordinal='158' />
              <column datatype='real' name='Singapore' ordinal='159' />
              <column datatype='real' name='Solomon Islands' ordinal='160' />
              <column datatype='real' name='Sierra Leone' ordinal='161' />
              <column datatype='real' name='El Salvador' ordinal='162' />
              <column datatype='real' name='San Marino' ordinal='163' />
              <column datatype='real' name='Serbia' ordinal='164' />
              <column datatype='real' name='South Sudan' ordinal='165' />
              <column datatype='real' name='Sub-Saharan Africa developing' ordinal='166' />
              <column datatype='real' name='Sao Tome and Principe' ordinal='167' />
              <column datatype='real' name='Suri0me' ordinal='168' />
              <column datatype='real' name='Slovakia' ordinal='169' />
              <column datatype='real' name='Slovenia' ordinal='170' />
              <column datatype='real' name='Sweden' ordinal='171' />
              <column datatype='real' name='Swaziland' ordinal='172' />
              <column datatype='real' name='Seychelles' ordinal='173' />
              <column datatype='real' name='Syrian Arab Republic' ordinal='174' />
              <column datatype='real' name='Chad' ordinal='175' />
              <column datatype='real' name='Togo' ordinal='176' />
              <column datatype='real' name='Thailand' ordinal='177' />
              <column datatype='real' name='Tajikistan' ordinal='178' />
              <column datatype='integer' name='Turkmenistan' ordinal='179' />
              <column datatype='integer' name='Timor-Leste' ordinal='180' />
              <column datatype='real' name='Tonga' ordinal='181' />
              <column datatype='real' name='Trinidad and Tobago' ordinal='182' />
              <column datatype='real' name='Tunisia' ordinal='183' />
              <column datatype='real' name='Turkey' ordinal='184' />
              <column datatype='real' name='Taiwan, Chi0' ordinal='185' />
              <column datatype='real' name='Tanzania, United Rep.' ordinal='186' />
              <column datatype='real' name='Uganda' ordinal='187' />
              <column datatype='real' name='Ukraine' ordinal='188' />
              <column datatype='real' name='Uruguay' ordinal='189' />
              <column datatype='integer' name='United States' ordinal='190' />
              <column datatype='real' name='Uzbekistan' ordinal='191' />
              <column datatype='real' name='St. Vincent and the Gre0dines' ordinal='192' />
              <column datatype='real' name='Venezuela, RB' ordinal='193' />
              <column datatype='real' name='Viet0m' ordinal='194' />
              <column datatype='real' name='Vanuatu' ordinal='195' />
              <column datatype='real' name='World (WBG members)' ordinal='196' />
              <column datatype='real' name='Samoa' ordinal='197' />
              <column datatype='real' name='Yemen, Rep.' ordinal='198' />
              <column datatype='real' name='South Africa' ordinal='199' />
              <column datatype='real' name='Zambia' ordinal='200' />
              <column datatype='real' name='Zimbabwe' ordinal='201' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[0Mibia]' />
            <value name='[Afghanistan]' />
            <value name='[Albania]' />
            <value name='[Algeria]' />
            <value name='[Angola]' />
            <value name='[Antigua and Barbuda]' />
            <value name='[Argenti0]' />
            <value name='[Armenia]' />
            <value name='[Australia]' />
            <value name='[Austria]' />
            <value name='[Azerbaijan]' />
            <value name='[Bahamas]' />
            <value name='[Bahrain]' />
            <value name='[Bangladesh]' />
            <value name='[Barbados]' />
            <value name='[Belarus]' />
            <value name='[Belgium]' />
            <value name='[Belize]' />
            <value name='[Benin]' />
            <value name='[Bhutan]' />
            <value name='[Bolivia]' />
            <value name='[Bosnia and Herzegovi0]' />
            <value name='[Botswa0]' />
            <value name='[Brazil]' />
            <value name='[Brunei Darussalam]' />
            <value name='[Bulgaria]' />
            <value name='[Burki0 Faso]' />
            <value name='[Burundi]' />
            <value name='[Ca0da]' />
            <value name='[Cabo Verde]' />
            <value name='[Cambodia]' />
            <value name='[Cameroon]' />
            <value name='[Central African Republic]' />
            <value name='[Chad]' />
            <value name='[Chi0]' />
            <value name='[Chile]' />
            <value name='[Colombia]' />
            <value name='[Comoros]' />
            <value name='[Congo, Dem. Rep.]' />
            <value name='[Congo, Rep.]' />
            <value name='[Costa Rica]' />
            <value name='[Cote d&apos;Ivoire]' />
            <value name='[Croatia]' />
            <value name='[Cyprus]' />
            <value name='[Czech Republic]' />
            <value name='[Denmark]' />
            <value name='[Developing Asia]' />
            <value name='[Developing Countries]' />
            <value name='[Djibouti]' />
            <value name='[Dominica]' />
            <value name='[Dominican Republic]' />
            <value name='[East Asia &amp; Pacific developing]' />
            <value name='[Ecuador]' />
            <value name='[Egypt, Arab Rep.]' />
            <value name='[El Salvador]' />
            <value name='[Equatorial Guinea]' />
            <value name='[Eritrea]' />
            <value name='[Estonia]' />
            <value name='[Ethiopia]' />
            <value name='[Europe &amp; Central Asia developing]' />
            <value name='[Fiji]' />
            <value name='[Finland]' />
            <value name='[France]' />
            <value name='[Gabon]' />
            <value name='[Gambia, The]' />
            <value name='[Georgia]' />
            <value name='[Germany]' />
            <value name='[Gha0]' />
            <value name='[Gre0da]' />
            <value name='[Greece]' />
            <value name='[Guatemala]' />
            <value name='[Guinea-Bissau]' />
            <value name='[Guinea]' />
            <value name='[Guya0]' />
            <value name='[Haiti]' />
            <value name='[High Income Countries]' />
            <value name='[High Income: Non-OECD]' />
            <value name='[High income: OECD]' />
            <value name='[Honduras]' />
            <value name='[Hong Kong SAR, Chi0]' />
            <value name='[Hungary]' />
            <value name='[Iceland]' />
            <value name='[India]' />
            <value name='[Indonesia]' />
            <value name='[Iran, Islamic Rep.]' />
            <value name='[Iraq]' />
            <value name='[Ireland]' />
            <value name='[Israel]' />
            <value name='[Italy]' />
            <value name='[Jamaica]' />
            <value name='[Japan]' />
            <value name='[Jordan]' />
            <value name='[Kazakhstan]' />
            <value name='[Kenya]' />
            <value name='[Kiribati]' />
            <value name='[Korea, Rep.]' />
            <value name='[Kuwait]' />
            <value name='[Kyrgyz Republic]' />
            <value name='[Lao, PDR]' />
            <value name='[Latin America &amp; Caribbean developing]' />
            <value name='[Latvia]' />
            <value name='[Lebanon]' />
            <value name='[Lesotho]' />
            <value name='[Liberia]' />
            <value name='[Libya]' />
            <value name='[Lithuania]' />
            <value name='[Low Income]' />
            <value name='[Luxembourg]' />
            <value name='[Macedonia, FYR]' />
            <value name='[Madagascar]' />
            <value name='[Malawi]' />
            <value name='[Malaysia]' />
            <value name='[Maldives]' />
            <value name='[Mali]' />
            <value name='[Malta]' />
            <value name='[Mauritania]' />
            <value name='[Mauritius]' />
            <value name='[Mexico]' />
            <value name='[Micronesia, Fed. Sts.]' />
            <value name='[Middle East &amp; N. Africa developing]' />
            <value name='[Middle Income Countries]' />
            <value name='[Moldova, Rep.]' />
            <value name='[Mongolia]' />
            <value name='[Montenegro]' />
            <value name='[Morocco]' />
            <value name='[Mozambique]' />
            <value name='[Myanmar]' />
            <value name='[Nepal]' />
            <value name='[Netherlands]' />
            <value name='[New Zealand]' />
            <value name='[Nicaragua]' />
            <value name='[Niger]' />
            <value name='[Nigeria]' />
            <value name='[Norway]' />
            <value name='[Oman]' />
            <value name='[Pa0ma]' />
            <value name='[Pakistan]' />
            <value name='[Papua New Guinea]' />
            <value name='[Paraguay]' />
            <value name='[Peru]' />
            <value name='[Philippines]' />
            <value name='[Poland]' />
            <value name='[Portugal]' />
            <value name='[Qatar]' />
            <value name='[Romania]' />
            <value name='[Russian Federation]' />
            <value name='[Rwanda]' />
            <value name='[Samoa]' />
            <value name='[San Marino]' />
            <value name='[Sao Tome and Principe]' />
            <value name='[Saudi Arabia]' />
            <value name='[Senegal]' />
            <value name='[Serbia]' />
            <value name='[Seychelles]' />
            <value name='[Sierra Leone]' />
            <value name='[Singapore]' />
            <value name='[Slovakia]' />
            <value name='[Slovenia]' />
            <value name='[Solomon Islands]' />
            <value name='[South Africa]' />
            <value name='[South Asia developing]' />
            <value name='[South Sudan]' />
            <value name='[Spain]' />
            <value name='[Sri Lanka]' />
            <value name='[St. Kitts and Nevis]' />
            <value name='[St. Lucia]' />
            <value name='[St. Vincent and the Gre0dines]' />
            <value name='[Sub-Saharan Africa developing]' />
            <value name='[Sudan]' />
            <value name='[Suri0me]' />
            <value name='[Swaziland]' />
            <value name='[Sweden]' />
            <value name='[Switzerland]' />
            <value name='[Syrian Arab Republic]' />
            <value name='[Taiwan, Chi0]' />
            <value name='[Tajikistan]' />
            <value name='[Tanzania, United Rep.]' />
            <value name='[Thailand]' />
            <value name='[Timor-Leste]' />
            <value name='[Togo]' />
            <value name='[Tonga]' />
            <value name='[Trinidad and Tobago]' />
            <value name='[Tunisia]' />
            <value name='[Turkey]' />
            <value name='[Turkmenistan]' />
            <value name='[Uganda]' />
            <value name='[Ukraine]' />
            <value name='[United Arab Emirates]' />
            <value name='[United Kingdom]' />
            <value name='[United States]' />
            <value name='[Uruguay]' />
            <value name='[Uzbekistan]' />
            <value name='[Vanuatu]' />
            <value name='[Venezuela, RB]' />
            <value name='[Viet0m]' />
            <value name='[West Bank and Gaza]' />
            <value name='[World (WBG members)]' />
            <value name='[Yemen, Rep.]' />
            <value name='[Zambia]' />
            <value name='[Zimbabwe]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Sheet1].[0mibia]' />
              <field name='[Sheet1].[Afghanistan]' />
              <field name='[Sheet1].[Albania]' />
              <field name='[Sheet1].[Algeria]' />
              <field name='[Sheet1].[Angola]' />
              <field name='[Sheet1].[Antigua and Barbuda]' />
              <field name='[Sheet1].[Argenti0]' />
              <field name='[Sheet1].[Armenia]' />
              <field name='[Sheet1].[Australia]' />
              <field name='[Sheet1].[Austria]' />
              <field name='[Sheet1].[Azerbaijan]' />
              <field name='[Sheet1].[Bahamas]' />
              <field name='[Sheet1].[Bahrain]' />
              <field name='[Sheet1].[Bangladesh]' />
              <field name='[Sheet1].[Barbados]' />
              <field name='[Sheet1].[Belarus]' />
              <field name='[Sheet1].[Belgium]' />
              <field name='[Sheet1].[Belize]' />
              <field name='[Sheet1].[Benin]' />
              <field name='[Sheet1].[Bhutan]' />
              <field name='[Sheet1].[Bolivia]' />
              <field name='[Sheet1].[Bosnia and Herzegovi0]' />
              <field name='[Sheet1].[Botswa0]' />
              <field name='[Sheet1].[Brazil]' />
              <field name='[Sheet1].[Brunei Darussalam]' />
              <field name='[Sheet1].[Bulgaria]' />
              <field name='[Sheet1].[Burki0 Faso]' />
              <field name='[Sheet1].[Burundi]' />
              <field name='[Sheet1].[Ca0da]' />
              <field name='[Sheet1].[Cabo Verde]' />
              <field name='[Sheet1].[Cambodia]' />
              <field name='[Sheet1].[Cameroon]' />
              <field name='[Sheet1].[Central African Republic]' />
              <field name='[Sheet1].[Chad]' />
              <field name='[Sheet1].[Chi0]' />
              <field name='[Sheet1].[Chile]' />
              <field name='[Sheet1].[Colombia]' />
              <field name='[Sheet1].[Comoros]' />
              <field name='[Sheet1].[Congo, Dem. Rep.]' />
              <field name='[Sheet1].[Congo, Rep.]' />
              <field name='[Sheet1].[Costa Rica]' />
              <field name='[Sheet1].[Cote d&apos;Ivoire]' />
              <field name='[Sheet1].[Croatia]' />
              <field name='[Sheet1].[Cyprus]' />
              <field name='[Sheet1].[Czech Republic]' />
              <field name='[Sheet1].[Denmark]' />
              <field name='[Sheet1].[Developing Asia]' />
              <field name='[Sheet1].[Developing Countries]' />
              <field name='[Sheet1].[Djibouti]' />
              <field name='[Sheet1].[Dominica]' />
              <field name='[Sheet1].[Dominican Republic]' />
              <field name='[Sheet1].[East Asia &amp; Pacific developing]' />
              <field name='[Sheet1].[Ecuador]' />
              <field name='[Sheet1].[Egypt, Arab Rep.]' />
              <field name='[Sheet1].[El Salvador]' />
              <field name='[Sheet1].[Equatorial Guinea]' />
              <field name='[Sheet1].[Eritrea]' />
              <field name='[Sheet1].[Estonia]' />
              <field name='[Sheet1].[Ethiopia]' />
              <field name='[Sheet1].[Europe &amp; Central Asia developing]' />
              <field name='[Sheet1].[Fiji]' />
              <field name='[Sheet1].[Finland]' />
              <field name='[Sheet1].[France]' />
              <field name='[Sheet1].[Gabon]' />
              <field name='[Sheet1].[Gambia, The]' />
              <field name='[Sheet1].[Georgia]' />
              <field name='[Sheet1].[Germany]' />
              <field name='[Sheet1].[Gha0]' />
              <field name='[Sheet1].[Gre0da]' />
              <field name='[Sheet1].[Greece]' />
              <field name='[Sheet1].[Guatemala]' />
              <field name='[Sheet1].[Guinea-Bissau]' />
              <field name='[Sheet1].[Guinea]' />
              <field name='[Sheet1].[Guya0]' />
              <field name='[Sheet1].[Haiti]' />
              <field name='[Sheet1].[High Income Countries]' />
              <field name='[Sheet1].[High Income: Non-OECD]' />
              <field name='[Sheet1].[High income: OECD]' />
              <field name='[Sheet1].[Honduras]' />
              <field name='[Sheet1].[Hong Kong SAR, Chi0]' />
              <field name='[Sheet1].[Hungary]' />
              <field name='[Sheet1].[Iceland]' />
              <field name='[Sheet1].[India]' />
              <field name='[Sheet1].[Indonesia]' />
              <field name='[Sheet1].[Iran, Islamic Rep.]' />
              <field name='[Sheet1].[Iraq]' />
              <field name='[Sheet1].[Ireland]' />
              <field name='[Sheet1].[Israel]' />
              <field name='[Sheet1].[Italy]' />
              <field name='[Sheet1].[Jamaica]' />
              <field name='[Sheet1].[Japan]' />
              <field name='[Sheet1].[Jordan]' />
              <field name='[Sheet1].[Kazakhstan]' />
              <field name='[Sheet1].[Kenya]' />
              <field name='[Sheet1].[Kiribati]' />
              <field name='[Sheet1].[Korea, Rep.]' />
              <field name='[Sheet1].[Kuwait]' />
              <field name='[Sheet1].[Kyrgyz Republic]' />
              <field name='[Sheet1].[Lao, PDR]' />
              <field name='[Sheet1].[Latin America &amp; Caribbean developing]' />
              <field name='[Sheet1].[Latvia]' />
              <field name='[Sheet1].[Lebanon]' />
              <field name='[Sheet1].[Lesotho]' />
              <field name='[Sheet1].[Liberia]' />
              <field name='[Sheet1].[Libya]' />
              <field name='[Sheet1].[Lithuania]' />
              <field name='[Sheet1].[Low Income]' />
              <field name='[Sheet1].[Luxembourg]' />
              <field name='[Sheet1].[Macedonia, FYR]' />
              <field name='[Sheet1].[Madagascar]' />
              <field name='[Sheet1].[Malawi]' />
              <field name='[Sheet1].[Malaysia]' />
              <field name='[Sheet1].[Maldives]' />
              <field name='[Sheet1].[Mali]' />
              <field name='[Sheet1].[Malta]' />
              <field name='[Sheet1].[Mauritania]' />
              <field name='[Sheet1].[Mauritius]' />
              <field name='[Sheet1].[Mexico]' />
              <field name='[Sheet1].[Micronesia, Fed. Sts.]' />
              <field name='[Sheet1].[Middle East &amp; N. Africa developing]' />
              <field name='[Sheet1].[Middle Income Countries]' />
              <field name='[Sheet1].[Moldova, Rep.]' />
              <field name='[Sheet1].[Mongolia]' />
              <field name='[Sheet1].[Montenegro]' />
              <field name='[Sheet1].[Morocco]' />
              <field name='[Sheet1].[Mozambique]' />
              <field name='[Sheet1].[Myanmar]' />
              <field name='[Sheet1].[Nepal]' />
              <field name='[Sheet1].[Netherlands]' />
              <field name='[Sheet1].[New Zealand]' />
              <field name='[Sheet1].[Nicaragua]' />
              <field name='[Sheet1].[Niger]' />
              <field name='[Sheet1].[Nigeria]' />
              <field name='[Sheet1].[Norway]' />
              <field name='[Sheet1].[Oman]' />
              <field name='[Sheet1].[Pa0ma]' />
              <field name='[Sheet1].[Pakistan]' />
              <field name='[Sheet1].[Papua New Guinea]' />
              <field name='[Sheet1].[Paraguay]' />
              <field name='[Sheet1].[Peru]' />
              <field name='[Sheet1].[Philippines]' />
              <field name='[Sheet1].[Poland]' />
              <field name='[Sheet1].[Portugal]' />
              <field name='[Sheet1].[Qatar]' />
              <field name='[Sheet1].[Romania]' />
              <field name='[Sheet1].[Russian Federation]' />
              <field name='[Sheet1].[Rwanda]' />
              <field name='[Sheet1].[Samoa]' />
              <field name='[Sheet1].[San Marino]' />
              <field name='[Sheet1].[Sao Tome and Principe]' />
              <field name='[Sheet1].[Saudi Arabia]' />
              <field name='[Sheet1].[Senegal]' />
              <field name='[Sheet1].[Serbia]' />
              <field name='[Sheet1].[Seychelles]' />
              <field name='[Sheet1].[Sierra Leone]' />
              <field name='[Sheet1].[Singapore]' />
              <field name='[Sheet1].[Slovakia]' />
              <field name='[Sheet1].[Slovenia]' />
              <field name='[Sheet1].[Solomon Islands]' />
              <field name='[Sheet1].[South Africa]' />
              <field name='[Sheet1].[South Asia developing]' />
              <field name='[Sheet1].[South Sudan]' />
              <field name='[Sheet1].[Spain]' />
              <field name='[Sheet1].[Sri Lanka]' />
              <field name='[Sheet1].[St. Kitts and Nevis]' />
              <field name='[Sheet1].[St. Lucia]' />
              <field name='[Sheet1].[St. Vincent and the Gre0dines]' />
              <field name='[Sheet1].[Sub-Saharan Africa developing]' />
              <field name='[Sheet1].[Sudan]' />
              <field name='[Sheet1].[Suri0me]' />
              <field name='[Sheet1].[Swaziland]' />
              <field name='[Sheet1].[Sweden]' />
              <field name='[Sheet1].[Switzerland]' />
              <field name='[Sheet1].[Syrian Arab Republic]' />
              <field name='[Sheet1].[Taiwan, Chi0]' />
              <field name='[Sheet1].[Tajikistan]' />
              <field name='[Sheet1].[Tanzania, United Rep.]' />
              <field name='[Sheet1].[Thailand]' />
              <field name='[Sheet1].[Timor-Leste]' />
              <field name='[Sheet1].[Togo]' />
              <field name='[Sheet1].[Tonga]' />
              <field name='[Sheet1].[Trinidad and Tobago]' />
              <field name='[Sheet1].[Tunisia]' />
              <field name='[Sheet1].[Turkey]' />
              <field name='[Sheet1].[Turkmenistan]' />
              <field name='[Sheet1].[Uganda]' />
              <field name='[Sheet1].[Ukraine]' />
              <field name='[Sheet1].[United Arab Emirates]' />
              <field name='[Sheet1].[United Kingdom]' />
              <field name='[Sheet1].[United States]' />
              <field name='[Sheet1].[Uruguay]' />
              <field name='[Sheet1].[Uzbekistan]' />
              <field name='[Sheet1].[Vanuatu]' />
              <field name='[Sheet1].[Venezuela, RB]' />
              <field name='[Sheet1].[Viet0m]' />
              <field name='[Sheet1].[West Bank and Gaza]' />
              <field name='[Sheet1].[World (WBG members)]' />
              <field name='[Sheet1].[Yemen, Rep.]' />
              <field name='[Sheet1].[Zambia]' />
              <field name='[Sheet1].[Zimbabwe]' />
            </group>
          </groups>
          <relation connection='excel-direct.0x68k790n87pia10tidxf0kn0tn2' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:GT361:no:A1:GT361:0' header='yes' outcome='6'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='date' name='year' ordinal='1' />
              <column datatype='real' name='Afghanistan' ordinal='2' />
              <column datatype='real' name='Angola' ordinal='3' />
              <column datatype='real' name='Albania' ordinal='4' />
              <column datatype='real' name='United Arab Emirates' ordinal='5' />
              <column datatype='real' name='Argenti0' ordinal='6' />
              <column datatype='real' name='Armenia' ordinal='7' />
              <column datatype='real' name='Developing Asia' ordinal='8' />
              <column datatype='real' name='Antigua and Barbuda' ordinal='9' />
              <column datatype='real' name='Australia' ordinal='10' />
              <column datatype='real' name='Austria' ordinal='11' />
              <column datatype='real' name='Azerbaijan' ordinal='12' />
              <column datatype='real' name='Burundi' ordinal='13' />
              <column datatype='real' name='Belgium' ordinal='14' />
              <column datatype='real' name='Benin' ordinal='15' />
              <column datatype='real' name='Burki0 Faso' ordinal='16' />
              <column datatype='real' name='Bangladesh' ordinal='17' />
              <column datatype='real' name='Bulgaria' ordinal='18' />
              <column datatype='real' name='Bahrain' ordinal='19' />
              <column datatype='real' name='Bahamas' ordinal='20' />
              <column datatype='real' name='Bosnia and Herzegovi0' ordinal='21' />
              <column datatype='real' name='Belarus' ordinal='22' />
              <column datatype='integer' name='Belize' ordinal='23' />
              <column datatype='real' name='Bolivia' ordinal='24' />
              <column datatype='real' name='Brazil' ordinal='25' />
              <column datatype='real' name='Barbados' ordinal='26' />
              <column datatype='real' name='Brunei Darussalam' ordinal='27' />
              <column datatype='real' name='Bhutan' ordinal='28' />
              <column datatype='real' name='Botswa0' ordinal='29' />
              <column datatype='real' name='Central African Republic' ordinal='30' />
              <column datatype='real' name='Ca0da' ordinal='31' />
              <column datatype='real' name='Switzerland' ordinal='32' />
              <column datatype='real' name='Chile' ordinal='33' />
              <column datatype='real' name='Chi0' ordinal='34' />
              <column datatype='real' name='Cote d&apos;Ivoire' ordinal='35' />
              <column datatype='real' name='Cameroon' ordinal='36' />
              <column datatype='real' name='Congo, Dem. Rep.' ordinal='37' />
              <column datatype='real' name='Congo, Rep.' ordinal='38' />
              <column datatype='real' name='Colombia' ordinal='39' />
              <column datatype='real' name='Comoros' ordinal='40' />
              <column datatype='real' name='Cabo Verde' ordinal='41' />
              <column datatype='real' name='Costa Rica' ordinal='42' />
              <column datatype='real' name='Cyprus' ordinal='43' />
              <column datatype='real' name='Czech Republic' ordinal='44' />
              <column datatype='real' name='Germany' ordinal='45' />
              <column datatype='real' name='Developing Countries' ordinal='46' />
              <column datatype='real' name='Djibouti' ordinal='47' />
              <column datatype='real' name='Dominica' ordinal='48' />
              <column datatype='real' name='Denmark' ordinal='49' />
              <column datatype='real' name='Dominican Republic' ordinal='50' />
              <column datatype='real' name='Algeria' ordinal='51' />
              <column datatype='real' name='East Asia &amp; Pacific developing' ordinal='52' />
              <column datatype='real' name='Europe &amp; Central Asia developing' ordinal='53' />
              <column datatype='integer' name='Ecuador' ordinal='54' />
              <column datatype='real' name='Egypt, Arab Rep.' ordinal='55' />
              <column datatype='real' name='Eritrea' ordinal='56' />
              <column datatype='real' name='Spain' ordinal='57' />
              <column datatype='real' name='Estonia' ordinal='58' />
              <column datatype='real' name='Ethiopia' ordinal='59' />
              <column datatype='real' name='Finland' ordinal='60' />
              <column datatype='real' name='Fiji' ordinal='61' />
              <column datatype='real' name='France' ordinal='62' />
              <column datatype='integer' name='Micronesia, Fed. Sts.' ordinal='63' />
              <column datatype='real' name='Gabon' ordinal='64' />
              <column datatype='real' name='United Kingdom' ordinal='65' />
              <column datatype='real' name='Georgia' ordinal='66' />
              <column datatype='real' name='Gha0' ordinal='67' />
              <column datatype='real' name='Guinea' ordinal='68' />
              <column datatype='real' name='Gambia, The' ordinal='69' />
              <column datatype='real' name='Guinea-Bissau' ordinal='70' />
              <column datatype='real' name='Equatorial Guinea' ordinal='71' />
              <column datatype='real' name='Greece' ordinal='72' />
              <column datatype='real' name='Gre0da' ordinal='73' />
              <column datatype='real' name='Guatemala' ordinal='74' />
              <column datatype='real' name='Guya0' ordinal='75' />
              <column datatype='real' name='High Income Countries' ordinal='76' />
              <column datatype='real' name='Hong Kong SAR, Chi0' ordinal='77' />
              <column datatype='real' name='Honduras' ordinal='78' />
              <column datatype='real' name='Croatia' ordinal='79' />
              <column datatype='real' name='Haiti' ordinal='80' />
              <column datatype='real' name='Hungary' ordinal='81' />
              <column datatype='real' name='High income: OECD' ordinal='82' />
              <column datatype='real' name='Indonesia' ordinal='83' />
              <column datatype='real' name='India' ordinal='84' />
              <column datatype='real' name='Ireland' ordinal='85' />
              <column datatype='real' name='Iran, Islamic Rep.' ordinal='86' />
              <column datatype='real' name='Iraq' ordinal='87' />
              <column datatype='real' name='Iceland' ordinal='88' />
              <column datatype='real' name='Israel' ordinal='89' />
              <column datatype='real' name='Italy' ordinal='90' />
              <column datatype='real' name='Jamaica' ordinal='91' />
              <column datatype='real' name='Jordan' ordinal='92' />
              <column datatype='real' name='Japan' ordinal='93' />
              <column datatype='real' name='Kazakhstan' ordinal='94' />
              <column datatype='real' name='Kenya' ordinal='95' />
              <column datatype='real' name='Kyrgyz Republic' ordinal='96' />
              <column datatype='real' name='Cambodia' ordinal='97' />
              <column datatype='real' name='Kiribati' ordinal='98' />
              <column datatype='real' name='St. Kitts and Nevis' ordinal='99' />
              <column datatype='real' name='Korea, Rep.' ordinal='100' />
              <column datatype='real' name='Kuwait' ordinal='101' />
              <column datatype='real' name='Latin America &amp; Caribbean developing' ordinal='102' />
              <column datatype='real' name='Lao, PDR' ordinal='103' />
              <column datatype='real' name='Lebanon' ordinal='104' />
              <column datatype='real' name='Liberia' ordinal='105' />
              <column datatype='real' name='Libya' ordinal='106' />
              <column datatype='real' name='St. Lucia' ordinal='107' />
              <column datatype='real' name='Low Income' ordinal='108' />
              <column datatype='real' name='Sri Lanka' ordinal='109' />
              <column datatype='real' name='Lesotho' ordinal='110' />
              <column datatype='real' name='Lithuania' ordinal='111' />
              <column datatype='real' name='Luxembourg' ordinal='112' />
              <column datatype='real' name='Latvia' ordinal='113' />
              <column datatype='real' name='Morocco' ordinal='114' />
              <column datatype='real' name='Moldova, Rep.' ordinal='115' />
              <column datatype='real' name='Madagascar' ordinal='116' />
              <column datatype='real' name='Maldives' ordinal='117' />
              <column datatype='real' name='Mexico' ordinal='118' />
              <column datatype='real' name='Middle Income Countries' ordinal='119' />
              <column datatype='real' name='Macedonia, FYR' ordinal='120' />
              <column datatype='real' name='Mali' ordinal='121' />
              <column datatype='real' name='Malta' ordinal='122' />
              <column datatype='real' name='Myanmar' ordinal='123' />
              <column datatype='real' name='Middle East &amp; N. Africa developing' ordinal='124' />
              <column datatype='real' name='Montenegro' ordinal='125' />
              <column datatype='real' name='Mongolia' ordinal='126' />
              <column datatype='real' name='Mozambique' ordinal='127' />
              <column datatype='real' name='Mauritania' ordinal='128' />
              <column datatype='real' name='Mauritius' ordinal='129' />
              <column datatype='real' name='Malawi' ordinal='130' />
              <column datatype='real' name='Malaysia' ordinal='131' />
              <column datatype='real' name='0mibia' ordinal='132' />
              <column datatype='real' name='Niger' ordinal='133' />
              <column datatype='real' name='Nigeria' ordinal='134' />
              <column datatype='real' name='Nicaragua' ordinal='135' />
              <column datatype='real' name='Netherlands' ordinal='136' />
              <column datatype='real' name='Norway' ordinal='137' />
              <column datatype='real' name='Nepal' ordinal='138' />
              <column datatype='real' name='New Zealand' ordinal='139' />
              <column datatype='real' name='High Income: Non-OECD' ordinal='140' />
              <column datatype='real' name='Oman' ordinal='141' />
              <column datatype='real' name='Pakistan' ordinal='142' />
              <column datatype='integer' name='Pa0ma' ordinal='143' />
              <column datatype='real' name='Peru' ordinal='144' />
              <column datatype='real' name='Philippines' ordinal='145' />
              <column datatype='real' name='Papua New Guinea' ordinal='146' />
              <column datatype='real' name='Poland' ordinal='147' />
              <column datatype='real' name='Portugal' ordinal='148' />
              <column datatype='real' name='Paraguay' ordinal='149' />
              <column datatype='integer' name='West Bank and Gaza' ordinal='150' />
              <column datatype='real' name='Qatar' ordinal='151' />
              <column datatype='real' name='Romania' ordinal='152' />
              <column datatype='real' name='Russian Federation' ordinal='153' />
              <column datatype='real' name='Rwanda' ordinal='154' />
              <column datatype='real' name='South Asia developing' ordinal='155' />
              <column datatype='real' name='Saudi Arabia' ordinal='156' />
              <column datatype='real' name='Sudan' ordinal='157' />
              <column datatype='real' name='Senegal' ordinal='158' />
              <column datatype='real' name='Singapore' ordinal='159' />
              <column datatype='real' name='Solomon Islands' ordinal='160' />
              <column datatype='real' name='Sierra Leone' ordinal='161' />
              <column datatype='real' name='El Salvador' ordinal='162' />
              <column datatype='real' name='San Marino' ordinal='163' />
              <column datatype='real' name='Serbia' ordinal='164' />
              <column datatype='real' name='South Sudan' ordinal='165' />
              <column datatype='real' name='Sub-Saharan Africa developing' ordinal='166' />
              <column datatype='real' name='Sao Tome and Principe' ordinal='167' />
              <column datatype='real' name='Suri0me' ordinal='168' />
              <column datatype='real' name='Slovakia' ordinal='169' />
              <column datatype='real' name='Slovenia' ordinal='170' />
              <column datatype='real' name='Sweden' ordinal='171' />
              <column datatype='real' name='Swaziland' ordinal='172' />
              <column datatype='real' name='Seychelles' ordinal='173' />
              <column datatype='real' name='Syrian Arab Republic' ordinal='174' />
              <column datatype='real' name='Chad' ordinal='175' />
              <column datatype='real' name='Togo' ordinal='176' />
              <column datatype='real' name='Thailand' ordinal='177' />
              <column datatype='real' name='Tajikistan' ordinal='178' />
              <column datatype='integer' name='Turkmenistan' ordinal='179' />
              <column datatype='integer' name='Timor-Leste' ordinal='180' />
              <column datatype='real' name='Tonga' ordinal='181' />
              <column datatype='real' name='Trinidad and Tobago' ordinal='182' />
              <column datatype='real' name='Tunisia' ordinal='183' />
              <column datatype='real' name='Turkey' ordinal='184' />
              <column datatype='real' name='Taiwan, Chi0' ordinal='185' />
              <column datatype='real' name='Tanzania, United Rep.' ordinal='186' />
              <column datatype='real' name='Uganda' ordinal='187' />
              <column datatype='real' name='Ukraine' ordinal='188' />
              <column datatype='real' name='Uruguay' ordinal='189' />
              <column datatype='integer' name='United States' ordinal='190' />
              <column datatype='real' name='Uzbekistan' ordinal='191' />
              <column datatype='real' name='St. Vincent and the Gre0dines' ordinal='192' />
              <column datatype='real' name='Venezuela, RB' ordinal='193' />
              <column datatype='real' name='Viet0m' ordinal='194' />
              <column datatype='real' name='Vanuatu' ordinal='195' />
              <column datatype='real' name='World (WBG members)' ordinal='196' />
              <column datatype='real' name='Samoa' ordinal='197' />
              <column datatype='real' name='Yemen, Rep.' ordinal='198' />
              <column datatype='real' name='South Africa' ordinal='199' />
              <column datatype='real' name='Zambia' ordinal='200' />
              <column datatype='real' name='Zimbabwe' ordinal='201' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:GT361:no:A1:GT361:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D9D40D5F207C4E639FEDD6A65472E990]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D9D40D5F207C4E639FEDD6A65472E990]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D9D40D5F207C4E639FEDD6A65472E990]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D9D40D5F207C4E639FEDD6A65472E990]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[Calculation_88946105234595841]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Pivot Field Names],&apos;Ca0da&apos;) THEN REPLACE([Pivot Field Names],&apos;Ca0da&apos;,&apos;Canada&apos;)&#10;ELSEIF CONTAINS([Pivot Field Names],&apos;Chi0&apos;) THEN REPLACE([Pivot Field Names],&apos;Chi0&apos;,&apos;China&apos;)&#10;ELSEIF CONTAINS([Pivot Field Names],&apos;Taiwan, Chi0&apos;) THEN REPLACE([Pivot Field Names],&apos;Taiwan, Chi0&apos;,&apos;Taiwan&apos;)&#10;ELSE [Pivot Field Names] END' />
      </column>
      <column caption='sss' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Exchange_Monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D9D40D5F207C4E639FEDD6A65472E990]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_88946105234595841]' derivation='None' name='[none:Calculation_88946105234595841:nk]' pivot='key' type='nominal' />
      <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country,YEAR(Year)) 1 2' hidden='true' name='[Action (Country,YEAR(Year)) 1 2]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_88946105234595841]' />
          <groupfilter function='level-members' level='[tyr:year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,YEAR(Year)) 1' hidden='true' name='[Action (Country,YEAR(Year)) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_88946105234595841]' />
          <groupfilter function='level-members' level='[yr:year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,YEAR(Year))' hidden='true' name='[Action (Country,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Pivot Field Names]' />
          <groupfilter function='level-members' level='[yr:year:ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/peramnavachandureddy/Documents/My Tableau Repository/Datasources/Sheet1 (exchange_monthly).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/25/2022 10:02:31 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (exchange_monthly)' increment-value='%null%' refresh-type='create' rows-inserted='72000' timestamp-start='2022-09-25 10:02:31.339' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>827</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D9D40D5F207C4E639FEDD6A65472E990]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>827</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D9D40D5F207C4E639FEDD6A65472E990]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Names</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Pivot Field Names]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Names</remote-alias>
              <ordinal>2</ordinal>
              <family>Pivot</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>236</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D9D40D5F207C4E639FEDD6A65472E990]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Values</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Pivot Field Values]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Values</remote-alias>
              <ordinal>3</ordinal>
              <family>Pivot</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19161</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D9D40D5F207C4E639FEDD6A65472E990]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Pivot Field Names:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ca0da&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gre0da&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0Mibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middle Income Countries&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Asia developing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suri0me&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lao, PDR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovi0&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chi0&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moldova, Rep.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High Income: Non-OECD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania, United Rep.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;World (WBG members)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argenti0&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burki0 Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Developing Asia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Low Income&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. Vincent and the Gre0dines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guya0&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan, Chi0&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Viet0m&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;High income: OECD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Europe &amp; Central Asia developing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong SAR, Chi0&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latin America &amp; Caribbean developing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middle East &amp; N. Africa developing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Developing Countries&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gha0&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sub-Saharan Africa developing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswa0&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;High Income Countries&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pa0ma&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Asia &amp; Pacific developing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_88946105234595841:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='Pivot Field Names' />
        <field-sort-custom-order field='Calculation_88946105234595841' />
        <field-sort-custom-order field='Pivot Field Values' />
      </field-sort-info>
      <filter class='categorical' column='[Pivot Field Names]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Pivot Field Names]' />
          <groupfilter function='union'>
            <groupfilter from='&quot;0Mibia&quot;' function='range' level='[Pivot Field Names]' to='&quot;Armenia&quot;' />
            <groupfilter from='&quot;Austria&quot;' function='range' level='[Pivot Field Names]' to='&quot;Belarus&quot;' />
            <groupfilter from='&quot;Belize&quot;' function='range' level='[Pivot Field Names]' to='&quot;Botswa0&quot;' />
            <groupfilter from='&quot;Brunei Darussalam&quot;' function='range' level='[Pivot Field Names]' to='&quot;Burundi&quot;' />
            <groupfilter from='&quot;Cabo Verde&quot;' function='range' level='[Pivot Field Names]' to='&quot;Chad&quot;' />
            <groupfilter from='&quot;Colombia&quot;' function='range' level='[Pivot Field Names]' to='&quot;Cyprus&quot;' />
            <groupfilter from='&quot;Developing Asia&quot;' function='range' level='[Pivot Field Names]' to='&quot;Eritrea&quot;' />
            <groupfilter from='&quot;Ethiopia&quot;' function='range' level='[Pivot Field Names]' to='&quot;Fiji&quot;' />
            <groupfilter from='&quot;Gabon&quot;' function='range' level='[Pivot Field Names]' to='&quot;Georgia&quot;' />
            <groupfilter from='&quot;Gha0&quot;' function='range' level='[Pivot Field Names]' to='&quot;Hong Kong SAR, Chi0&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Iceland&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;India&quot;' />
            <groupfilter from='&quot;Iran, Islamic Rep.&quot;' function='range' level='[Pivot Field Names]' to='&quot;Ireland&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Jamaica&quot;' />
            <groupfilter from='&quot;Kazakhstan&quot;' function='range' level='[Pivot Field Names]' to='&quot;Kiribati&quot;' />
            <groupfilter from='&quot;Kuwait&quot;' function='range' level='[Pivot Field Names]' to='&quot;Malawi&quot;' />
            <groupfilter from='&quot;Maldives&quot;' function='range' level='[Pivot Field Names]' to='&quot;Mauritius&quot;' />
            <groupfilter from='&quot;Micronesia, Fed. Sts.&quot;' function='range' level='[Pivot Field Names]' to='&quot;Nepal&quot;' />
            <groupfilter from='&quot;Nicaragua&quot;' function='range' level='[Pivot Field Names]' to='&quot;Nigeria&quot;' />
            <groupfilter from='&quot;Oman&quot;' function='range' level='[Pivot Field Names]' to='&quot;Paraguay&quot;' />
            <groupfilter from='&quot;Portugal&quot;' function='range' level='[Pivot Field Names]' to='&quot;Romania&quot;' />
            <groupfilter from='&quot;Rwanda&quot;' function='range' level='[Pivot Field Names]' to='&quot;Sierra Leone&quot;' />
            <groupfilter from='&quot;Slovenia&quot;' function='range' level='[Pivot Field Names]' to='&quot;South Sudan&quot;' />
            <groupfilter from='&quot;Sri Lanka&quot;' function='range' level='[Pivot Field Names]' to='&quot;Swaziland&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Switzerland&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Syrian Arab Republic&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Tajikistan&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Tanzania, United Rep.&quot;' />
            <groupfilter from='&quot;Timor-Leste&quot;' function='range' level='[Pivot Field Names]' to='&quot;Tunisia&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Turkmenistan&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Ukraine&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;United Arab Emirates&quot;' />
            <groupfilter from='&quot;Uruguay&quot;' function='range' level='[Pivot Field Names]' to='&quot;Zimbabwe&quot;' />
          </groupfilter>
        </groupfilter>
      </filter>
      <filter class='categorical' column='[yr:year:ok]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[yr:year:ok]' />
          <groupfilter function='member' level='[yr:year:ok]' member='2018' />
        </groupfilter>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D9D40D5F207C4E639FEDD6A65472E990'>
            <properties context=''>
              <relation name='Pivot' type='pivot'>
                <columns>
                  <column datatype='string' name='Pivot Field Names' />
                  <column datatype='real' name='Pivot Field Values' />
                </columns>
                <tag name='Pivot Field Names'>
                  <value name='[0Mibia]' />
                  <value name='[Afghanistan]' />
                  <value name='[Albania]' />
                  <value name='[Algeria]' />
                  <value name='[Angola]' />
                  <value name='[Antigua and Barbuda]' />
                  <value name='[Argenti0]' />
                  <value name='[Armenia]' />
                  <value name='[Australia]' />
                  <value name='[Austria]' />
                  <value name='[Azerbaijan]' />
                  <value name='[Bahamas]' />
                  <value name='[Bahrain]' />
                  <value name='[Bangladesh]' />
                  <value name='[Barbados]' />
                  <value name='[Belarus]' />
                  <value name='[Belgium]' />
                  <value name='[Belize]' />
                  <value name='[Benin]' />
                  <value name='[Bhutan]' />
                  <value name='[Bolivia]' />
                  <value name='[Bosnia and Herzegovi0]' />
                  <value name='[Botswa0]' />
                  <value name='[Brazil]' />
                  <value name='[Brunei Darussalam]' />
                  <value name='[Bulgaria]' />
                  <value name='[Burki0 Faso]' />
                  <value name='[Burundi]' />
                  <value name='[Ca0da]' />
                  <value name='[Cabo Verde]' />
                  <value name='[Cambodia]' />
                  <value name='[Cameroon]' />
                  <value name='[Central African Republic]' />
                  <value name='[Chad]' />
                  <value name='[Chi0]' />
                  <value name='[Chile]' />
                  <value name='[Colombia]' />
                  <value name='[Comoros]' />
                  <value name='[Congo, Dem. Rep.]' />
                  <value name='[Congo, Rep.]' />
                  <value name='[Costa Rica]' />
                  <value name='[Cote d&apos;Ivoire]' />
                  <value name='[Croatia]' />
                  <value name='[Cyprus]' />
                  <value name='[Czech Republic]' />
                  <value name='[Denmark]' />
                  <value name='[Developing Asia]' />
                  <value name='[Developing Countries]' />
                  <value name='[Djibouti]' />
                  <value name='[Dominica]' />
                  <value name='[Dominican Republic]' />
                  <value name='[East Asia &amp; Pacific developing]' />
                  <value name='[Ecuador]' />
                  <value name='[Egypt, Arab Rep.]' />
                  <value name='[El Salvador]' />
                  <value name='[Equatorial Guinea]' />
                  <value name='[Eritrea]' />
                  <value name='[Estonia]' />
                  <value name='[Ethiopia]' />
                  <value name='[Europe &amp; Central Asia developing]' />
                  <value name='[Fiji]' />
                  <value name='[Finland]' />
                  <value name='[France]' />
                  <value name='[Gabon]' />
                  <value name='[Gambia, The]' />
                  <value name='[Georgia]' />
                  <value name='[Germany]' />
                  <value name='[Gha0]' />
                  <value name='[Gre0da]' />
                  <value name='[Greece]' />
                  <value name='[Guatemala]' />
                  <value name='[Guinea-Bissau]' />
                  <value name='[Guinea]' />
                  <value name='[Guya0]' />
                  <value name='[Haiti]' />
                  <value name='[High Income Countries]' />
                  <value name='[High Income: Non-OECD]' />
                  <value name='[High income: OECD]' />
                  <value name='[Honduras]' />
                  <value name='[Hong Kong SAR, Chi0]' />
                  <value name='[Hungary]' />
                  <value name='[Iceland]' />
                  <value name='[India]' />
                  <value name='[Indonesia]' />
                  <value name='[Iran, Islamic Rep.]' />
                  <value name='[Iraq]' />
                  <value name='[Ireland]' />
                  <value name='[Israel]' />
                  <value name='[Italy]' />
                  <value name='[Jamaica]' />
                  <value name='[Japan]' />
                  <value name='[Jordan]' />
                  <value name='[Kazakhstan]' />
                  <value name='[Kenya]' />
                  <value name='[Kiribati]' />
                  <value name='[Korea, Rep.]' />
                  <value name='[Kuwait]' />
                  <value name='[Kyrgyz Republic]' />
                  <value name='[Lao, PDR]' />
                  <value name='[Latin America &amp; Caribbean developing]' />
                  <value name='[Latvia]' />
                  <value name='[Lebanon]' />
                  <value name='[Lesotho]' />
                  <value name='[Liberia]' />
                  <value name='[Libya]' />
                  <value name='[Lithuania]' />
                  <value name='[Low Income]' />
                  <value name='[Luxembourg]' />
                  <value name='[Macedonia, FYR]' />
                  <value name='[Madagascar]' />
                  <value name='[Malawi]' />
                  <value name='[Malaysia]' />
                  <value name='[Maldives]' />
                  <value name='[Mali]' />
                  <value name='[Malta]' />
                  <value name='[Mauritania]' />
                  <value name='[Mauritius]' />
                  <value name='[Mexico]' />
                  <value name='[Micronesia, Fed. Sts.]' />
                  <value name='[Middle East &amp; N. Africa developing]' />
                  <value name='[Middle Income Countries]' />
                  <value name='[Moldova, Rep.]' />
                  <value name='[Mongolia]' />
                  <value name='[Montenegro]' />
                  <value name='[Morocco]' />
                  <value name='[Mozambique]' />
                  <value name='[Myanmar]' />
                  <value name='[Nepal]' />
                  <value name='[Netherlands]' />
                  <value name='[New Zealand]' />
                  <value name='[Nicaragua]' />
                  <value name='[Niger]' />
                  <value name='[Nigeria]' />
                  <value name='[Norway]' />
                  <value name='[Oman]' />
                  <value name='[Pa0ma]' />
                  <value name='[Pakistan]' />
                  <value name='[Papua New Guinea]' />
                  <value name='[Paraguay]' />
                  <value name='[Peru]' />
                  <value name='[Philippines]' />
                  <value name='[Poland]' />
                  <value name='[Portugal]' />
                  <value name='[Qatar]' />
                  <value name='[Romania]' />
                  <value name='[Russian Federation]' />
                  <value name='[Rwanda]' />
                  <value name='[Samoa]' />
                  <value name='[San Marino]' />
                  <value name='[Sao Tome and Principe]' />
                  <value name='[Saudi Arabia]' />
                  <value name='[Senegal]' />
                  <value name='[Serbia]' />
                  <value name='[Seychelles]' />
                  <value name='[Sierra Leone]' />
                  <value name='[Singapore]' />
                  <value name='[Slovakia]' />
                  <value name='[Slovenia]' />
                  <value name='[Solomon Islands]' />
                  <value name='[South Africa]' />
                  <value name='[South Asia developing]' />
                  <value name='[South Sudan]' />
                  <value name='[Spain]' />
                  <value name='[Sri Lanka]' />
                  <value name='[St. Kitts and Nevis]' />
                  <value name='[St. Lucia]' />
                  <value name='[St. Vincent and the Gre0dines]' />
                  <value name='[Sub-Saharan Africa developing]' />
                  <value name='[Sudan]' />
                  <value name='[Suri0me]' />
                  <value name='[Swaziland]' />
                  <value name='[Sweden]' />
                  <value name='[Switzerland]' />
                  <value name='[Syrian Arab Republic]' />
                  <value name='[Taiwan, Chi0]' />
                  <value name='[Tajikistan]' />
                  <value name='[Tanzania, United Rep.]' />
                  <value name='[Thailand]' />
                  <value name='[Timor-Leste]' />
                  <value name='[Togo]' />
                  <value name='[Tonga]' />
                  <value name='[Trinidad and Tobago]' />
                  <value name='[Tunisia]' />
                  <value name='[Turkey]' />
                  <value name='[Turkmenistan]' />
                  <value name='[Uganda]' />
                  <value name='[Ukraine]' />
                  <value name='[United Arab Emirates]' />
                  <value name='[United Kingdom]' />
                  <value name='[United States]' />
                  <value name='[Uruguay]' />
                  <value name='[Uzbekistan]' />
                  <value name='[Vanuatu]' />
                  <value name='[Venezuela, RB]' />
                  <value name='[Viet0m]' />
                  <value name='[West Bank and Gaza]' />
                  <value name='[World (WBG members)]' />
                  <value name='[Yemen, Rep.]' />
                  <value name='[Zambia]' />
                  <value name='[Zimbabwe]' />
                </tag>
                <groups>
                  <group name='Pivot Field Values'>
                    <field name='[Sheet1].[0mibia]' />
                    <field name='[Sheet1].[Afghanistan]' />
                    <field name='[Sheet1].[Albania]' />
                    <field name='[Sheet1].[Algeria]' />
                    <field name='[Sheet1].[Angola]' />
                    <field name='[Sheet1].[Antigua and Barbuda]' />
                    <field name='[Sheet1].[Argenti0]' />
                    <field name='[Sheet1].[Armenia]' />
                    <field name='[Sheet1].[Australia]' />
                    <field name='[Sheet1].[Austria]' />
                    <field name='[Sheet1].[Azerbaijan]' />
                    <field name='[Sheet1].[Bahamas]' />
                    <field name='[Sheet1].[Bahrain]' />
                    <field name='[Sheet1].[Bangladesh]' />
                    <field name='[Sheet1].[Barbados]' />
                    <field name='[Sheet1].[Belarus]' />
                    <field name='[Sheet1].[Belgium]' />
                    <field name='[Sheet1].[Belize]' />
                    <field name='[Sheet1].[Benin]' />
                    <field name='[Sheet1].[Bhutan]' />
                    <field name='[Sheet1].[Bolivia]' />
                    <field name='[Sheet1].[Bosnia and Herzegovi0]' />
                    <field name='[Sheet1].[Botswa0]' />
                    <field name='[Sheet1].[Brazil]' />
                    <field name='[Sheet1].[Brunei Darussalam]' />
                    <field name='[Sheet1].[Bulgaria]' />
                    <field name='[Sheet1].[Burki0 Faso]' />
                    <field name='[Sheet1].[Burundi]' />
                    <field name='[Sheet1].[Ca0da]' />
                    <field name='[Sheet1].[Cabo Verde]' />
                    <field name='[Sheet1].[Cambodia]' />
                    <field name='[Sheet1].[Cameroon]' />
                    <field name='[Sheet1].[Central African Republic]' />
                    <field name='[Sheet1].[Chad]' />
                    <field name='[Sheet1].[Chi0]' />
                    <field name='[Sheet1].[Chile]' />
                    <field name='[Sheet1].[Colombia]' />
                    <field name='[Sheet1].[Comoros]' />
                    <field name='[Sheet1].[Congo, Dem. Rep.]' />
                    <field name='[Sheet1].[Congo, Rep.]' />
                    <field name='[Sheet1].[Costa Rica]' />
                    <field name='[Sheet1].[Cote d&apos;Ivoire]' />
                    <field name='[Sheet1].[Croatia]' />
                    <field name='[Sheet1].[Cyprus]' />
                    <field name='[Sheet1].[Czech Republic]' />
                    <field name='[Sheet1].[Denmark]' />
                    <field name='[Sheet1].[Developing Asia]' />
                    <field name='[Sheet1].[Developing Countries]' />
                    <field name='[Sheet1].[Djibouti]' />
                    <field name='[Sheet1].[Dominica]' />
                    <field name='[Sheet1].[Dominican Republic]' />
                    <field name='[Sheet1].[East Asia &amp; Pacific developing]' />
                    <field name='[Sheet1].[Ecuador]' />
                    <field name='[Sheet1].[Egypt, Arab Rep.]' />
                    <field name='[Sheet1].[El Salvador]' />
                    <field name='[Sheet1].[Equatorial Guinea]' />
                    <field name='[Sheet1].[Eritrea]' />
                    <field name='[Sheet1].[Estonia]' />
                    <field name='[Sheet1].[Ethiopia]' />
                    <field name='[Sheet1].[Europe &amp; Central Asia developing]' />
                    <field name='[Sheet1].[Fiji]' />
                    <field name='[Sheet1].[Finland]' />
                    <field name='[Sheet1].[France]' />
                    <field name='[Sheet1].[Gabon]' />
                    <field name='[Sheet1].[Gambia, The]' />
                    <field name='[Sheet1].[Georgia]' />
                    <field name='[Sheet1].[Germany]' />
                    <field name='[Sheet1].[Gha0]' />
                    <field name='[Sheet1].[Gre0da]' />
                    <field name='[Sheet1].[Greece]' />
                    <field name='[Sheet1].[Guatemala]' />
                    <field name='[Sheet1].[Guinea-Bissau]' />
                    <field name='[Sheet1].[Guinea]' />
                    <field name='[Sheet1].[Guya0]' />
                    <field name='[Sheet1].[Haiti]' />
                    <field name='[Sheet1].[High Income Countries]' />
                    <field name='[Sheet1].[High Income: Non-OECD]' />
                    <field name='[Sheet1].[High income: OECD]' />
                    <field name='[Sheet1].[Honduras]' />
                    <field name='[Sheet1].[Hong Kong SAR, Chi0]' />
                    <field name='[Sheet1].[Hungary]' />
                    <field name='[Sheet1].[Iceland]' />
                    <field name='[Sheet1].[India]' />
                    <field name='[Sheet1].[Indonesia]' />
                    <field name='[Sheet1].[Iran, Islamic Rep.]' />
                    <field name='[Sheet1].[Iraq]' />
                    <field name='[Sheet1].[Ireland]' />
                    <field name='[Sheet1].[Israel]' />
                    <field name='[Sheet1].[Italy]' />
                    <field name='[Sheet1].[Jamaica]' />
                    <field name='[Sheet1].[Japan]' />
                    <field name='[Sheet1].[Jordan]' />
                    <field name='[Sheet1].[Kazakhstan]' />
                    <field name='[Sheet1].[Kenya]' />
                    <field name='[Sheet1].[Kiribati]' />
                    <field name='[Sheet1].[Korea, Rep.]' />
                    <field name='[Sheet1].[Kuwait]' />
                    <field name='[Sheet1].[Kyrgyz Republic]' />
                    <field name='[Sheet1].[Lao, PDR]' />
                    <field name='[Sheet1].[Latin America &amp; Caribbean developing]' />
                    <field name='[Sheet1].[Latvia]' />
                    <field name='[Sheet1].[Lebanon]' />
                    <field name='[Sheet1].[Lesotho]' />
                    <field name='[Sheet1].[Liberia]' />
                    <field name='[Sheet1].[Libya]' />
                    <field name='[Sheet1].[Lithuania]' />
                    <field name='[Sheet1].[Low Income]' />
                    <field name='[Sheet1].[Luxembourg]' />
                    <field name='[Sheet1].[Macedonia, FYR]' />
                    <field name='[Sheet1].[Madagascar]' />
                    <field name='[Sheet1].[Malawi]' />
                    <field name='[Sheet1].[Malaysia]' />
                    <field name='[Sheet1].[Maldives]' />
                    <field name='[Sheet1].[Mali]' />
                    <field name='[Sheet1].[Malta]' />
                    <field name='[Sheet1].[Mauritania]' />
                    <field name='[Sheet1].[Mauritius]' />
                    <field name='[Sheet1].[Mexico]' />
                    <field name='[Sheet1].[Micronesia, Fed. Sts.]' />
                    <field name='[Sheet1].[Middle East &amp; N. Africa developing]' />
                    <field name='[Sheet1].[Middle Income Countries]' />
                    <field name='[Sheet1].[Moldova, Rep.]' />
                    <field name='[Sheet1].[Mongolia]' />
                    <field name='[Sheet1].[Montenegro]' />
                    <field name='[Sheet1].[Morocco]' />
                    <field name='[Sheet1].[Mozambique]' />
                    <field name='[Sheet1].[Myanmar]' />
                    <field name='[Sheet1].[Nepal]' />
                    <field name='[Sheet1].[Netherlands]' />
                    <field name='[Sheet1].[New Zealand]' />
                    <field name='[Sheet1].[Nicaragua]' />
                    <field name='[Sheet1].[Niger]' />
                    <field name='[Sheet1].[Nigeria]' />
                    <field name='[Sheet1].[Norway]' />
                    <field name='[Sheet1].[Oman]' />
                    <field name='[Sheet1].[Pa0ma]' />
                    <field name='[Sheet1].[Pakistan]' />
                    <field name='[Sheet1].[Papua New Guinea]' />
                    <field name='[Sheet1].[Paraguay]' />
                    <field name='[Sheet1].[Peru]' />
                    <field name='[Sheet1].[Philippines]' />
                    <field name='[Sheet1].[Poland]' />
                    <field name='[Sheet1].[Portugal]' />
                    <field name='[Sheet1].[Qatar]' />
                    <field name='[Sheet1].[Romania]' />
                    <field name='[Sheet1].[Russian Federation]' />
                    <field name='[Sheet1].[Rwanda]' />
                    <field name='[Sheet1].[Samoa]' />
                    <field name='[Sheet1].[San Marino]' />
                    <field name='[Sheet1].[Sao Tome and Principe]' />
                    <field name='[Sheet1].[Saudi Arabia]' />
                    <field name='[Sheet1].[Senegal]' />
                    <field name='[Sheet1].[Serbia]' />
                    <field name='[Sheet1].[Seychelles]' />
                    <field name='[Sheet1].[Sierra Leone]' />
                    <field name='[Sheet1].[Singapore]' />
                    <field name='[Sheet1].[Slovakia]' />
                    <field name='[Sheet1].[Slovenia]' />
                    <field name='[Sheet1].[Solomon Islands]' />
                    <field name='[Sheet1].[South Africa]' />
                    <field name='[Sheet1].[South Asia developing]' />
                    <field name='[Sheet1].[South Sudan]' />
                    <field name='[Sheet1].[Spain]' />
                    <field name='[Sheet1].[Sri Lanka]' />
                    <field name='[Sheet1].[St. Kitts and Nevis]' />
                    <field name='[Sheet1].[St. Lucia]' />
                    <field name='[Sheet1].[St. Vincent and the Gre0dines]' />
                    <field name='[Sheet1].[Sub-Saharan Africa developing]' />
                    <field name='[Sheet1].[Sudan]' />
                    <field name='[Sheet1].[Suri0me]' />
                    <field name='[Sheet1].[Swaziland]' />
                    <field name='[Sheet1].[Sweden]' />
                    <field name='[Sheet1].[Switzerland]' />
                    <field name='[Sheet1].[Syrian Arab Republic]' />
                    <field name='[Sheet1].[Taiwan, Chi0]' />
                    <field name='[Sheet1].[Tajikistan]' />
                    <field name='[Sheet1].[Tanzania, United Rep.]' />
                    <field name='[Sheet1].[Thailand]' />
                    <field name='[Sheet1].[Timor-Leste]' />
                    <field name='[Sheet1].[Togo]' />
                    <field name='[Sheet1].[Tonga]' />
                    <field name='[Sheet1].[Trinidad and Tobago]' />
                    <field name='[Sheet1].[Tunisia]' />
                    <field name='[Sheet1].[Turkey]' />
                    <field name='[Sheet1].[Turkmenistan]' />
                    <field name='[Sheet1].[Uganda]' />
                    <field name='[Sheet1].[Ukraine]' />
                    <field name='[Sheet1].[United Arab Emirates]' />
                    <field name='[Sheet1].[United Kingdom]' />
                    <field name='[Sheet1].[United States]' />
                    <field name='[Sheet1].[Uruguay]' />
                    <field name='[Sheet1].[Uzbekistan]' />
                    <field name='[Sheet1].[Vanuatu]' />
                    <field name='[Sheet1].[Venezuela, RB]' />
                    <field name='[Sheet1].[Viet0m]' />
                    <field name='[Sheet1].[West Bank and Gaza]' />
                    <field name='[Sheet1].[World (WBG members)]' />
                    <field name='[Sheet1].[Yemen, Rep.]' />
                    <field name='[Sheet1].[Zambia]' />
                    <field name='[Sheet1].[Zimbabwe]' />
                  </group>
                </groups>
                <relation connection='excel-direct.0x68k790n87pia10tidxf0kn0tn2' name='Sheet1' table='[Sheet1$]' type='table'>
                  <columns gridOrigin='A1:GT361:no:A1:GT361:0' header='yes' outcome='6'>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='date' name='year' ordinal='1' />
                    <column datatype='real' name='Afghanistan' ordinal='2' />
                    <column datatype='real' name='Angola' ordinal='3' />
                    <column datatype='real' name='Albania' ordinal='4' />
                    <column datatype='real' name='United Arab Emirates' ordinal='5' />
                    <column datatype='real' name='Argenti0' ordinal='6' />
                    <column datatype='real' name='Armenia' ordinal='7' />
                    <column datatype='real' name='Developing Asia' ordinal='8' />
                    <column datatype='real' name='Antigua and Barbuda' ordinal='9' />
                    <column datatype='real' name='Australia' ordinal='10' />
                    <column datatype='real' name='Austria' ordinal='11' />
                    <column datatype='real' name='Azerbaijan' ordinal='12' />
                    <column datatype='real' name='Burundi' ordinal='13' />
                    <column datatype='real' name='Belgium' ordinal='14' />
                    <column datatype='real' name='Benin' ordinal='15' />
                    <column datatype='real' name='Burki0 Faso' ordinal='16' />
                    <column datatype='real' name='Bangladesh' ordinal='17' />
                    <column datatype='real' name='Bulgaria' ordinal='18' />
                    <column datatype='real' name='Bahrain' ordinal='19' />
                    <column datatype='real' name='Bahamas' ordinal='20' />
                    <column datatype='real' name='Bosnia and Herzegovi0' ordinal='21' />
                    <column datatype='real' name='Belarus' ordinal='22' />
                    <column datatype='integer' name='Belize' ordinal='23' />
                    <column datatype='real' name='Bolivia' ordinal='24' />
                    <column datatype='real' name='Brazil' ordinal='25' />
                    <column datatype='real' name='Barbados' ordinal='26' />
                    <column datatype='real' name='Brunei Darussalam' ordinal='27' />
                    <column datatype='real' name='Bhutan' ordinal='28' />
                    <column datatype='real' name='Botswa0' ordinal='29' />
                    <column datatype='real' name='Central African Republic' ordinal='30' />
                    <column datatype='real' name='Ca0da' ordinal='31' />
                    <column datatype='real' name='Switzerland' ordinal='32' />
                    <column datatype='real' name='Chile' ordinal='33' />
                    <column datatype='real' name='Chi0' ordinal='34' />
                    <column datatype='real' name='Cote d&apos;Ivoire' ordinal='35' />
                    <column datatype='real' name='Cameroon' ordinal='36' />
                    <column datatype='real' name='Congo, Dem. Rep.' ordinal='37' />
                    <column datatype='real' name='Congo, Rep.' ordinal='38' />
                    <column datatype='real' name='Colombia' ordinal='39' />
                    <column datatype='real' name='Comoros' ordinal='40' />
                    <column datatype='real' name='Cabo Verde' ordinal='41' />
                    <column datatype='real' name='Costa Rica' ordinal='42' />
                    <column datatype='real' name='Cyprus' ordinal='43' />
                    <column datatype='real' name='Czech Republic' ordinal='44' />
                    <column datatype='real' name='Germany' ordinal='45' />
                    <column datatype='real' name='Developing Countries' ordinal='46' />
                    <column datatype='real' name='Djibouti' ordinal='47' />
                    <column datatype='real' name='Dominica' ordinal='48' />
                    <column datatype='real' name='Denmark' ordinal='49' />
                    <column datatype='real' name='Dominican Republic' ordinal='50' />
                    <column datatype='real' name='Algeria' ordinal='51' />
                    <column datatype='real' name='East Asia &amp; Pacific developing' ordinal='52' />
                    <column datatype='real' name='Europe &amp; Central Asia developing' ordinal='53' />
                    <column datatype='integer' name='Ecuador' ordinal='54' />
                    <column datatype='real' name='Egypt, Arab Rep.' ordinal='55' />
                    <column datatype='real' name='Eritrea' ordinal='56' />
                    <column datatype='real' name='Spain' ordinal='57' />
                    <column datatype='real' name='Estonia' ordinal='58' />
                    <column datatype='real' name='Ethiopia' ordinal='59' />
                    <column datatype='real' name='Finland' ordinal='60' />
                    <column datatype='real' name='Fiji' ordinal='61' />
                    <column datatype='real' name='France' ordinal='62' />
                    <column datatype='integer' name='Micronesia, Fed. Sts.' ordinal='63' />
                    <column datatype='real' name='Gabon' ordinal='64' />
                    <column datatype='real' name='United Kingdom' ordinal='65' />
                    <column datatype='real' name='Georgia' ordinal='66' />
                    <column datatype='real' name='Gha0' ordinal='67' />
                    <column datatype='real' name='Guinea' ordinal='68' />
                    <column datatype='real' name='Gambia, The' ordinal='69' />
                    <column datatype='real' name='Guinea-Bissau' ordinal='70' />
                    <column datatype='real' name='Equatorial Guinea' ordinal='71' />
                    <column datatype='real' name='Greece' ordinal='72' />
                    <column datatype='real' name='Gre0da' ordinal='73' />
                    <column datatype='real' name='Guatemala' ordinal='74' />
                    <column datatype='real' name='Guya0' ordinal='75' />
                    <column datatype='real' name='High Income Countries' ordinal='76' />
                    <column datatype='real' name='Hong Kong SAR, Chi0' ordinal='77' />
                    <column datatype='real' name='Honduras' ordinal='78' />
                    <column datatype='real' name='Croatia' ordinal='79' />
                    <column datatype='real' name='Haiti' ordinal='80' />
                    <column datatype='real' name='Hungary' ordinal='81' />
                    <column datatype='real' name='High income: OECD' ordinal='82' />
                    <column datatype='real' name='Indonesia' ordinal='83' />
                    <column datatype='real' name='India' ordinal='84' />
                    <column datatype='real' name='Ireland' ordinal='85' />
                    <column datatype='real' name='Iran, Islamic Rep.' ordinal='86' />
                    <column datatype='real' name='Iraq' ordinal='87' />
                    <column datatype='real' name='Iceland' ordinal='88' />
                    <column datatype='real' name='Israel' ordinal='89' />
                    <column datatype='real' name='Italy' ordinal='90' />
                    <column datatype='real' name='Jamaica' ordinal='91' />
                    <column datatype='real' name='Jordan' ordinal='92' />
                    <column datatype='real' name='Japan' ordinal='93' />
                    <column datatype='real' name='Kazakhstan' ordinal='94' />
                    <column datatype='real' name='Kenya' ordinal='95' />
                    <column datatype='real' name='Kyrgyz Republic' ordinal='96' />
                    <column datatype='real' name='Cambodia' ordinal='97' />
                    <column datatype='real' name='Kiribati' ordinal='98' />
                    <column datatype='real' name='St. Kitts and Nevis' ordinal='99' />
                    <column datatype='real' name='Korea, Rep.' ordinal='100' />
                    <column datatype='real' name='Kuwait' ordinal='101' />
                    <column datatype='real' name='Latin America &amp; Caribbean developing' ordinal='102' />
                    <column datatype='real' name='Lao, PDR' ordinal='103' />
                    <column datatype='real' name='Lebanon' ordinal='104' />
                    <column datatype='real' name='Liberia' ordinal='105' />
                    <column datatype='real' name='Libya' ordinal='106' />
                    <column datatype='real' name='St. Lucia' ordinal='107' />
                    <column datatype='real' name='Low Income' ordinal='108' />
                    <column datatype='real' name='Sri Lanka' ordinal='109' />
                    <column datatype='real' name='Lesotho' ordinal='110' />
                    <column datatype='real' name='Lithuania' ordinal='111' />
                    <column datatype='real' name='Luxembourg' ordinal='112' />
                    <column datatype='real' name='Latvia' ordinal='113' />
                    <column datatype='real' name='Morocco' ordinal='114' />
                    <column datatype='real' name='Moldova, Rep.' ordinal='115' />
                    <column datatype='real' name='Madagascar' ordinal='116' />
                    <column datatype='real' name='Maldives' ordinal='117' />
                    <column datatype='real' name='Mexico' ordinal='118' />
                    <column datatype='real' name='Middle Income Countries' ordinal='119' />
                    <column datatype='real' name='Macedonia, FYR' ordinal='120' />
                    <column datatype='real' name='Mali' ordinal='121' />
                    <column datatype='real' name='Malta' ordinal='122' />
                    <column datatype='real' name='Myanmar' ordinal='123' />
                    <column datatype='real' name='Middle East &amp; N. Africa developing' ordinal='124' />
                    <column datatype='real' name='Montenegro' ordinal='125' />
                    <column datatype='real' name='Mongolia' ordinal='126' />
                    <column datatype='real' name='Mozambique' ordinal='127' />
                    <column datatype='real' name='Mauritania' ordinal='128' />
                    <column datatype='real' name='Mauritius' ordinal='129' />
                    <column datatype='real' name='Malawi' ordinal='130' />
                    <column datatype='real' name='Malaysia' ordinal='131' />
                    <column datatype='real' name='0mibia' ordinal='132' />
                    <column datatype='real' name='Niger' ordinal='133' />
                    <column datatype='real' name='Nigeria' ordinal='134' />
                    <column datatype='real' name='Nicaragua' ordinal='135' />
                    <column datatype='real' name='Netherlands' ordinal='136' />
                    <column datatype='real' name='Norway' ordinal='137' />
                    <column datatype='real' name='Nepal' ordinal='138' />
                    <column datatype='real' name='New Zealand' ordinal='139' />
                    <column datatype='real' name='High Income: Non-OECD' ordinal='140' />
                    <column datatype='real' name='Oman' ordinal='141' />
                    <column datatype='real' name='Pakistan' ordinal='142' />
                    <column datatype='integer' name='Pa0ma' ordinal='143' />
                    <column datatype='real' name='Peru' ordinal='144' />
                    <column datatype='real' name='Philippines' ordinal='145' />
                    <column datatype='real' name='Papua New Guinea' ordinal='146' />
                    <column datatype='real' name='Poland' ordinal='147' />
                    <column datatype='real' name='Portugal' ordinal='148' />
                    <column datatype='real' name='Paraguay' ordinal='149' />
                    <column datatype='integer' name='West Bank and Gaza' ordinal='150' />
                    <column datatype='real' name='Qatar' ordinal='151' />
                    <column datatype='real' name='Romania' ordinal='152' />
                    <column datatype='real' name='Russian Federation' ordinal='153' />
                    <column datatype='real' name='Rwanda' ordinal='154' />
                    <column datatype='real' name='South Asia developing' ordinal='155' />
                    <column datatype='real' name='Saudi Arabia' ordinal='156' />
                    <column datatype='real' name='Sudan' ordinal='157' />
                    <column datatype='real' name='Senegal' ordinal='158' />
                    <column datatype='real' name='Singapore' ordinal='159' />
                    <column datatype='real' name='Solomon Islands' ordinal='160' />
                    <column datatype='real' name='Sierra Leone' ordinal='161' />
                    <column datatype='real' name='El Salvador' ordinal='162' />
                    <column datatype='real' name='San Marino' ordinal='163' />
                    <column datatype='real' name='Serbia' ordinal='164' />
                    <column datatype='real' name='South Sudan' ordinal='165' />
                    <column datatype='real' name='Sub-Saharan Africa developing' ordinal='166' />
                    <column datatype='real' name='Sao Tome and Principe' ordinal='167' />
                    <column datatype='real' name='Suri0me' ordinal='168' />
                    <column datatype='real' name='Slovakia' ordinal='169' />
                    <column datatype='real' name='Slovenia' ordinal='170' />
                    <column datatype='real' name='Sweden' ordinal='171' />
                    <column datatype='real' name='Swaziland' ordinal='172' />
                    <column datatype='real' name='Seychelles' ordinal='173' />
                    <column datatype='real' name='Syrian Arab Republic' ordinal='174' />
                    <column datatype='real' name='Chad' ordinal='175' />
                    <column datatype='real' name='Togo' ordinal='176' />
                    <column datatype='real' name='Thailand' ordinal='177' />
                    <column datatype='real' name='Tajikistan' ordinal='178' />
                    <column datatype='integer' name='Turkmenistan' ordinal='179' />
                    <column datatype='integer' name='Timor-Leste' ordinal='180' />
                    <column datatype='real' name='Tonga' ordinal='181' />
                    <column datatype='real' name='Trinidad and Tobago' ordinal='182' />
                    <column datatype='real' name='Tunisia' ordinal='183' />
                    <column datatype='real' name='Turkey' ordinal='184' />
                    <column datatype='real' name='Taiwan, Chi0' ordinal='185' />
                    <column datatype='real' name='Tanzania, United Rep.' ordinal='186' />
                    <column datatype='real' name='Uganda' ordinal='187' />
                    <column datatype='real' name='Ukraine' ordinal='188' />
                    <column datatype='real' name='Uruguay' ordinal='189' />
                    <column datatype='integer' name='United States' ordinal='190' />
                    <column datatype='real' name='Uzbekistan' ordinal='191' />
                    <column datatype='real' name='St. Vincent and the Gre0dines' ordinal='192' />
                    <column datatype='real' name='Venezuela, RB' ordinal='193' />
                    <column datatype='real' name='Viet0m' ordinal='194' />
                    <column datatype='real' name='Vanuatu' ordinal='195' />
                    <column datatype='real' name='World (WBG members)' ordinal='196' />
                    <column datatype='real' name='Samoa' ordinal='197' />
                    <column datatype='real' name='Yemen, Rep.' ordinal='198' />
                    <column datatype='real' name='South Africa' ordinal='199' />
                    <column datatype='real' name='Zambia' ordinal='200' />
                    <column datatype='real' name='Zimbabwe' ordinal='201' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (cpi_monthly)' inline='true' name='federated.1huwcc40wqsqi51bhodb90c4rd8m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cpi_monthly' name='excel-direct.083si730oxbgje1dd6r9i0ud29wd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/peramnavachandureddy/Desktop/college/untitled folder/cpi_monthly.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Afghanistan]' />
            <value name='[Albania]' />
            <value name='[Algeria]' />
            <value name='[Antigua and Barbuda]' />
            <value name='[Armenia]' />
            <value name='[Austria]' />
            <value name='[Azerbaijan]' />
            <value name='[Bahamas]' />
            <value name='[Bahrain]' />
            <value name='[Bangladesh]' />
            <value name='[Barbados]' />
            <value name='[Belarus]' />
            <value name='[Belgium]' />
            <value name='[Belize]' />
            <value name='[Benin]' />
            <value name='[Bhutan]' />
            <value name='[Bolivia]' />
            <value name='[Bosnia and Herzegovina]' />
            <value name='[Botswana]' />
            <value name='[Brazil]' />
            <value name='[Bulgaria]' />
            <value name='[Burkina Faso]' />
            <value name='[Burundi]' />
            <value name='[Cabo Verde]' />
            <value name='[Cambodia]' />
            <value name='[Canada]' />
            <value name='[Central African Republic]' />
            <value name='[Chad]' />
            <value name='[Chile]' />
            <value name='[China]' />
            <value name='[Colombia]' />
            <value name='[Comoros]' />
            <value name='[Congo, Dem. Rep.]' />
            <value name='[Congo, Rep.]' />
            <value name='[Costa Rica]' />
            <value name='[Cote d&apos;Ivoire]' />
            <value name='[Croatia]' />
            <value name='[Cyprus]' />
            <value name='[Czech Republic]' />
            <value name='[Denmark]' />
            <value name='[Developing Asia]' />
            <value name='[Developing Countries]' />
            <value name='[Djibouti]' />
            <value name='[Dominica]' />
            <value name='[Dominican Republic]' />
            <value name='[East Asia &amp; Pacific developing]' />
            <value name='[Ecuador]' />
            <value name='[Egypt, Arab Rep.]' />
            <value name='[El Salvador]' />
            <value name='[Equatorial Guinea]' />
            <value name='[Estonia]' />
            <value name='[Europe &amp; Central Asia developing]' />
            <value name='[Fiji]' />
            <value name='[Finland]' />
            <value name='[France]' />
            <value name='[Gabon]' />
            <value name='[Gambia, The]' />
            <value name='[Georgia]' />
            <value name='[Germany]' />
            <value name='[Greece]' />
            <value name='[Grenada]' />
            <value name='[Guatemala]' />
            <value name='[Guinea]' />
            <value name='[Guyana]' />
            <value name='[Haiti]' />
            <value name='[High Income Countries]' />
            <value name='[High Income: Non-OECD]' />
            <value name='[High income: OECD]' />
            <value name='[Honduras]' />
            <value name='[Hong Kong SAR, China]' />
            <value name='[Hungary]' />
            <value name='[Iceland]' />
            <value name='[India]' />
            <value name='[Indonesia]' />
            <value name='[Ireland]' />
            <value name='[Israel]' />
            <value name='[Italy]' />
            <value name='[Jamaica]' />
            <value name='[Japan]' />
            <value name='[Jordan]' />
            <value name='[Kazakhstan]' />
            <value name='[Kenya]' />
            <value name='[Kiribati]' />
            <value name='[Korea, Rep.]' />
            <value name='[Kyrgyz Republic]' />
            <value name='[Lao, PDR]' />
            <value name='[Latin America &amp; Caribbean developing]' />
            <value name='[Latvia]' />
            <value name='[Lebanon]' />
            <value name='[Lesotho]' />
            <value name='[Liberia]' />
            <value name='[Libya]' />
            <value name='[Lithuania]' />
            <value name='[Low Income]' />
            <value name='[Luxembourg]' />
            <value name='[Macedonia, FYR]' />
            <value name='[Madagascar]' />
            <value name='[Malawi]' />
            <value name='[Malaysia]' />
            <value name='[Maldives]' />
            <value name='[Mali]' />
            <value name='[Malta]' />
            <value name='[Mauritania]' />
            <value name='[Mauritius]' />
            <value name='[Mexico]' />
            <value name='[Middle East &amp; N. Africa developing]' />
            <value name='[Middle Income Countries]' />
            <value name='[Moldova, Rep.]' />
            <value name='[Montenegro]' />
            <value name='[Morocco]' />
            <value name='[Mozambique]' />
            <value name='[Namibia]' />
            <value name='[Nepal]' />
            <value name='[Netherlands]' />
            <value name='[Nicaragua]' />
            <value name='[Nigeria]' />
            <value name='[Norway]' />
            <value name='[Oman]' />
            <value name='[Pakistan]' />
            <value name='[Panama]' />
            <value name='[Paraguay]' />
            <value name='[Peru]' />
            <value name='[Philippines]' />
            <value name='[Poland]' />
            <value name='[Portugal]' />
            <value name='[Qatar]' />
            <value name='[Romania]' />
            <value name='[Russian Federation]' />
            <value name='[Rwanda]' />
            <value name='[Samoa]' />
            <value name='[San Marino]' />
            <value name='[Sao Tome and Principe]' />
            <value name='[Saudi Arabia]' />
            <value name='[Senegal]' />
            <value name='[Serbia]' />
            <value name='[Seychelles]' />
            <value name='[Sierra Leone]' />
            <value name='[Singapore]' />
            <value name='[Slovakia]' />
            <value name='[Slovenia]' />
            <value name='[Solomon Islands]' />
            <value name='[South Africa]' />
            <value name='[South Asia developing]' />
            <value name='[Spain]' />
            <value name='[St. Kitts and Nevis]' />
            <value name='[St. Lucia]' />
            <value name='[St. Vincent and the Grenadines]' />
            <value name='[Sub-Saharan Africa developing]' />
            <value name='[Suriname]' />
            <value name='[Swaziland]' />
            <value name='[Sweden]' />
            <value name='[Switzerland]' />
            <value name='[Taiwan, China]' />
            <value name='[Tajikistan]' />
            <value name='[Thailand]' />
            <value name='[Timor-Leste]' />
            <value name='[Togo]' />
            <value name='[Tonga]' />
            <value name='[Trinidad and Tobago]' />
            <value name='[Tunisia]' />
            <value name='[Turkey]' />
            <value name='[Uganda]' />
            <value name='[United Arab Emirates]' />
            <value name='[United Kingdom]' />
            <value name='[United States]' />
            <value name='[Uruguay]' />
            <value name='[Venezuela, RB]' />
            <value name='[Vietnam]' />
            <value name='[West Bank and Gaza]' />
            <value name='[World (WBG members)]' />
            <value name='[Yemen, Rep.]' />
            <value name='[Zambia]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Sheet1].[Afghanistan]' />
              <field name='[Sheet1].[Albania]' />
              <field name='[Sheet1].[Algeria]' />
              <field name='[Sheet1].[Antigua and Barbuda]' />
              <field name='[Sheet1].[Armenia]' />
              <field name='[Sheet1].[Austria]' />
              <field name='[Sheet1].[Azerbaijan]' />
              <field name='[Sheet1].[Bahamas]' />
              <field name='[Sheet1].[Bahrain]' />
              <field name='[Sheet1].[Bangladesh]' />
              <field name='[Sheet1].[Barbados]' />
              <field name='[Sheet1].[Belarus]' />
              <field name='[Sheet1].[Belgium]' />
              <field name='[Sheet1].[Belize]' />
              <field name='[Sheet1].[Benin]' />
              <field name='[Sheet1].[Bhutan]' />
              <field name='[Sheet1].[Bolivia]' />
              <field name='[Sheet1].[Bosnia and Herzegovina]' />
              <field name='[Sheet1].[Botswana]' />
              <field name='[Sheet1].[Brazil]' />
              <field name='[Sheet1].[Bulgaria]' />
              <field name='[Sheet1].[Burkina Faso]' />
              <field name='[Sheet1].[Burundi]' />
              <field name='[Sheet1].[Cabo Verde]' />
              <field name='[Sheet1].[Cambodia]' />
              <field name='[Sheet1].[Canada]' />
              <field name='[Sheet1].[Central African Republic]' />
              <field name='[Sheet1].[Chad]' />
              <field name='[Sheet1].[Chile]' />
              <field name='[Sheet1].[China]' />
              <field name='[Sheet1].[Colombia]' />
              <field name='[Sheet1].[Comoros]' />
              <field name='[Sheet1].[Congo, Dem. Rep.]' />
              <field name='[Sheet1].[Congo, Rep.]' />
              <field name='[Sheet1].[Costa Rica]' />
              <field name='[Sheet1].[Cote d&apos;Ivoire]' />
              <field name='[Sheet1].[Croatia]' />
              <field name='[Sheet1].[Cyprus]' />
              <field name='[Sheet1].[Czech Republic]' />
              <field name='[Sheet1].[Denmark]' />
              <field name='[Sheet1].[Developing Asia]' />
              <field name='[Sheet1].[Developing Countries]' />
              <field name='[Sheet1].[Djibouti]' />
              <field name='[Sheet1].[Dominica]' />
              <field name='[Sheet1].[Dominican Republic]' />
              <field name='[Sheet1].[East Asia &amp; Pacific developing]' />
              <field name='[Sheet1].[Ecuador]' />
              <field name='[Sheet1].[Egypt, Arab Rep.]' />
              <field name='[Sheet1].[El Salvador]' />
              <field name='[Sheet1].[Equatorial Guinea]' />
              <field name='[Sheet1].[Estonia]' />
              <field name='[Sheet1].[Europe &amp; Central Asia developing]' />
              <field name='[Sheet1].[Fiji]' />
              <field name='[Sheet1].[Finland]' />
              <field name='[Sheet1].[France]' />
              <field name='[Sheet1].[Gabon]' />
              <field name='[Sheet1].[Gambia, The]' />
              <field name='[Sheet1].[Georgia]' />
              <field name='[Sheet1].[Germany]' />
              <field name='[Sheet1].[Greece]' />
              <field name='[Sheet1].[Grenada]' />
              <field name='[Sheet1].[Guatemala]' />
              <field name='[Sheet1].[Guinea]' />
              <field name='[Sheet1].[Guyana]' />
              <field name='[Sheet1].[Haiti]' />
              <field name='[Sheet1].[High Income Countries]' />
              <field name='[Sheet1].[High Income: Non-OECD]' />
              <field name='[Sheet1].[High income: OECD]' />
              <field name='[Sheet1].[Honduras]' />
              <field name='[Sheet1].[Hong Kong SAR, China]' />
              <field name='[Sheet1].[Hungary]' />
              <field name='[Sheet1].[Iceland]' />
              <field name='[Sheet1].[India]' />
              <field name='[Sheet1].[Indonesia]' />
              <field name='[Sheet1].[Ireland]' />
              <field name='[Sheet1].[Israel]' />
              <field name='[Sheet1].[Italy]' />
              <field name='[Sheet1].[Jamaica]' />
              <field name='[Sheet1].[Japan]' />
              <field name='[Sheet1].[Jordan]' />
              <field name='[Sheet1].[Kazakhstan]' />
              <field name='[Sheet1].[Kenya]' />
              <field name='[Sheet1].[Kiribati]' />
              <field name='[Sheet1].[Korea, Rep.]' />
              <field name='[Sheet1].[Kyrgyz Republic]' />
              <field name='[Sheet1].[Lao, PDR]' />
              <field name='[Sheet1].[Latin America &amp; Caribbean developing]' />
              <field name='[Sheet1].[Latvia]' />
              <field name='[Sheet1].[Lebanon]' />
              <field name='[Sheet1].[Lesotho]' />
              <field name='[Sheet1].[Liberia]' />
              <field name='[Sheet1].[Libya]' />
              <field name='[Sheet1].[Lithuania]' />
              <field name='[Sheet1].[Low Income]' />
              <field name='[Sheet1].[Luxembourg]' />
              <field name='[Sheet1].[Macedonia, FYR]' />
              <field name='[Sheet1].[Madagascar]' />
              <field name='[Sheet1].[Malawi]' />
              <field name='[Sheet1].[Malaysia]' />
              <field name='[Sheet1].[Maldives]' />
              <field name='[Sheet1].[Mali]' />
              <field name='[Sheet1].[Malta]' />
              <field name='[Sheet1].[Mauritania]' />
              <field name='[Sheet1].[Mauritius]' />
              <field name='[Sheet1].[Mexico]' />
              <field name='[Sheet1].[Middle East &amp; N. Africa developing]' />
              <field name='[Sheet1].[Middle Income Countries]' />
              <field name='[Sheet1].[Moldova, Rep.]' />
              <field name='[Sheet1].[Montenegro]' />
              <field name='[Sheet1].[Morocco]' />
              <field name='[Sheet1].[Mozambique]' />
              <field name='[Sheet1].[Namibia]' />
              <field name='[Sheet1].[Nepal]' />
              <field name='[Sheet1].[Netherlands]' />
              <field name='[Sheet1].[Nicaragua]' />
              <field name='[Sheet1].[Nigeria]' />
              <field name='[Sheet1].[Norway]' />
              <field name='[Sheet1].[Oman]' />
              <field name='[Sheet1].[Pakistan]' />
              <field name='[Sheet1].[Panama]' />
              <field name='[Sheet1].[Paraguay]' />
              <field name='[Sheet1].[Peru]' />
              <field name='[Sheet1].[Philippines]' />
              <field name='[Sheet1].[Poland]' />
              <field name='[Sheet1].[Portugal]' />
              <field name='[Sheet1].[Qatar]' />
              <field name='[Sheet1].[Romania]' />
              <field name='[Sheet1].[Russian Federation]' />
              <field name='[Sheet1].[Rwanda]' />
              <field name='[Sheet1].[Samoa]' />
              <field name='[Sheet1].[San Marino]' />
              <field name='[Sheet1].[Sao Tome and Principe]' />
              <field name='[Sheet1].[Saudi Arabia]' />
              <field name='[Sheet1].[Senegal]' />
              <field name='[Sheet1].[Serbia]' />
              <field name='[Sheet1].[Seychelles]' />
              <field name='[Sheet1].[Sierra Leone]' />
              <field name='[Sheet1].[Singapore]' />
              <field name='[Sheet1].[Slovakia]' />
              <field name='[Sheet1].[Slovenia]' />
              <field name='[Sheet1].[Solomon Islands]' />
              <field name='[Sheet1].[South Africa]' />
              <field name='[Sheet1].[South Asia developing]' />
              <field name='[Sheet1].[Spain]' />
              <field name='[Sheet1].[St. Kitts and Nevis]' />
              <field name='[Sheet1].[St. Lucia]' />
              <field name='[Sheet1].[St. Vincent and the Grenadines]' />
              <field name='[Sheet1].[Sub-Saharan Africa developing]' />
              <field name='[Sheet1].[Suriname]' />
              <field name='[Sheet1].[Swaziland]' />
              <field name='[Sheet1].[Sweden]' />
              <field name='[Sheet1].[Switzerland]' />
              <field name='[Sheet1].[Taiwan, China]' />
              <field name='[Sheet1].[Tajikistan]' />
              <field name='[Sheet1].[Thailand]' />
              <field name='[Sheet1].[Timor-Leste]' />
              <field name='[Sheet1].[Togo]' />
              <field name='[Sheet1].[Tonga]' />
              <field name='[Sheet1].[Trinidad and Tobago]' />
              <field name='[Sheet1].[Tunisia]' />
              <field name='[Sheet1].[Turkey]' />
              <field name='[Sheet1].[Uganda]' />
              <field name='[Sheet1].[United Arab Emirates]' />
              <field name='[Sheet1].[United Kingdom]' />
              <field name='[Sheet1].[United States]' />
              <field name='[Sheet1].[Uruguay]' />
              <field name='[Sheet1].[Venezuela, RB]' />
              <field name='[Sheet1].[Vietnam]' />
              <field name='[Sheet1].[West Bank and Gaza]' />
              <field name='[Sheet1].[World (WBG members)]' />
              <field name='[Sheet1].[Yemen, Rep.]' />
              <field name='[Sheet1].[Zambia]' />
            </group>
          </groups>
          <relation connection='excel-direct.083si730oxbgje1dd6r9i0ud29wd' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:FR361:no:A1:FR361:0' header='yes' outcome='6'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='date' name='year' ordinal='1' />
              <column datatype='real' name='Afghanistan' ordinal='2' />
              <column datatype='real' name='Albania' ordinal='3' />
              <column datatype='real' name='United Arab Emirates' ordinal='4' />
              <column datatype='real' name='Armenia' ordinal='5' />
              <column datatype='real' name='Developing Asia' ordinal='6' />
              <column datatype='real' name='Antigua and Barbuda' ordinal='7' />
              <column datatype='real' name='Austria' ordinal='8' />
              <column datatype='real' name='Azerbaijan' ordinal='9' />
              <column datatype='real' name='Burundi' ordinal='10' />
              <column datatype='real' name='Belgium' ordinal='11' />
              <column datatype='real' name='Benin' ordinal='12' />
              <column datatype='real' name='Burkina Faso' ordinal='13' />
              <column datatype='real' name='Bangladesh' ordinal='14' />
              <column datatype='real' name='Bulgaria' ordinal='15' />
              <column datatype='real' name='Bahrain' ordinal='16' />
              <column datatype='real' name='Bahamas' ordinal='17' />
              <column datatype='real' name='Bosnia and Herzegovina' ordinal='18' />
              <column datatype='real' name='Belarus' ordinal='19' />
              <column datatype='real' name='Belize' ordinal='20' />
              <column datatype='real' name='Bolivia' ordinal='21' />
              <column datatype='real' name='Brazil' ordinal='22' />
              <column datatype='real' name='Barbados' ordinal='23' />
              <column datatype='real' name='Bhutan' ordinal='24' />
              <column datatype='real' name='Botswana' ordinal='25' />
              <column datatype='real' name='Central African Republic' ordinal='26' />
              <column datatype='real' name='Canada' ordinal='27' />
              <column datatype='real' name='Switzerland' ordinal='28' />
              <column datatype='real' name='Chile' ordinal='29' />
              <column datatype='real' name='China' ordinal='30' />
              <column datatype='real' name='Cote d&apos;Ivoire' ordinal='31' />
              <column datatype='real' name='Congo, Dem. Rep.' ordinal='32' />
              <column datatype='real' name='Congo, Rep.' ordinal='33' />
              <column datatype='real' name='Colombia' ordinal='34' />
              <column datatype='real' name='Comoros' ordinal='35' />
              <column datatype='real' name='Cabo Verde' ordinal='36' />
              <column datatype='real' name='Costa Rica' ordinal='37' />
              <column datatype='real' name='Cyprus' ordinal='38' />
              <column datatype='real' name='Czech Republic' ordinal='39' />
              <column datatype='real' name='Germany' ordinal='40' />
              <column datatype='real' name='Developing Countries' ordinal='41' />
              <column datatype='real' name='Djibouti' ordinal='42' />
              <column datatype='real' name='Dominica' ordinal='43' />
              <column datatype='real' name='Denmark' ordinal='44' />
              <column datatype='real' name='Dominican Republic' ordinal='45' />
              <column datatype='real' name='Algeria' ordinal='46' />
              <column datatype='real' name='East Asia &amp; Pacific developing' ordinal='47' />
              <column datatype='real' name='Europe &amp; Central Asia developing' ordinal='48' />
              <column datatype='real' name='Ecuador' ordinal='49' />
              <column datatype='real' name='Egypt, Arab Rep.' ordinal='50' />
              <column datatype='real' name='Spain' ordinal='51' />
              <column datatype='real' name='Estonia' ordinal='52' />
              <column datatype='real' name='Finland' ordinal='53' />
              <column datatype='real' name='Fiji' ordinal='54' />
              <column datatype='real' name='France' ordinal='55' />
              <column datatype='real' name='Gabon' ordinal='56' />
              <column datatype='real' name='United Kingdom' ordinal='57' />
              <column datatype='real' name='Georgia' ordinal='58' />
              <column datatype='real' name='Guinea' ordinal='59' />
              <column datatype='real' name='Gambia, The' ordinal='60' />
              <column datatype='real' name='Equatorial Guinea' ordinal='61' />
              <column datatype='real' name='Greece' ordinal='62' />
              <column datatype='real' name='Grenada' ordinal='63' />
              <column datatype='real' name='Guatemala' ordinal='64' />
              <column datatype='real' name='Guyana' ordinal='65' />
              <column datatype='real' name='High Income Countries' ordinal='66' />
              <column datatype='real' name='Hong Kong SAR, China' ordinal='67' />
              <column datatype='real' name='Honduras' ordinal='68' />
              <column datatype='real' name='Croatia' ordinal='69' />
              <column datatype='real' name='Haiti' ordinal='70' />
              <column datatype='real' name='Hungary' ordinal='71' />
              <column datatype='real' name='High income: OECD' ordinal='72' />
              <column datatype='real' name='Indonesia' ordinal='73' />
              <column datatype='real' name='India' ordinal='74' />
              <column datatype='real' name='Ireland' ordinal='75' />
              <column datatype='real' name='Iceland' ordinal='76' />
              <column datatype='real' name='Israel' ordinal='77' />
              <column datatype='real' name='Italy' ordinal='78' />
              <column datatype='real' name='Jamaica' ordinal='79' />
              <column datatype='real' name='Jordan' ordinal='80' />
              <column datatype='real' name='Japan' ordinal='81' />
              <column datatype='real' name='Kazakhstan' ordinal='82' />
              <column datatype='real' name='Kenya' ordinal='83' />
              <column datatype='real' name='Kyrgyz Republic' ordinal='84' />
              <column datatype='real' name='Cambodia' ordinal='85' />
              <column datatype='real' name='Kiribati' ordinal='86' />
              <column datatype='real' name='St. Kitts and Nevis' ordinal='87' />
              <column datatype='real' name='Korea, Rep.' ordinal='88' />
              <column datatype='real' name='Latin America &amp; Caribbean developing' ordinal='89' />
              <column datatype='real' name='Lao, PDR' ordinal='90' />
              <column datatype='real' name='Lebanon' ordinal='91' />
              <column datatype='real' name='Liberia' ordinal='92' />
              <column datatype='real' name='Libya' ordinal='93' />
              <column datatype='real' name='St. Lucia' ordinal='94' />
              <column datatype='real' name='Low Income' ordinal='95' />
              <column datatype='real' name='Lesotho' ordinal='96' />
              <column datatype='real' name='Lithuania' ordinal='97' />
              <column datatype='real' name='Luxembourg' ordinal='98' />
              <column datatype='real' name='Latvia' ordinal='99' />
              <column datatype='real' name='Morocco' ordinal='100' />
              <column datatype='real' name='Moldova, Rep.' ordinal='101' />
              <column datatype='real' name='Madagascar' ordinal='102' />
              <column datatype='real' name='Maldives' ordinal='103' />
              <column datatype='real' name='Mexico' ordinal='104' />
              <column datatype='real' name='Middle Income Countries' ordinal='105' />
              <column datatype='real' name='Macedonia, FYR' ordinal='106' />
              <column datatype='real' name='Mali' ordinal='107' />
              <column datatype='real' name='Malta' ordinal='108' />
              <column datatype='real' name='Middle East &amp; N. Africa developing' ordinal='109' />
              <column datatype='real' name='Montenegro' ordinal='110' />
              <column datatype='real' name='Mozambique' ordinal='111' />
              <column datatype='real' name='Mauritania' ordinal='112' />
              <column datatype='real' name='Mauritius' ordinal='113' />
              <column datatype='real' name='Malawi' ordinal='114' />
              <column datatype='real' name='Malaysia' ordinal='115' />
              <column datatype='real' name='Namibia' ordinal='116' />
              <column datatype='real' name='Nigeria' ordinal='117' />
              <column datatype='real' name='Nicaragua' ordinal='118' />
              <column datatype='real' name='Netherlands' ordinal='119' />
              <column datatype='real' name='Norway' ordinal='120' />
              <column datatype='real' name='Nepal' ordinal='121' />
              <column datatype='real' name='High Income: Non-OECD' ordinal='122' />
              <column datatype='real' name='Oman' ordinal='123' />
              <column datatype='real' name='Pakistan' ordinal='124' />
              <column datatype='real' name='Panama' ordinal='125' />
              <column datatype='real' name='Peru' ordinal='126' />
              <column datatype='real' name='Philippines' ordinal='127' />
              <column datatype='real' name='Poland' ordinal='128' />
              <column datatype='real' name='Portugal' ordinal='129' />
              <column datatype='real' name='Paraguay' ordinal='130' />
              <column datatype='real' name='West Bank and Gaza' ordinal='131' />
              <column datatype='real' name='Qatar' ordinal='132' />
              <column datatype='real' name='Romania' ordinal='133' />
              <column datatype='real' name='Russian Federation' ordinal='134' />
              <column datatype='real' name='Rwanda' ordinal='135' />
              <column datatype='real' name='South Asia developing' ordinal='136' />
              <column datatype='real' name='Saudi Arabia' ordinal='137' />
              <column datatype='real' name='Senegal' ordinal='138' />
              <column datatype='real' name='Singapore' ordinal='139' />
              <column datatype='real' name='Solomon Islands' ordinal='140' />
              <column datatype='real' name='Sierra Leone' ordinal='141' />
              <column datatype='real' name='El Salvador' ordinal='142' />
              <column datatype='real' name='San Marino' ordinal='143' />
              <column datatype='real' name='Serbia' ordinal='144' />
              <column datatype='real' name='Sub-Saharan Africa developing' ordinal='145' />
              <column datatype='real' name='Sao Tome and Principe' ordinal='146' />
              <column datatype='real' name='Suriname' ordinal='147' />
              <column datatype='real' name='Slovakia' ordinal='148' />
              <column datatype='real' name='Slovenia' ordinal='149' />
              <column datatype='real' name='Sweden' ordinal='150' />
              <column datatype='real' name='Swaziland' ordinal='151' />
              <column datatype='real' name='Seychelles' ordinal='152' />
              <column datatype='real' name='Chad' ordinal='153' />
              <column datatype='real' name='Togo' ordinal='154' />
              <column datatype='real' name='Thailand' ordinal='155' />
              <column datatype='real' name='Tajikistan' ordinal='156' />
              <column datatype='real' name='Timor-Leste' ordinal='157' />
              <column datatype='real' name='Tonga' ordinal='158' />
              <column datatype='real' name='Trinidad and Tobago' ordinal='159' />
              <column datatype='real' name='Tunisia' ordinal='160' />
              <column datatype='real' name='Turkey' ordinal='161' />
              <column datatype='real' name='Taiwan, China' ordinal='162' />
              <column datatype='real' name='Uganda' ordinal='163' />
              <column datatype='real' name='Uruguay' ordinal='164' />
              <column datatype='real' name='United States' ordinal='165' />
              <column datatype='real' name='St. Vincent and the Grenadines' ordinal='166' />
              <column datatype='real' name='Venezuela, RB' ordinal='167' />
              <column datatype='real' name='Vietnam' ordinal='168' />
              <column datatype='real' name='World (WBG members)' ordinal='169' />
              <column datatype='real' name='Samoa' ordinal='170' />
              <column datatype='real' name='Yemen, Rep.' ordinal='171' />
              <column datatype='real' name='South Africa' ordinal='172' />
              <column datatype='real' name='Zambia' ordinal='173' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Afghanistan]' />
            <value name='[Albania]' />
            <value name='[Algeria]' />
            <value name='[Antigua and Barbuda]' />
            <value name='[Armenia]' />
            <value name='[Austria]' />
            <value name='[Azerbaijan]' />
            <value name='[Bahamas]' />
            <value name='[Bahrain]' />
            <value name='[Bangladesh]' />
            <value name='[Barbados]' />
            <value name='[Belarus]' />
            <value name='[Belgium]' />
            <value name='[Belize]' />
            <value name='[Benin]' />
            <value name='[Bhutan]' />
            <value name='[Bolivia]' />
            <value name='[Bosnia and Herzegovina]' />
            <value name='[Botswana]' />
            <value name='[Brazil]' />
            <value name='[Bulgaria]' />
            <value name='[Burkina Faso]' />
            <value name='[Burundi]' />
            <value name='[Cabo Verde]' />
            <value name='[Cambodia]' />
            <value name='[Canada]' />
            <value name='[Central African Republic]' />
            <value name='[Chad]' />
            <value name='[Chile]' />
            <value name='[China]' />
            <value name='[Colombia]' />
            <value name='[Comoros]' />
            <value name='[Congo, Dem. Rep.]' />
            <value name='[Congo, Rep.]' />
            <value name='[Costa Rica]' />
            <value name='[Cote d&apos;Ivoire]' />
            <value name='[Croatia]' />
            <value name='[Cyprus]' />
            <value name='[Czech Republic]' />
            <value name='[Denmark]' />
            <value name='[Developing Asia]' />
            <value name='[Developing Countries]' />
            <value name='[Djibouti]' />
            <value name='[Dominica]' />
            <value name='[Dominican Republic]' />
            <value name='[East Asia &amp; Pacific developing]' />
            <value name='[Ecuador]' />
            <value name='[Egypt, Arab Rep.]' />
            <value name='[El Salvador]' />
            <value name='[Equatorial Guinea]' />
            <value name='[Estonia]' />
            <value name='[Europe &amp; Central Asia developing]' />
            <value name='[Fiji]' />
            <value name='[Finland]' />
            <value name='[France]' />
            <value name='[Gabon]' />
            <value name='[Gambia, The]' />
            <value name='[Georgia]' />
            <value name='[Germany]' />
            <value name='[Greece]' />
            <value name='[Grenada]' />
            <value name='[Guatemala]' />
            <value name='[Guinea]' />
            <value name='[Guyana]' />
            <value name='[Haiti]' />
            <value name='[High Income Countries]' />
            <value name='[High Income: Non-OECD]' />
            <value name='[High income: OECD]' />
            <value name='[Honduras]' />
            <value name='[Hong Kong SAR, China]' />
            <value name='[Hungary]' />
            <value name='[Iceland]' />
            <value name='[India]' />
            <value name='[Indonesia]' />
            <value name='[Ireland]' />
            <value name='[Israel]' />
            <value name='[Italy]' />
            <value name='[Jamaica]' />
            <value name='[Japan]' />
            <value name='[Jordan]' />
            <value name='[Kazakhstan]' />
            <value name='[Kenya]' />
            <value name='[Kiribati]' />
            <value name='[Korea, Rep.]' />
            <value name='[Kyrgyz Republic]' />
            <value name='[Lao, PDR]' />
            <value name='[Latin America &amp; Caribbean developing]' />
            <value name='[Latvia]' />
            <value name='[Lebanon]' />
            <value name='[Lesotho]' />
            <value name='[Liberia]' />
            <value name='[Libya]' />
            <value name='[Lithuania]' />
            <value name='[Low Income]' />
            <value name='[Luxembourg]' />
            <value name='[Macedonia, FYR]' />
            <value name='[Madagascar]' />
            <value name='[Malawi]' />
            <value name='[Malaysia]' />
            <value name='[Maldives]' />
            <value name='[Mali]' />
            <value name='[Malta]' />
            <value name='[Mauritania]' />
            <value name='[Mauritius]' />
            <value name='[Mexico]' />
            <value name='[Middle East &amp; N. Africa developing]' />
            <value name='[Middle Income Countries]' />
            <value name='[Moldova, Rep.]' />
            <value name='[Montenegro]' />
            <value name='[Morocco]' />
            <value name='[Mozambique]' />
            <value name='[Namibia]' />
            <value name='[Nepal]' />
            <value name='[Netherlands]' />
            <value name='[Nicaragua]' />
            <value name='[Nigeria]' />
            <value name='[Norway]' />
            <value name='[Oman]' />
            <value name='[Pakistan]' />
            <value name='[Panama]' />
            <value name='[Paraguay]' />
            <value name='[Peru]' />
            <value name='[Philippines]' />
            <value name='[Poland]' />
            <value name='[Portugal]' />
            <value name='[Qatar]' />
            <value name='[Romania]' />
            <value name='[Russian Federation]' />
            <value name='[Rwanda]' />
            <value name='[Samoa]' />
            <value name='[San Marino]' />
            <value name='[Sao Tome and Principe]' />
            <value name='[Saudi Arabia]' />
            <value name='[Senegal]' />
            <value name='[Serbia]' />
            <value name='[Seychelles]' />
            <value name='[Sierra Leone]' />
            <value name='[Singapore]' />
            <value name='[Slovakia]' />
            <value name='[Slovenia]' />
            <value name='[Solomon Islands]' />
            <value name='[South Africa]' />
            <value name='[South Asia developing]' />
            <value name='[Spain]' />
            <value name='[St. Kitts and Nevis]' />
            <value name='[St. Lucia]' />
            <value name='[St. Vincent and the Grenadines]' />
            <value name='[Sub-Saharan Africa developing]' />
            <value name='[Suriname]' />
            <value name='[Swaziland]' />
            <value name='[Sweden]' />
            <value name='[Switzerland]' />
            <value name='[Taiwan, China]' />
            <value name='[Tajikistan]' />
            <value name='[Thailand]' />
            <value name='[Timor-Leste]' />
            <value name='[Togo]' />
            <value name='[Tonga]' />
            <value name='[Trinidad and Tobago]' />
            <value name='[Tunisia]' />
            <value name='[Turkey]' />
            <value name='[Uganda]' />
            <value name='[United Arab Emirates]' />
            <value name='[United Kingdom]' />
            <value name='[United States]' />
            <value name='[Uruguay]' />
            <value name='[Venezuela, RB]' />
            <value name='[Vietnam]' />
            <value name='[West Bank and Gaza]' />
            <value name='[World (WBG members)]' />
            <value name='[Yemen, Rep.]' />
            <value name='[Zambia]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Sheet1].[Afghanistan]' />
              <field name='[Sheet1].[Albania]' />
              <field name='[Sheet1].[Algeria]' />
              <field name='[Sheet1].[Antigua and Barbuda]' />
              <field name='[Sheet1].[Armenia]' />
              <field name='[Sheet1].[Austria]' />
              <field name='[Sheet1].[Azerbaijan]' />
              <field name='[Sheet1].[Bahamas]' />
              <field name='[Sheet1].[Bahrain]' />
              <field name='[Sheet1].[Bangladesh]' />
              <field name='[Sheet1].[Barbados]' />
              <field name='[Sheet1].[Belarus]' />
              <field name='[Sheet1].[Belgium]' />
              <field name='[Sheet1].[Belize]' />
              <field name='[Sheet1].[Benin]' />
              <field name='[Sheet1].[Bhutan]' />
              <field name='[Sheet1].[Bolivia]' />
              <field name='[Sheet1].[Bosnia and Herzegovina]' />
              <field name='[Sheet1].[Botswana]' />
              <field name='[Sheet1].[Brazil]' />
              <field name='[Sheet1].[Bulgaria]' />
              <field name='[Sheet1].[Burkina Faso]' />
              <field name='[Sheet1].[Burundi]' />
              <field name='[Sheet1].[Cabo Verde]' />
              <field name='[Sheet1].[Cambodia]' />
              <field name='[Sheet1].[Canada]' />
              <field name='[Sheet1].[Central African Republic]' />
              <field name='[Sheet1].[Chad]' />
              <field name='[Sheet1].[Chile]' />
              <field name='[Sheet1].[China]' />
              <field name='[Sheet1].[Colombia]' />
              <field name='[Sheet1].[Comoros]' />
              <field name='[Sheet1].[Congo, Dem. Rep.]' />
              <field name='[Sheet1].[Congo, Rep.]' />
              <field name='[Sheet1].[Costa Rica]' />
              <field name='[Sheet1].[Cote d&apos;Ivoire]' />
              <field name='[Sheet1].[Croatia]' />
              <field name='[Sheet1].[Cyprus]' />
              <field name='[Sheet1].[Czech Republic]' />
              <field name='[Sheet1].[Denmark]' />
              <field name='[Sheet1].[Developing Asia]' />
              <field name='[Sheet1].[Developing Countries]' />
              <field name='[Sheet1].[Djibouti]' />
              <field name='[Sheet1].[Dominica]' />
              <field name='[Sheet1].[Dominican Republic]' />
              <field name='[Sheet1].[East Asia &amp; Pacific developing]' />
              <field name='[Sheet1].[Ecuador]' />
              <field name='[Sheet1].[Egypt, Arab Rep.]' />
              <field name='[Sheet1].[El Salvador]' />
              <field name='[Sheet1].[Equatorial Guinea]' />
              <field name='[Sheet1].[Estonia]' />
              <field name='[Sheet1].[Europe &amp; Central Asia developing]' />
              <field name='[Sheet1].[Fiji]' />
              <field name='[Sheet1].[Finland]' />
              <field name='[Sheet1].[France]' />
              <field name='[Sheet1].[Gabon]' />
              <field name='[Sheet1].[Gambia, The]' />
              <field name='[Sheet1].[Georgia]' />
              <field name='[Sheet1].[Germany]' />
              <field name='[Sheet1].[Greece]' />
              <field name='[Sheet1].[Grenada]' />
              <field name='[Sheet1].[Guatemala]' />
              <field name='[Sheet1].[Guinea]' />
              <field name='[Sheet1].[Guyana]' />
              <field name='[Sheet1].[Haiti]' />
              <field name='[Sheet1].[High Income Countries]' />
              <field name='[Sheet1].[High Income: Non-OECD]' />
              <field name='[Sheet1].[High income: OECD]' />
              <field name='[Sheet1].[Honduras]' />
              <field name='[Sheet1].[Hong Kong SAR, China]' />
              <field name='[Sheet1].[Hungary]' />
              <field name='[Sheet1].[Iceland]' />
              <field name='[Sheet1].[India]' />
              <field name='[Sheet1].[Indonesia]' />
              <field name='[Sheet1].[Ireland]' />
              <field name='[Sheet1].[Israel]' />
              <field name='[Sheet1].[Italy]' />
              <field name='[Sheet1].[Jamaica]' />
              <field name='[Sheet1].[Japan]' />
              <field name='[Sheet1].[Jordan]' />
              <field name='[Sheet1].[Kazakhstan]' />
              <field name='[Sheet1].[Kenya]' />
              <field name='[Sheet1].[Kiribati]' />
              <field name='[Sheet1].[Korea, Rep.]' />
              <field name='[Sheet1].[Kyrgyz Republic]' />
              <field name='[Sheet1].[Lao, PDR]' />
              <field name='[Sheet1].[Latin America &amp; Caribbean developing]' />
              <field name='[Sheet1].[Latvia]' />
              <field name='[Sheet1].[Lebanon]' />
              <field name='[Sheet1].[Lesotho]' />
              <field name='[Sheet1].[Liberia]' />
              <field name='[Sheet1].[Libya]' />
              <field name='[Sheet1].[Lithuania]' />
              <field name='[Sheet1].[Low Income]' />
              <field name='[Sheet1].[Luxembourg]' />
              <field name='[Sheet1].[Macedonia, FYR]' />
              <field name='[Sheet1].[Madagascar]' />
              <field name='[Sheet1].[Malawi]' />
              <field name='[Sheet1].[Malaysia]' />
              <field name='[Sheet1].[Maldives]' />
              <field name='[Sheet1].[Mali]' />
              <field name='[Sheet1].[Malta]' />
              <field name='[Sheet1].[Mauritania]' />
              <field name='[Sheet1].[Mauritius]' />
              <field name='[Sheet1].[Mexico]' />
              <field name='[Sheet1].[Middle East &amp; N. Africa developing]' />
              <field name='[Sheet1].[Middle Income Countries]' />
              <field name='[Sheet1].[Moldova, Rep.]' />
              <field name='[Sheet1].[Montenegro]' />
              <field name='[Sheet1].[Morocco]' />
              <field name='[Sheet1].[Mozambique]' />
              <field name='[Sheet1].[Namibia]' />
              <field name='[Sheet1].[Nepal]' />
              <field name='[Sheet1].[Netherlands]' />
              <field name='[Sheet1].[Nicaragua]' />
              <field name='[Sheet1].[Nigeria]' />
              <field name='[Sheet1].[Norway]' />
              <field name='[Sheet1].[Oman]' />
              <field name='[Sheet1].[Pakistan]' />
              <field name='[Sheet1].[Panama]' />
              <field name='[Sheet1].[Paraguay]' />
              <field name='[Sheet1].[Peru]' />
              <field name='[Sheet1].[Philippines]' />
              <field name='[Sheet1].[Poland]' />
              <field name='[Sheet1].[Portugal]' />
              <field name='[Sheet1].[Qatar]' />
              <field name='[Sheet1].[Romania]' />
              <field name='[Sheet1].[Russian Federation]' />
              <field name='[Sheet1].[Rwanda]' />
              <field name='[Sheet1].[Samoa]' />
              <field name='[Sheet1].[San Marino]' />
              <field name='[Sheet1].[Sao Tome and Principe]' />
              <field name='[Sheet1].[Saudi Arabia]' />
              <field name='[Sheet1].[Senegal]' />
              <field name='[Sheet1].[Serbia]' />
              <field name='[Sheet1].[Seychelles]' />
              <field name='[Sheet1].[Sierra Leone]' />
              <field name='[Sheet1].[Singapore]' />
              <field name='[Sheet1].[Slovakia]' />
              <field name='[Sheet1].[Slovenia]' />
              <field name='[Sheet1].[Solomon Islands]' />
              <field name='[Sheet1].[South Africa]' />
              <field name='[Sheet1].[South Asia developing]' />
              <field name='[Sheet1].[Spain]' />
              <field name='[Sheet1].[St. Kitts and Nevis]' />
              <field name='[Sheet1].[St. Lucia]' />
              <field name='[Sheet1].[St. Vincent and the Grenadines]' />
              <field name='[Sheet1].[Sub-Saharan Africa developing]' />
              <field name='[Sheet1].[Suriname]' />
              <field name='[Sheet1].[Swaziland]' />
              <field name='[Sheet1].[Sweden]' />
              <field name='[Sheet1].[Switzerland]' />
              <field name='[Sheet1].[Taiwan, China]' />
              <field name='[Sheet1].[Tajikistan]' />
              <field name='[Sheet1].[Thailand]' />
              <field name='[Sheet1].[Timor-Leste]' />
              <field name='[Sheet1].[Togo]' />
              <field name='[Sheet1].[Tonga]' />
              <field name='[Sheet1].[Trinidad and Tobago]' />
              <field name='[Sheet1].[Tunisia]' />
              <field name='[Sheet1].[Turkey]' />
              <field name='[Sheet1].[Uganda]' />
              <field name='[Sheet1].[United Arab Emirates]' />
              <field name='[Sheet1].[United Kingdom]' />
              <field name='[Sheet1].[United States]' />
              <field name='[Sheet1].[Uruguay]' />
              <field name='[Sheet1].[Venezuela, RB]' />
              <field name='[Sheet1].[Vietnam]' />
              <field name='[Sheet1].[West Bank and Gaza]' />
              <field name='[Sheet1].[World (WBG members)]' />
              <field name='[Sheet1].[Yemen, Rep.]' />
              <field name='[Sheet1].[Zambia]' />
            </group>
          </groups>
          <relation connection='excel-direct.083si730oxbgje1dd6r9i0ud29wd' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:FR361:no:A1:FR361:0' header='yes' outcome='6'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='date' name='year' ordinal='1' />
              <column datatype='real' name='Afghanistan' ordinal='2' />
              <column datatype='real' name='Albania' ordinal='3' />
              <column datatype='real' name='United Arab Emirates' ordinal='4' />
              <column datatype='real' name='Armenia' ordinal='5' />
              <column datatype='real' name='Developing Asia' ordinal='6' />
              <column datatype='real' name='Antigua and Barbuda' ordinal='7' />
              <column datatype='real' name='Austria' ordinal='8' />
              <column datatype='real' name='Azerbaijan' ordinal='9' />
              <column datatype='real' name='Burundi' ordinal='10' />
              <column datatype='real' name='Belgium' ordinal='11' />
              <column datatype='real' name='Benin' ordinal='12' />
              <column datatype='real' name='Burkina Faso' ordinal='13' />
              <column datatype='real' name='Bangladesh' ordinal='14' />
              <column datatype='real' name='Bulgaria' ordinal='15' />
              <column datatype='real' name='Bahrain' ordinal='16' />
              <column datatype='real' name='Bahamas' ordinal='17' />
              <column datatype='real' name='Bosnia and Herzegovina' ordinal='18' />
              <column datatype='real' name='Belarus' ordinal='19' />
              <column datatype='real' name='Belize' ordinal='20' />
              <column datatype='real' name='Bolivia' ordinal='21' />
              <column datatype='real' name='Brazil' ordinal='22' />
              <column datatype='real' name='Barbados' ordinal='23' />
              <column datatype='real' name='Bhutan' ordinal='24' />
              <column datatype='real' name='Botswana' ordinal='25' />
              <column datatype='real' name='Central African Republic' ordinal='26' />
              <column datatype='real' name='Canada' ordinal='27' />
              <column datatype='real' name='Switzerland' ordinal='28' />
              <column datatype='real' name='Chile' ordinal='29' />
              <column datatype='real' name='China' ordinal='30' />
              <column datatype='real' name='Cote d&apos;Ivoire' ordinal='31' />
              <column datatype='real' name='Congo, Dem. Rep.' ordinal='32' />
              <column datatype='real' name='Congo, Rep.' ordinal='33' />
              <column datatype='real' name='Colombia' ordinal='34' />
              <column datatype='real' name='Comoros' ordinal='35' />
              <column datatype='real' name='Cabo Verde' ordinal='36' />
              <column datatype='real' name='Costa Rica' ordinal='37' />
              <column datatype='real' name='Cyprus' ordinal='38' />
              <column datatype='real' name='Czech Republic' ordinal='39' />
              <column datatype='real' name='Germany' ordinal='40' />
              <column datatype='real' name='Developing Countries' ordinal='41' />
              <column datatype='real' name='Djibouti' ordinal='42' />
              <column datatype='real' name='Dominica' ordinal='43' />
              <column datatype='real' name='Denmark' ordinal='44' />
              <column datatype='real' name='Dominican Republic' ordinal='45' />
              <column datatype='real' name='Algeria' ordinal='46' />
              <column datatype='real' name='East Asia &amp; Pacific developing' ordinal='47' />
              <column datatype='real' name='Europe &amp; Central Asia developing' ordinal='48' />
              <column datatype='real' name='Ecuador' ordinal='49' />
              <column datatype='real' name='Egypt, Arab Rep.' ordinal='50' />
              <column datatype='real' name='Spain' ordinal='51' />
              <column datatype='real' name='Estonia' ordinal='52' />
              <column datatype='real' name='Finland' ordinal='53' />
              <column datatype='real' name='Fiji' ordinal='54' />
              <column datatype='real' name='France' ordinal='55' />
              <column datatype='real' name='Gabon' ordinal='56' />
              <column datatype='real' name='United Kingdom' ordinal='57' />
              <column datatype='real' name='Georgia' ordinal='58' />
              <column datatype='real' name='Guinea' ordinal='59' />
              <column datatype='real' name='Gambia, The' ordinal='60' />
              <column datatype='real' name='Equatorial Guinea' ordinal='61' />
              <column datatype='real' name='Greece' ordinal='62' />
              <column datatype='real' name='Grenada' ordinal='63' />
              <column datatype='real' name='Guatemala' ordinal='64' />
              <column datatype='real' name='Guyana' ordinal='65' />
              <column datatype='real' name='High Income Countries' ordinal='66' />
              <column datatype='real' name='Hong Kong SAR, China' ordinal='67' />
              <column datatype='real' name='Honduras' ordinal='68' />
              <column datatype='real' name='Croatia' ordinal='69' />
              <column datatype='real' name='Haiti' ordinal='70' />
              <column datatype='real' name='Hungary' ordinal='71' />
              <column datatype='real' name='High income: OECD' ordinal='72' />
              <column datatype='real' name='Indonesia' ordinal='73' />
              <column datatype='real' name='India' ordinal='74' />
              <column datatype='real' name='Ireland' ordinal='75' />
              <column datatype='real' name='Iceland' ordinal='76' />
              <column datatype='real' name='Israel' ordinal='77' />
              <column datatype='real' name='Italy' ordinal='78' />
              <column datatype='real' name='Jamaica' ordinal='79' />
              <column datatype='real' name='Jordan' ordinal='80' />
              <column datatype='real' name='Japan' ordinal='81' />
              <column datatype='real' name='Kazakhstan' ordinal='82' />
              <column datatype='real' name='Kenya' ordinal='83' />
              <column datatype='real' name='Kyrgyz Republic' ordinal='84' />
              <column datatype='real' name='Cambodia' ordinal='85' />
              <column datatype='real' name='Kiribati' ordinal='86' />
              <column datatype='real' name='St. Kitts and Nevis' ordinal='87' />
              <column datatype='real' name='Korea, Rep.' ordinal='88' />
              <column datatype='real' name='Latin America &amp; Caribbean developing' ordinal='89' />
              <column datatype='real' name='Lao, PDR' ordinal='90' />
              <column datatype='real' name='Lebanon' ordinal='91' />
              <column datatype='real' name='Liberia' ordinal='92' />
              <column datatype='real' name='Libya' ordinal='93' />
              <column datatype='real' name='St. Lucia' ordinal='94' />
              <column datatype='real' name='Low Income' ordinal='95' />
              <column datatype='real' name='Lesotho' ordinal='96' />
              <column datatype='real' name='Lithuania' ordinal='97' />
              <column datatype='real' name='Luxembourg' ordinal='98' />
              <column datatype='real' name='Latvia' ordinal='99' />
              <column datatype='real' name='Morocco' ordinal='100' />
              <column datatype='real' name='Moldova, Rep.' ordinal='101' />
              <column datatype='real' name='Madagascar' ordinal='102' />
              <column datatype='real' name='Maldives' ordinal='103' />
              <column datatype='real' name='Mexico' ordinal='104' />
              <column datatype='real' name='Middle Income Countries' ordinal='105' />
              <column datatype='real' name='Macedonia, FYR' ordinal='106' />
              <column datatype='real' name='Mali' ordinal='107' />
              <column datatype='real' name='Malta' ordinal='108' />
              <column datatype='real' name='Middle East &amp; N. Africa developing' ordinal='109' />
              <column datatype='real' name='Montenegro' ordinal='110' />
              <column datatype='real' name='Mozambique' ordinal='111' />
              <column datatype='real' name='Mauritania' ordinal='112' />
              <column datatype='real' name='Mauritius' ordinal='113' />
              <column datatype='real' name='Malawi' ordinal='114' />
              <column datatype='real' name='Malaysia' ordinal='115' />
              <column datatype='real' name='Namibia' ordinal='116' />
              <column datatype='real' name='Nigeria' ordinal='117' />
              <column datatype='real' name='Nicaragua' ordinal='118' />
              <column datatype='real' name='Netherlands' ordinal='119' />
              <column datatype='real' name='Norway' ordinal='120' />
              <column datatype='real' name='Nepal' ordinal='121' />
              <column datatype='real' name='High Income: Non-OECD' ordinal='122' />
              <column datatype='real' name='Oman' ordinal='123' />
              <column datatype='real' name='Pakistan' ordinal='124' />
              <column datatype='real' name='Panama' ordinal='125' />
              <column datatype='real' name='Peru' ordinal='126' />
              <column datatype='real' name='Philippines' ordinal='127' />
              <column datatype='real' name='Poland' ordinal='128' />
              <column datatype='real' name='Portugal' ordinal='129' />
              <column datatype='real' name='Paraguay' ordinal='130' />
              <column datatype='real' name='West Bank and Gaza' ordinal='131' />
              <column datatype='real' name='Qatar' ordinal='132' />
              <column datatype='real' name='Romania' ordinal='133' />
              <column datatype='real' name='Russian Federation' ordinal='134' />
              <column datatype='real' name='Rwanda' ordinal='135' />
              <column datatype='real' name='South Asia developing' ordinal='136' />
              <column datatype='real' name='Saudi Arabia' ordinal='137' />
              <column datatype='real' name='Senegal' ordinal='138' />
              <column datatype='real' name='Singapore' ordinal='139' />
              <column datatype='real' name='Solomon Islands' ordinal='140' />
              <column datatype='real' name='Sierra Leone' ordinal='141' />
              <column datatype='real' name='El Salvador' ordinal='142' />
              <column datatype='real' name='San Marino' ordinal='143' />
              <column datatype='real' name='Serbia' ordinal='144' />
              <column datatype='real' name='Sub-Saharan Africa developing' ordinal='145' />
              <column datatype='real' name='Sao Tome and Principe' ordinal='146' />
              <column datatype='real' name='Suriname' ordinal='147' />
              <column datatype='real' name='Slovakia' ordinal='148' />
              <column datatype='real' name='Slovenia' ordinal='149' />
              <column datatype='real' name='Sweden' ordinal='150' />
              <column datatype='real' name='Swaziland' ordinal='151' />
              <column datatype='real' name='Seychelles' ordinal='152' />
              <column datatype='real' name='Chad' ordinal='153' />
              <column datatype='real' name='Togo' ordinal='154' />
              <column datatype='real' name='Thailand' ordinal='155' />
              <column datatype='real' name='Tajikistan' ordinal='156' />
              <column datatype='real' name='Timor-Leste' ordinal='157' />
              <column datatype='real' name='Tonga' ordinal='158' />
              <column datatype='real' name='Trinidad and Tobago' ordinal='159' />
              <column datatype='real' name='Tunisia' ordinal='160' />
              <column datatype='real' name='Turkey' ordinal='161' />
              <column datatype='real' name='Taiwan, China' ordinal='162' />
              <column datatype='real' name='Uganda' ordinal='163' />
              <column datatype='real' name='Uruguay' ordinal='164' />
              <column datatype='real' name='United States' ordinal='165' />
              <column datatype='real' name='St. Vincent and the Grenadines' ordinal='166' />
              <column datatype='real' name='Venezuela, RB' ordinal='167' />
              <column datatype='real' name='Vietnam' ordinal='168' />
              <column datatype='real' name='World (WBG members)' ordinal='169' />
              <column datatype='real' name='Samoa' ordinal='170' />
              <column datatype='real' name='Yemen, Rep.' ordinal='171' />
              <column datatype='real' name='South Africa' ordinal='172' />
              <column datatype='real' name='Zambia' ordinal='173' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:FR361:no:A1:FR361:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F7F0B2E1AAF241148245E5BDE5C4D914]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F7F0B2E1AAF241148245E5BDE5C4D914]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F7F0B2E1AAF241148245E5BDE5C4D914]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F7F0B2E1AAF241148245E5BDE5C4D914]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[CAGR_CPI (copy)_91620115805462533]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Pivot Field Names],&apos;Austria&apos;) THEN REPLACE([Pivot Field Names],&apos;Austria&apos;,&apos;Australia&apos;)&#10;ELSE [Pivot Field Names]&#10;END' />
      </column>
      <column caption='Calculation1' datatype='real' name='[Calculation_113434426074877955]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Pivot Field Values])-(LOOKUP(AVG([Pivot Field Values]),-1))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Price_increase' datatype='real' name='[Calculation_113434426075254788]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(AVG([Pivot Field Values])/(LOOKUP(AVG([Pivot Field Values]),-1))-1)*100'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='colooor' datatype='real' name='[Calculation_165859141287276544]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF' />
      </column>
      <column caption='Calculation2' datatype='real' name='[Calculation_165859141287407617]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF' />
      </column>
      <column caption='color' datatype='boolean' name='[Calculation_165859141287727107]' role='measure' type='nominal'>
        <calculation class='tableau' formula='((POWER(ZN(AVG([Pivot Field Values]))/LOOKUP(ZN(AVG([Pivot Field Values])), FIRST()),ZN(1/(INDEX()-1))) - 1)/100 )&gt;= 0.004'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='country_field' datatype='boolean' name='[Calculation_91620115802730500]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Country Set]' />
      </column>
      <column caption='sss' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='CPI_Monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F7F0B2E1AAF241148245E5BDE5C4D914]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[CAGR_CPI (copy)_91620115805462533]' derivation='None' name='[none:CAGR_CPI (copy)_91620115805462533:nk]' pivot='key' type='nominal' />
      <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_165859141287727107]' derivation='User' name='[usr:Calculation_165859141287727107:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country,YEAR(Year)) 1 2' hidden='true' name='[Action (Country,YEAR(Year)) 1 2]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[CAGR_CPI (copy)_91620115805462533]' />
          <groupfilter function='level-members' level='[tyr:year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,YEAR(Year)) 1' hidden='true' name='[Action (Country,YEAR(Year)) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[CAGR_CPI (copy)_91620115805462533]' />
          <groupfilter function='level-members' level='[yr:year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,YEAR(Year))' hidden='true' name='[Action (Country,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Pivot Field Names]' />
          <groupfilter function='level-members' level='[yr:year:ok]' />
        </groupfilter>
      </group>
      <group caption='Country Set' name='[Country Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Afghanistan&quot;' />
          <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Algeria&quot;' />
          <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Austria&quot;' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/peramnavachandureddy/Documents/My Tableau Repository/Datasources/Sheet1 (cpi_monthly).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/25/2022 10:03:25 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (cpi_monthly)' increment-value='%null%' refresh-type='create' rows-inserted='61920' timestamp-start='2022-09-25 10:03:25.508' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>796</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F7F0B2E1AAF241148245E5BDE5C4D914]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>796</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F7F0B2E1AAF241148245E5BDE5C4D914]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Names</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Pivot Field Names]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Names</remote-alias>
              <ordinal>2</ordinal>
              <family>Pivot</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>178</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F7F0B2E1AAF241148245E5BDE5C4D914]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Values</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Pivot Field Values]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Values</remote-alias>
              <ordinal>3</ordinal>
              <family>Pivot</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31470</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F7F0B2E1AAF241148245E5BDE5C4D914]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.81068' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.18932' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_165859141287727107:nk]' type='palette'>
            <map to='#f28e2b'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Pivot Field Names:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Developing Asia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taiwan, China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;World (WBG members)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Asia &amp; Pacific developing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;High Income Countries&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lao, PDR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Middle East &amp; N. Africa developing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Developing Countries&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;High Income: Non-OECD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latin America &amp; Caribbean developing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Middle Income Countries&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Low Income&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;High income: OECD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova, Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sub-Saharan Africa developing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Asia developing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe &amp; Central Asia developing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:CAGR_CPI (copy)_91620115805462533:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <filter class='categorical' column='[Pivot Field Names]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Pivot Field Names]' />
          <groupfilter function='union'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[Pivot Field Names]' to='&quot;Armenia&quot;' />
            <groupfilter from='&quot;Azerbaijan&quot;' function='range' level='[Pivot Field Names]' to='&quot;Belarus&quot;' />
            <groupfilter from='&quot;Belize&quot;' function='range' level='[Pivot Field Names]' to='&quot;Botswana&quot;' />
            <groupfilter from='&quot;Bulgaria&quot;' function='range' level='[Pivot Field Names]' to='&quot;Cambodia&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Central African Republic&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Chad&quot;' />
            <groupfilter from='&quot;Colombia&quot;' function='range' level='[Pivot Field Names]' to='&quot;Cyprus&quot;' />
            <groupfilter from='&quot;Developing Asia&quot;' function='range' level='[Pivot Field Names]' to='&quot;Equatorial Guinea&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Europe &amp; Central Asia developing&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Fiji&quot;' />
            <groupfilter from='&quot;Gabon&quot;' function='range' level='[Pivot Field Names]' to='&quot;Georgia&quot;' />
            <groupfilter from='&quot;Greece&quot;' function='range' level='[Pivot Field Names]' to='&quot;Hong Kong SAR, China&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Iceland&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;India&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Ireland&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Jamaica&quot;' />
            <groupfilter from='&quot;Kazakhstan&quot;' function='range' level='[Pivot Field Names]' to='&quot;Kiribati&quot;' />
            <groupfilter from='&quot;Kyrgyz Republic&quot;' function='range' level='[Pivot Field Names]' to='&quot;Malawi&quot;' />
            <groupfilter from='&quot;Maldives&quot;' function='range' level='[Pivot Field Names]' to='&quot;Mauritius&quot;' />
            <groupfilter from='&quot;Middle East &amp; N. Africa developing&quot;' function='range' level='[Pivot Field Names]' to='&quot;Nepal&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Nicaragua&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Nigeria&quot;' />
            <groupfilter from='&quot;Oman&quot;' function='range' level='[Pivot Field Names]' to='&quot;Paraguay&quot;' />
            <groupfilter from='&quot;Portugal&quot;' function='range' level='[Pivot Field Names]' to='&quot;Romania&quot;' />
            <groupfilter from='&quot;Rwanda&quot;' function='range' level='[Pivot Field Names]' to='&quot;Sierra Leone&quot;' />
            <groupfilter from='&quot;Slovenia&quot;' function='range' level='[Pivot Field Names]' to='&quot;South Asia developing&quot;' />
            <groupfilter from='&quot;St. Kitts and Nevis&quot;' function='range' level='[Pivot Field Names]' to='&quot;Swaziland&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Switzerland&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;Tajikistan&quot;' />
            <groupfilter from='&quot;Timor-Leste&quot;' function='range' level='[Pivot Field Names]' to='&quot;Tunisia&quot;' />
            <groupfilter function='member' level='[Pivot Field Names]' member='&quot;United Arab Emirates&quot;' />
            <groupfilter from='&quot;Uruguay&quot;' function='range' level='[Pivot Field Names]' to='&quot;Zambia&quot;' />
          </groupfilter>
        </groupfilter>
      </filter>
      <filter class='categorical' column='[yr:year:ok]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[yr:year:ok]' />
          <groupfilter function='member' level='[yr:year:ok]' member='2018' />
        </groupfilter>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F7F0B2E1AAF241148245E5BDE5C4D914'>
            <properties context=''>
              <relation name='Pivot' type='pivot'>
                <columns>
                  <column datatype='string' name='Pivot Field Names' />
                  <column datatype='real' name='Pivot Field Values' />
                </columns>
                <tag name='Pivot Field Names'>
                  <value name='[Afghanistan]' />
                  <value name='[Albania]' />
                  <value name='[Algeria]' />
                  <value name='[Antigua and Barbuda]' />
                  <value name='[Armenia]' />
                  <value name='[Austria]' />
                  <value name='[Azerbaijan]' />
                  <value name='[Bahamas]' />
                  <value name='[Bahrain]' />
                  <value name='[Bangladesh]' />
                  <value name='[Barbados]' />
                  <value name='[Belarus]' />
                  <value name='[Belgium]' />
                  <value name='[Belize]' />
                  <value name='[Benin]' />
                  <value name='[Bhutan]' />
                  <value name='[Bolivia]' />
                  <value name='[Bosnia and Herzegovina]' />
                  <value name='[Botswana]' />
                  <value name='[Brazil]' />
                  <value name='[Bulgaria]' />
                  <value name='[Burkina Faso]' />
                  <value name='[Burundi]' />
                  <value name='[Cabo Verde]' />
                  <value name='[Cambodia]' />
                  <value name='[Canada]' />
                  <value name='[Central African Republic]' />
                  <value name='[Chad]' />
                  <value name='[Chile]' />
                  <value name='[China]' />
                  <value name='[Colombia]' />
                  <value name='[Comoros]' />
                  <value name='[Congo, Dem. Rep.]' />
                  <value name='[Congo, Rep.]' />
                  <value name='[Costa Rica]' />
                  <value name='[Cote d&apos;Ivoire]' />
                  <value name='[Croatia]' />
                  <value name='[Cyprus]' />
                  <value name='[Czech Republic]' />
                  <value name='[Denmark]' />
                  <value name='[Developing Asia]' />
                  <value name='[Developing Countries]' />
                  <value name='[Djibouti]' />
                  <value name='[Dominica]' />
                  <value name='[Dominican Republic]' />
                  <value name='[East Asia &amp; Pacific developing]' />
                  <value name='[Ecuador]' />
                  <value name='[Egypt, Arab Rep.]' />
                  <value name='[El Salvador]' />
                  <value name='[Equatorial Guinea]' />
                  <value name='[Estonia]' />
                  <value name='[Europe &amp; Central Asia developing]' />
                  <value name='[Fiji]' />
                  <value name='[Finland]' />
                  <value name='[France]' />
                  <value name='[Gabon]' />
                  <value name='[Gambia, The]' />
                  <value name='[Georgia]' />
                  <value name='[Germany]' />
                  <value name='[Greece]' />
                  <value name='[Grenada]' />
                  <value name='[Guatemala]' />
                  <value name='[Guinea]' />
                  <value name='[Guyana]' />
                  <value name='[Haiti]' />
                  <value name='[High Income Countries]' />
                  <value name='[High Income: Non-OECD]' />
                  <value name='[High income: OECD]' />
                  <value name='[Honduras]' />
                  <value name='[Hong Kong SAR, China]' />
                  <value name='[Hungary]' />
                  <value name='[Iceland]' />
                  <value name='[India]' />
                  <value name='[Indonesia]' />
                  <value name='[Ireland]' />
                  <value name='[Israel]' />
                  <value name='[Italy]' />
                  <value name='[Jamaica]' />
                  <value name='[Japan]' />
                  <value name='[Jordan]' />
                  <value name='[Kazakhstan]' />
                  <value name='[Kenya]' />
                  <value name='[Kiribati]' />
                  <value name='[Korea, Rep.]' />
                  <value name='[Kyrgyz Republic]' />
                  <value name='[Lao, PDR]' />
                  <value name='[Latin America &amp; Caribbean developing]' />
                  <value name='[Latvia]' />
                  <value name='[Lebanon]' />
                  <value name='[Lesotho]' />
                  <value name='[Liberia]' />
                  <value name='[Libya]' />
                  <value name='[Lithuania]' />
                  <value name='[Low Income]' />
                  <value name='[Luxembourg]' />
                  <value name='[Macedonia, FYR]' />
                  <value name='[Madagascar]' />
                  <value name='[Malawi]' />
                  <value name='[Malaysia]' />
                  <value name='[Maldives]' />
                  <value name='[Mali]' />
                  <value name='[Malta]' />
                  <value name='[Mauritania]' />
                  <value name='[Mauritius]' />
                  <value name='[Mexico]' />
                  <value name='[Middle East &amp; N. Africa developing]' />
                  <value name='[Middle Income Countries]' />
                  <value name='[Moldova, Rep.]' />
                  <value name='[Montenegro]' />
                  <value name='[Morocco]' />
                  <value name='[Mozambique]' />
                  <value name='[Namibia]' />
                  <value name='[Nepal]' />
                  <value name='[Netherlands]' />
                  <value name='[Nicaragua]' />
                  <value name='[Nigeria]' />
                  <value name='[Norway]' />
                  <value name='[Oman]' />
                  <value name='[Pakistan]' />
                  <value name='[Panama]' />
                  <value name='[Paraguay]' />
                  <value name='[Peru]' />
                  <value name='[Philippines]' />
                  <value name='[Poland]' />
                  <value name='[Portugal]' />
                  <value name='[Qatar]' />
                  <value name='[Romania]' />
                  <value name='[Russian Federation]' />
                  <value name='[Rwanda]' />
                  <value name='[Samoa]' />
                  <value name='[San Marino]' />
                  <value name='[Sao Tome and Principe]' />
                  <value name='[Saudi Arabia]' />
                  <value name='[Senegal]' />
                  <value name='[Serbia]' />
                  <value name='[Seychelles]' />
                  <value name='[Sierra Leone]' />
                  <value name='[Singapore]' />
                  <value name='[Slovakia]' />
                  <value name='[Slovenia]' />
                  <value name='[Solomon Islands]' />
                  <value name='[South Africa]' />
                  <value name='[South Asia developing]' />
                  <value name='[Spain]' />
                  <value name='[St. Kitts and Nevis]' />
                  <value name='[St. Lucia]' />
                  <value name='[St. Vincent and the Grenadines]' />
                  <value name='[Sub-Saharan Africa developing]' />
                  <value name='[Suriname]' />
                  <value name='[Swaziland]' />
                  <value name='[Sweden]' />
                  <value name='[Switzerland]' />
                  <value name='[Taiwan, China]' />
                  <value name='[Tajikistan]' />
                  <value name='[Thailand]' />
                  <value name='[Timor-Leste]' />
                  <value name='[Togo]' />
                  <value name='[Tonga]' />
                  <value name='[Trinidad and Tobago]' />
                  <value name='[Tunisia]' />
                  <value name='[Turkey]' />
                  <value name='[Uganda]' />
                  <value name='[United Arab Emirates]' />
                  <value name='[United Kingdom]' />
                  <value name='[United States]' />
                  <value name='[Uruguay]' />
                  <value name='[Venezuela, RB]' />
                  <value name='[Vietnam]' />
                  <value name='[West Bank and Gaza]' />
                  <value name='[World (WBG members)]' />
                  <value name='[Yemen, Rep.]' />
                  <value name='[Zambia]' />
                </tag>
                <groups>
                  <group name='Pivot Field Values'>
                    <field name='[Sheet1].[Afghanistan]' />
                    <field name='[Sheet1].[Albania]' />
                    <field name='[Sheet1].[Algeria]' />
                    <field name='[Sheet1].[Antigua and Barbuda]' />
                    <field name='[Sheet1].[Armenia]' />
                    <field name='[Sheet1].[Austria]' />
                    <field name='[Sheet1].[Azerbaijan]' />
                    <field name='[Sheet1].[Bahamas]' />
                    <field name='[Sheet1].[Bahrain]' />
                    <field name='[Sheet1].[Bangladesh]' />
                    <field name='[Sheet1].[Barbados]' />
                    <field name='[Sheet1].[Belarus]' />
                    <field name='[Sheet1].[Belgium]' />
                    <field name='[Sheet1].[Belize]' />
                    <field name='[Sheet1].[Benin]' />
                    <field name='[Sheet1].[Bhutan]' />
                    <field name='[Sheet1].[Bolivia]' />
                    <field name='[Sheet1].[Bosnia and Herzegovina]' />
                    <field name='[Sheet1].[Botswana]' />
                    <field name='[Sheet1].[Brazil]' />
                    <field name='[Sheet1].[Bulgaria]' />
                    <field name='[Sheet1].[Burkina Faso]' />
                    <field name='[Sheet1].[Burundi]' />
                    <field name='[Sheet1].[Cabo Verde]' />
                    <field name='[Sheet1].[Cambodia]' />
                    <field name='[Sheet1].[Canada]' />
                    <field name='[Sheet1].[Central African Republic]' />
                    <field name='[Sheet1].[Chad]' />
                    <field name='[Sheet1].[Chile]' />
                    <field name='[Sheet1].[China]' />
                    <field name='[Sheet1].[Colombia]' />
                    <field name='[Sheet1].[Comoros]' />
                    <field name='[Sheet1].[Congo, Dem. Rep.]' />
                    <field name='[Sheet1].[Congo, Rep.]' />
                    <field name='[Sheet1].[Costa Rica]' />
                    <field name='[Sheet1].[Cote d&apos;Ivoire]' />
                    <field name='[Sheet1].[Croatia]' />
                    <field name='[Sheet1].[Cyprus]' />
                    <field name='[Sheet1].[Czech Republic]' />
                    <field name='[Sheet1].[Denmark]' />
                    <field name='[Sheet1].[Developing Asia]' />
                    <field name='[Sheet1].[Developing Countries]' />
                    <field name='[Sheet1].[Djibouti]' />
                    <field name='[Sheet1].[Dominica]' />
                    <field name='[Sheet1].[Dominican Republic]' />
                    <field name='[Sheet1].[East Asia &amp; Pacific developing]' />
                    <field name='[Sheet1].[Ecuador]' />
                    <field name='[Sheet1].[Egypt, Arab Rep.]' />
                    <field name='[Sheet1].[El Salvador]' />
                    <field name='[Sheet1].[Equatorial Guinea]' />
                    <field name='[Sheet1].[Estonia]' />
                    <field name='[Sheet1].[Europe &amp; Central Asia developing]' />
                    <field name='[Sheet1].[Fiji]' />
                    <field name='[Sheet1].[Finland]' />
                    <field name='[Sheet1].[France]' />
                    <field name='[Sheet1].[Gabon]' />
                    <field name='[Sheet1].[Gambia, The]' />
                    <field name='[Sheet1].[Georgia]' />
                    <field name='[Sheet1].[Germany]' />
                    <field name='[Sheet1].[Greece]' />
                    <field name='[Sheet1].[Grenada]' />
                    <field name='[Sheet1].[Guatemala]' />
                    <field name='[Sheet1].[Guinea]' />
                    <field name='[Sheet1].[Guyana]' />
                    <field name='[Sheet1].[Haiti]' />
                    <field name='[Sheet1].[High Income Countries]' />
                    <field name='[Sheet1].[High Income: Non-OECD]' />
                    <field name='[Sheet1].[High income: OECD]' />
                    <field name='[Sheet1].[Honduras]' />
                    <field name='[Sheet1].[Hong Kong SAR, China]' />
                    <field name='[Sheet1].[Hungary]' />
                    <field name='[Sheet1].[Iceland]' />
                    <field name='[Sheet1].[India]' />
                    <field name='[Sheet1].[Indonesia]' />
                    <field name='[Sheet1].[Ireland]' />
                    <field name='[Sheet1].[Israel]' />
                    <field name='[Sheet1].[Italy]' />
                    <field name='[Sheet1].[Jamaica]' />
                    <field name='[Sheet1].[Japan]' />
                    <field name='[Sheet1].[Jordan]' />
                    <field name='[Sheet1].[Kazakhstan]' />
                    <field name='[Sheet1].[Kenya]' />
                    <field name='[Sheet1].[Kiribati]' />
                    <field name='[Sheet1].[Korea, Rep.]' />
                    <field name='[Sheet1].[Kyrgyz Republic]' />
                    <field name='[Sheet1].[Lao, PDR]' />
                    <field name='[Sheet1].[Latin America &amp; Caribbean developing]' />
                    <field name='[Sheet1].[Latvia]' />
                    <field name='[Sheet1].[Lebanon]' />
                    <field name='[Sheet1].[Lesotho]' />
                    <field name='[Sheet1].[Liberia]' />
                    <field name='[Sheet1].[Libya]' />
                    <field name='[Sheet1].[Lithuania]' />
                    <field name='[Sheet1].[Low Income]' />
                    <field name='[Sheet1].[Luxembourg]' />
                    <field name='[Sheet1].[Macedonia, FYR]' />
                    <field name='[Sheet1].[Madagascar]' />
                    <field name='[Sheet1].[Malawi]' />
                    <field name='[Sheet1].[Malaysia]' />
                    <field name='[Sheet1].[Maldives]' />
                    <field name='[Sheet1].[Mali]' />
                    <field name='[Sheet1].[Malta]' />
                    <field name='[Sheet1].[Mauritania]' />
                    <field name='[Sheet1].[Mauritius]' />
                    <field name='[Sheet1].[Mexico]' />
                    <field name='[Sheet1].[Middle East &amp; N. Africa developing]' />
                    <field name='[Sheet1].[Middle Income Countries]' />
                    <field name='[Sheet1].[Moldova, Rep.]' />
                    <field name='[Sheet1].[Montenegro]' />
                    <field name='[Sheet1].[Morocco]' />
                    <field name='[Sheet1].[Mozambique]' />
                    <field name='[Sheet1].[Namibia]' />
                    <field name='[Sheet1].[Nepal]' />
                    <field name='[Sheet1].[Netherlands]' />
                    <field name='[Sheet1].[Nicaragua]' />
                    <field name='[Sheet1].[Nigeria]' />
                    <field name='[Sheet1].[Norway]' />
                    <field name='[Sheet1].[Oman]' />
                    <field name='[Sheet1].[Pakistan]' />
                    <field name='[Sheet1].[Panama]' />
                    <field name='[Sheet1].[Paraguay]' />
                    <field name='[Sheet1].[Peru]' />
                    <field name='[Sheet1].[Philippines]' />
                    <field name='[Sheet1].[Poland]' />
                    <field name='[Sheet1].[Portugal]' />
                    <field name='[Sheet1].[Qatar]' />
                    <field name='[Sheet1].[Romania]' />
                    <field name='[Sheet1].[Russian Federation]' />
                    <field name='[Sheet1].[Rwanda]' />
                    <field name='[Sheet1].[Samoa]' />
                    <field name='[Sheet1].[San Marino]' />
                    <field name='[Sheet1].[Sao Tome and Principe]' />
                    <field name='[Sheet1].[Saudi Arabia]' />
                    <field name='[Sheet1].[Senegal]' />
                    <field name='[Sheet1].[Serbia]' />
                    <field name='[Sheet1].[Seychelles]' />
                    <field name='[Sheet1].[Sierra Leone]' />
                    <field name='[Sheet1].[Singapore]' />
                    <field name='[Sheet1].[Slovakia]' />
                    <field name='[Sheet1].[Slovenia]' />
                    <field name='[Sheet1].[Solomon Islands]' />
                    <field name='[Sheet1].[South Africa]' />
                    <field name='[Sheet1].[South Asia developing]' />
                    <field name='[Sheet1].[Spain]' />
                    <field name='[Sheet1].[St. Kitts and Nevis]' />
                    <field name='[Sheet1].[St. Lucia]' />
                    <field name='[Sheet1].[St. Vincent and the Grenadines]' />
                    <field name='[Sheet1].[Sub-Saharan Africa developing]' />
                    <field name='[Sheet1].[Suriname]' />
                    <field name='[Sheet1].[Swaziland]' />
                    <field name='[Sheet1].[Sweden]' />
                    <field name='[Sheet1].[Switzerland]' />
                    <field name='[Sheet1].[Taiwan, China]' />
                    <field name='[Sheet1].[Tajikistan]' />
                    <field name='[Sheet1].[Thailand]' />
                    <field name='[Sheet1].[Timor-Leste]' />
                    <field name='[Sheet1].[Togo]' />
                    <field name='[Sheet1].[Tonga]' />
                    <field name='[Sheet1].[Trinidad and Tobago]' />
                    <field name='[Sheet1].[Tunisia]' />
                    <field name='[Sheet1].[Turkey]' />
                    <field name='[Sheet1].[Uganda]' />
                    <field name='[Sheet1].[United Arab Emirates]' />
                    <field name='[Sheet1].[United Kingdom]' />
                    <field name='[Sheet1].[United States]' />
                    <field name='[Sheet1].[Uruguay]' />
                    <field name='[Sheet1].[Venezuela, RB]' />
                    <field name='[Sheet1].[Vietnam]' />
                    <field name='[Sheet1].[West Bank and Gaza]' />
                    <field name='[Sheet1].[World (WBG members)]' />
                    <field name='[Sheet1].[Yemen, Rep.]' />
                    <field name='[Sheet1].[Zambia]' />
                  </group>
                </groups>
                <relation connection='excel-direct.083si730oxbgje1dd6r9i0ud29wd' name='Sheet1' table='[Sheet1$]' type='table'>
                  <columns gridOrigin='A1:FR361:no:A1:FR361:0' header='yes' outcome='6'>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='date' name='year' ordinal='1' />
                    <column datatype='real' name='Afghanistan' ordinal='2' />
                    <column datatype='real' name='Albania' ordinal='3' />
                    <column datatype='real' name='United Arab Emirates' ordinal='4' />
                    <column datatype='real' name='Armenia' ordinal='5' />
                    <column datatype='real' name='Developing Asia' ordinal='6' />
                    <column datatype='real' name='Antigua and Barbuda' ordinal='7' />
                    <column datatype='real' name='Austria' ordinal='8' />
                    <column datatype='real' name='Azerbaijan' ordinal='9' />
                    <column datatype='real' name='Burundi' ordinal='10' />
                    <column datatype='real' name='Belgium' ordinal='11' />
                    <column datatype='real' name='Benin' ordinal='12' />
                    <column datatype='real' name='Burkina Faso' ordinal='13' />
                    <column datatype='real' name='Bangladesh' ordinal='14' />
                    <column datatype='real' name='Bulgaria' ordinal='15' />
                    <column datatype='real' name='Bahrain' ordinal='16' />
                    <column datatype='real' name='Bahamas' ordinal='17' />
                    <column datatype='real' name='Bosnia and Herzegovina' ordinal='18' />
                    <column datatype='real' name='Belarus' ordinal='19' />
                    <column datatype='real' name='Belize' ordinal='20' />
                    <column datatype='real' name='Bolivia' ordinal='21' />
                    <column datatype='real' name='Brazil' ordinal='22' />
                    <column datatype='real' name='Barbados' ordinal='23' />
                    <column datatype='real' name='Bhutan' ordinal='24' />
                    <column datatype='real' name='Botswana' ordinal='25' />
                    <column datatype='real' name='Central African Republic' ordinal='26' />
                    <column datatype='real' name='Canada' ordinal='27' />
                    <column datatype='real' name='Switzerland' ordinal='28' />
                    <column datatype='real' name='Chile' ordinal='29' />
                    <column datatype='real' name='China' ordinal='30' />
                    <column datatype='real' name='Cote d&apos;Ivoire' ordinal='31' />
                    <column datatype='real' name='Congo, Dem. Rep.' ordinal='32' />
                    <column datatype='real' name='Congo, Rep.' ordinal='33' />
                    <column datatype='real' name='Colombia' ordinal='34' />
                    <column datatype='real' name='Comoros' ordinal='35' />
                    <column datatype='real' name='Cabo Verde' ordinal='36' />
                    <column datatype='real' name='Costa Rica' ordinal='37' />
                    <column datatype='real' name='Cyprus' ordinal='38' />
                    <column datatype='real' name='Czech Republic' ordinal='39' />
                    <column datatype='real' name='Germany' ordinal='40' />
                    <column datatype='real' name='Developing Countries' ordinal='41' />
                    <column datatype='real' name='Djibouti' ordinal='42' />
                    <column datatype='real' name='Dominica' ordinal='43' />
                    <column datatype='real' name='Denmark' ordinal='44' />
                    <column datatype='real' name='Dominican Republic' ordinal='45' />
                    <column datatype='real' name='Algeria' ordinal='46' />
                    <column datatype='real' name='East Asia &amp; Pacific developing' ordinal='47' />
                    <column datatype='real' name='Europe &amp; Central Asia developing' ordinal='48' />
                    <column datatype='real' name='Ecuador' ordinal='49' />
                    <column datatype='real' name='Egypt, Arab Rep.' ordinal='50' />
                    <column datatype='real' name='Spain' ordinal='51' />
                    <column datatype='real' name='Estonia' ordinal='52' />
                    <column datatype='real' name='Finland' ordinal='53' />
                    <column datatype='real' name='Fiji' ordinal='54' />
                    <column datatype='real' name='France' ordinal='55' />
                    <column datatype='real' name='Gabon' ordinal='56' />
                    <column datatype='real' name='United Kingdom' ordinal='57' />
                    <column datatype='real' name='Georgia' ordinal='58' />
                    <column datatype='real' name='Guinea' ordinal='59' />
                    <column datatype='real' name='Gambia, The' ordinal='60' />
                    <column datatype='real' name='Equatorial Guinea' ordinal='61' />
                    <column datatype='real' name='Greece' ordinal='62' />
                    <column datatype='real' name='Grenada' ordinal='63' />
                    <column datatype='real' name='Guatemala' ordinal='64' />
                    <column datatype='real' name='Guyana' ordinal='65' />
                    <column datatype='real' name='High Income Countries' ordinal='66' />
                    <column datatype='real' name='Hong Kong SAR, China' ordinal='67' />
                    <column datatype='real' name='Honduras' ordinal='68' />
                    <column datatype='real' name='Croatia' ordinal='69' />
                    <column datatype='real' name='Haiti' ordinal='70' />
                    <column datatype='real' name='Hungary' ordinal='71' />
                    <column datatype='real' name='High income: OECD' ordinal='72' />
                    <column datatype='real' name='Indonesia' ordinal='73' />
                    <column datatype='real' name='India' ordinal='74' />
                    <column datatype='real' name='Ireland' ordinal='75' />
                    <column datatype='real' name='Iceland' ordinal='76' />
                    <column datatype='real' name='Israel' ordinal='77' />
                    <column datatype='real' name='Italy' ordinal='78' />
                    <column datatype='real' name='Jamaica' ordinal='79' />
                    <column datatype='real' name='Jordan' ordinal='80' />
                    <column datatype='real' name='Japan' ordinal='81' />
                    <column datatype='real' name='Kazakhstan' ordinal='82' />
                    <column datatype='real' name='Kenya' ordinal='83' />
                    <column datatype='real' name='Kyrgyz Republic' ordinal='84' />
                    <column datatype='real' name='Cambodia' ordinal='85' />
                    <column datatype='real' name='Kiribati' ordinal='86' />
                    <column datatype='real' name='St. Kitts and Nevis' ordinal='87' />
                    <column datatype='real' name='Korea, Rep.' ordinal='88' />
                    <column datatype='real' name='Latin America &amp; Caribbean developing' ordinal='89' />
                    <column datatype='real' name='Lao, PDR' ordinal='90' />
                    <column datatype='real' name='Lebanon' ordinal='91' />
                    <column datatype='real' name='Liberia' ordinal='92' />
                    <column datatype='real' name='Libya' ordinal='93' />
                    <column datatype='real' name='St. Lucia' ordinal='94' />
                    <column datatype='real' name='Low Income' ordinal='95' />
                    <column datatype='real' name='Lesotho' ordinal='96' />
                    <column datatype='real' name='Lithuania' ordinal='97' />
                    <column datatype='real' name='Luxembourg' ordinal='98' />
                    <column datatype='real' name='Latvia' ordinal='99' />
                    <column datatype='real' name='Morocco' ordinal='100' />
                    <column datatype='real' name='Moldova, Rep.' ordinal='101' />
                    <column datatype='real' name='Madagascar' ordinal='102' />
                    <column datatype='real' name='Maldives' ordinal='103' />
                    <column datatype='real' name='Mexico' ordinal='104' />
                    <column datatype='real' name='Middle Income Countries' ordinal='105' />
                    <column datatype='real' name='Macedonia, FYR' ordinal='106' />
                    <column datatype='real' name='Mali' ordinal='107' />
                    <column datatype='real' name='Malta' ordinal='108' />
                    <column datatype='real' name='Middle East &amp; N. Africa developing' ordinal='109' />
                    <column datatype='real' name='Montenegro' ordinal='110' />
                    <column datatype='real' name='Mozambique' ordinal='111' />
                    <column datatype='real' name='Mauritania' ordinal='112' />
                    <column datatype='real' name='Mauritius' ordinal='113' />
                    <column datatype='real' name='Malawi' ordinal='114' />
                    <column datatype='real' name='Malaysia' ordinal='115' />
                    <column datatype='real' name='Namibia' ordinal='116' />
                    <column datatype='real' name='Nigeria' ordinal='117' />
                    <column datatype='real' name='Nicaragua' ordinal='118' />
                    <column datatype='real' name='Netherlands' ordinal='119' />
                    <column datatype='real' name='Norway' ordinal='120' />
                    <column datatype='real' name='Nepal' ordinal='121' />
                    <column datatype='real' name='High Income: Non-OECD' ordinal='122' />
                    <column datatype='real' name='Oman' ordinal='123' />
                    <column datatype='real' name='Pakistan' ordinal='124' />
                    <column datatype='real' name='Panama' ordinal='125' />
                    <column datatype='real' name='Peru' ordinal='126' />
                    <column datatype='real' name='Philippines' ordinal='127' />
                    <column datatype='real' name='Poland' ordinal='128' />
                    <column datatype='real' name='Portugal' ordinal='129' />
                    <column datatype='real' name='Paraguay' ordinal='130' />
                    <column datatype='real' name='West Bank and Gaza' ordinal='131' />
                    <column datatype='real' name='Qatar' ordinal='132' />
                    <column datatype='real' name='Romania' ordinal='133' />
                    <column datatype='real' name='Russian Federation' ordinal='134' />
                    <column datatype='real' name='Rwanda' ordinal='135' />
                    <column datatype='real' name='South Asia developing' ordinal='136' />
                    <column datatype='real' name='Saudi Arabia' ordinal='137' />
                    <column datatype='real' name='Senegal' ordinal='138' />
                    <column datatype='real' name='Singapore' ordinal='139' />
                    <column datatype='real' name='Solomon Islands' ordinal='140' />
                    <column datatype='real' name='Sierra Leone' ordinal='141' />
                    <column datatype='real' name='El Salvador' ordinal='142' />
                    <column datatype='real' name='San Marino' ordinal='143' />
                    <column datatype='real' name='Serbia' ordinal='144' />
                    <column datatype='real' name='Sub-Saharan Africa developing' ordinal='145' />
                    <column datatype='real' name='Sao Tome and Principe' ordinal='146' />
                    <column datatype='real' name='Suriname' ordinal='147' />
                    <column datatype='real' name='Slovakia' ordinal='148' />
                    <column datatype='real' name='Slovenia' ordinal='149' />
                    <column datatype='real' name='Sweden' ordinal='150' />
                    <column datatype='real' name='Swaziland' ordinal='151' />
                    <column datatype='real' name='Seychelles' ordinal='152' />
                    <column datatype='real' name='Chad' ordinal='153' />
                    <column datatype='real' name='Togo' ordinal='154' />
                    <column datatype='real' name='Thailand' ordinal='155' />
                    <column datatype='real' name='Tajikistan' ordinal='156' />
                    <column datatype='real' name='Timor-Leste' ordinal='157' />
                    <column datatype='real' name='Tonga' ordinal='158' />
                    <column datatype='real' name='Trinidad and Tobago' ordinal='159' />
                    <column datatype='real' name='Tunisia' ordinal='160' />
                    <column datatype='real' name='Turkey' ordinal='161' />
                    <column datatype='real' name='Taiwan, China' ordinal='162' />
                    <column datatype='real' name='Uganda' ordinal='163' />
                    <column datatype='real' name='Uruguay' ordinal='164' />
                    <column datatype='real' name='United States' ordinal='165' />
                    <column datatype='real' name='St. Vincent and the Grenadines' ordinal='166' />
                    <column datatype='real' name='Venezuela, RB' ordinal='167' />
                    <column datatype='real' name='Vietnam' ordinal='168' />
                    <column datatype='real' name='World (WBG members)' ordinal='169' />
                    <column datatype='real' name='Samoa' ordinal='170' />
                    <column datatype='real' name='Yemen, Rep.' ordinal='171' />
                    <column datatype='real' name='South Africa' ordinal='172' />
                    <column datatype='real' name='Zambia' ordinal='173' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.098uei71m1aili129s8t8014b1h5'>
      <datasources>
        <datasource caption='Sheet1 (exchange_monthly)' name='federated.098uei71m1aili129s8t8014b1h5' />
      </datasources>
      <datasource-dependencies datasource='federated.098uei71m1aili129s8t8014b1h5'>
        <column caption='Country' datatype='string' name='[Calculation_88946105234595841]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='IF CONTAINS([Pivot Field Names],&apos;Ca0da&apos;) THEN REPLACE([Pivot Field Names],&apos;Ca0da&apos;,&apos;Canada&apos;)&#10;ELSEIF CONTAINS([Pivot Field Names],&apos;Chi0&apos;) THEN REPLACE([Pivot Field Names],&apos;Chi0&apos;,&apos;China&apos;)&#10;ELSEIF CONTAINS([Pivot Field Names],&apos;Taiwan, Chi0&apos;) THEN REPLACE([Pivot Field Names],&apos;Taiwan, Chi0&apos;,&apos;Taiwan&apos;)&#10;ELSE [Pivot Field Names] END' />
        </column>
        <column-instance column='[Calculation_88946105234595841]' derivation='None' name='[none:Calculation_88946105234595841:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
        <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
        <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
        <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;China&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Czech Republic&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Estonia&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Finland&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;France&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Hungary&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Indonesia&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Israel&quot;' />
        </groupfilter>
        <target field='[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[qr:year:ok]' member='3' />
          <groupfilter function='member' level='[qr:year:ok]' member='4' />
        </groupfilter>
        <target field='[federated.098uei71m1aili129s8t8014b1h5].[qr:year:ok]' />
      </filter>
      <filter class='categorical' column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[yr:year:ok]' member='2005' />
          <groupfilter function='member' level='[yr:year:ok]' member='2009' />
          <groupfilter function='member' level='[yr:year:ok]' member='2011' />
        </groupfilter>
        <target field='[federated.098uei71m1aili129s8t8014b1h5].[yr:year:ok]' />
      </filter>
    </shared-view>
    <shared-view name='federated.0iynzyu0k9870v15i0jmc03qe5co'>
      <datasources>
        <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
      </datasources>
      <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
        <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
        <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;China&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Czech Republic&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Estonia&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Finland&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;France&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Hungary&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Indonesia&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Israel&quot;' />
        </groupfilter>
        <target field='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[qr:year:ok]' member='3' />
          <groupfilter function='member' level='[qr:year:ok]' member='4' />
        </groupfilter>
        <target field='[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]' />
      </filter>
      <filter class='categorical' column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[yr:year:ok]' member='2005' />
          <groupfilter function='member' level='[yr:year:ok]' member='2009' />
          <groupfilter function='member' level='[yr:year:ok]' member='2011' />
        </groupfilter>
        <target field='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]' />
      </filter>
    </shared-view>
    <shared-view name='federated.1huwcc40wqsqi51bhodb90c4rd8m'>
      <datasources>
        <datasource caption='Sheet1 (cpi_monthly)' name='federated.1huwcc40wqsqi51bhodb90c4rd8m' />
      </datasources>
      <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
        <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
        <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1huwcc40wqsqi51bhodb90c4rd8m'>
        <column caption='Country' datatype='string' name='[CAGR_CPI (copy)_91620115805462533]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='IF CONTAINS([Pivot Field Names],&apos;Austria&apos;) THEN REPLACE([Pivot Field Names],&apos;Austria&apos;,&apos;Australia&apos;)&#10;ELSE [Pivot Field Names]&#10;END' />
        </column>
        <column-instance column='[CAGR_CPI (copy)_91620115805462533]' derivation='None' name='[none:CAGR_CPI (copy)_91620115805462533:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
        <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;China&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Czech Republic&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Estonia&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Finland&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;France&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Hungary&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Indonesia&quot;' />
          <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Israel&quot;' />
        </groupfilter>
        <target field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[qr:year:ok]' member='3' />
          <groupfilter function='member' level='[qr:year:ok]' member='4' />
        </groupfilter>
        <target field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[qr:year:ok]' />
      </filter>
      <filter class='categorical' column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[yr:year:ok]' member='2005' />
          <groupfilter function='member' level='[yr:year:ok]' member='2009' />
          <groupfilter function='member' level='[yr:year:ok]' member='2011' />
        </groupfilter>
        <target field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[yr:year:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_2B349C0428AC4916A812C016CDA86A4A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='YoYcpi' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_CDCA04CEC0DC4AEBBBCF956116FC0FCD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='CPI' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_72D68C9C237D44B181B753EA26277AA3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Exchange_rate' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='CAGR_Exchange'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e51600' fontsize='10'>CAGR_Exchange</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (exchange_monthly)' name='federated.098uei71m1aili129s8t8014b1h5' />
            <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
          </datasources>
          <datasource-dependencies datasource='federated.098uei71m1aili129s8t8014b1h5'>
            <column caption='Country' datatype='string' name='[Calculation_88946105234595841]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Pivot Field Names],&apos;Ca0da&apos;) THEN REPLACE([Pivot Field Names],&apos;Ca0da&apos;,&apos;Canada&apos;)&#10;ELSEIF CONTAINS([Pivot Field Names],&apos;Chi0&apos;) THEN REPLACE([Pivot Field Names],&apos;Chi0&apos;,&apos;China&apos;)&#10;ELSEIF CONTAINS([Pivot Field Names],&apos;Taiwan, Chi0&apos;) THEN REPLACE([Pivot Field Names],&apos;Taiwan, Chi0&apos;,&apos;Taiwan&apos;)&#10;ELSE [Pivot Field Names] END' />
            </column>
            <column caption='sss' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Exchange_Monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_88946105234595841]' derivation='None' name='[none:Calculation_88946105234595841:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[pcdf:avg:Pivot Field Values:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative,Compounded' ordering-field='[federated.098uei71m1aili129s8t8014b1h5].[year]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
            <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.098uei71m1aili129s8t8014b1h5].[Action (Country,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_CDCA04CEC0DC4AEBBBCF956116FC0FCD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Pivot Field Names]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.098uei71m1aili129s8t8014b1h5].[Action (Country,YEAR(Year))]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.098uei71m1aili129s8t8014b1h5].[pcdf:avg:Pivot Field Values:qk:1]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.098uei71m1aili129s8t8014b1h5].[yr:year:ok]' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='rows' value='#242c97' />
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='color' scope='cols' value='#242c97' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c7c2b5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.098uei71m1aili129s8t8014b1h5].[pcdf:avg:Pivot Field Values:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.098uei71m1aili129s8t8014b1h5].[yr:year:ok]</rows>
        <cols>[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]</cols>
      </table>
      <simple-id uuid='{7083F233-6B26-4485-A5F1-E547D0F281E3}' />
    </worksheet>
    <worksheet name='CAGR_Exports'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e51600' fontsize='10'>CAGR_Exports</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
          </datasources>
          <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
            <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Exports_monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[pcdf:avg:Pivot Field Values:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0iynzyu0k9870v15i0jmc03qe5co].[year]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#242c97' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='color' scope='rows' value='#242c97' />
            <format attr='font-weight' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c7c2b5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]' value='Year'>
              <formatted-text>
                <run>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[pcdf:avg:Pivot Field Values:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</rows>
        <cols>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</cols>
      </table>
      <simple-id uuid='{307FC198-BC5C-40B5-A857-4A462D146D06}' />
    </worksheet>
    <worksheet name='CPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='32'>fdafd</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (cpi_monthly)' name='federated.1huwcc40wqsqi51bhodb90c4rd8m' />
            <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
          </datasources>
          <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
            <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1huwcc40wqsqi51bhodb90c4rd8m'>
            <column caption='Country' datatype='string' name='[CAGR_CPI (copy)_91620115805462533]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Pivot Field Names],&apos;Austria&apos;) THEN REPLACE([Pivot Field Names],&apos;Austria&apos;,&apos;Australia&apos;)&#10;ELSE [Pivot Field Names]&#10;END' />
            </column>
            <column caption='sss' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='CPI_Monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CAGR_CPI (copy)_91620115805462533]' derivation='None' name='[none:CAGR_CPI (copy)_91620115805462533:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[Action (Country,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_23D9B36BD0E04EA99D86469E04E9D2FC]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Pivot Field Names]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]'>
            <groupfilter function='level-members' level='[none:CAGR_CPI (copy)_91620115805462533:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[qr:year:ok]'>
            <groupfilter from='1' function='range' level='[qr:year:ok]' to='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[Action (Country,YEAR(Year))]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</column>
            <column>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]</column>
            <column>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[qr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[avg:Pivot Field Values:qk]' field-type='quantitative' fold='true' major-origin='0.0' major-show='false' major-spacing='100.0' scope='rows' synchronized='true' type='space' />
            <format attr='auto-subtitle' class='1' field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[avg:Pivot Field Values:qk]' scope='rows' value='true' />
            <format attr='title' class='1' field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[avg:Pivot Field Values:qk]' scope='rows' value='' />
            <format attr='width' field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[avg:Pivot Field Values:qk]' value='48' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='total' scope='rows' value='#555555' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
            <format attr='border-style' data-class='total' value='solid' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#555555' />
            <format attr='color' scope='rows' value='#555555' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='solid' />
            <format attr='border-style' data-class='total' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='cols' value='#e516004b' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#f2f2f27e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[avg:Pivot Field Values:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[avg:Pivot Field Values:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.33983424305915833' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1huwcc40wqsqi51bhodb90c4rd8m].[avg:Pivot Field Values:qk] + [federated.1huwcc40wqsqi51bhodb90c4rd8m].[avg:Pivot Field Values:qk])</rows>
        <cols>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[tyr:year:ok]</cols>
      </table>
      <simple-id uuid='{11D82BF9-C4A9-4E62-ABDF-8CEAA98C149E}' />
    </worksheet>
    <worksheet name='Exchange_rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='32'>ewdaf</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (exchange_monthly)' name='federated.098uei71m1aili129s8t8014b1h5' />
            <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
          </datasources>
          <datasource-dependencies datasource='federated.098uei71m1aili129s8t8014b1h5'>
            <column caption='Country' datatype='string' name='[Calculation_88946105234595841]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Pivot Field Names],&apos;Ca0da&apos;) THEN REPLACE([Pivot Field Names],&apos;Ca0da&apos;,&apos;Canada&apos;)&#10;ELSEIF CONTAINS([Pivot Field Names],&apos;Chi0&apos;) THEN REPLACE([Pivot Field Names],&apos;Chi0&apos;,&apos;China&apos;)&#10;ELSEIF CONTAINS([Pivot Field Names],&apos;Taiwan, Chi0&apos;) THEN REPLACE([Pivot Field Names],&apos;Taiwan, Chi0&apos;,&apos;Taiwan&apos;)&#10;ELSE [Pivot Field Names] END' />
            </column>
            <column caption='sss' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Exchange_Monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_88946105234595841]' derivation='None' name='[none:Calculation_88946105234595841:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
            <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.098uei71m1aili129s8t8014b1h5].[Action (Country,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_23D9B36BD0E04EA99D86469E04E9D2FC]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Pivot Field Names]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_88946105234595841:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.098uei71m1aili129s8t8014b1h5].[qr:year:ok]'>
            <groupfilter from='1' function='range' level='[qr:year:ok]' to='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.098uei71m1aili129s8t8014b1h5].[Action (Country,YEAR(Year))]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</column>
            <column>[federated.098uei71m1aili129s8t8014b1h5].[qr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</column>
            <column>[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.098uei71m1aili129s8t8014b1h5].[avg:Pivot Field Values:qk]' field-type='quantitative' fold='true' major-origin='0.0' major-show='false' major-spacing='100.0' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.098uei71m1aili129s8t8014b1h5].[avg:Pivot Field Values:qk]' scope='rows' value='' />
            <format attr='width' field='[federated.098uei71m1aili129s8t8014b1h5].[avg:Pivot Field Values:qk]' value='40' />
            <format attr='height' field='[federated.098uei71m1aili129s8t8014b1h5].[yr:year:ok]' value='39' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='rows' value='#666666' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#f2f2f284' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.098uei71m1aili129s8t8014b1h5].[avg:Pivot Field Values:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.098uei71m1aili129s8t8014b1h5].[avg:Pivot Field Values:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.44977900385856628' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.098uei71m1aili129s8t8014b1h5].[avg:Pivot Field Values:qk] + [federated.098uei71m1aili129s8t8014b1h5].[avg:Pivot Field Values:qk])</rows>
        <cols>[federated.098uei71m1aili129s8t8014b1h5].[yr:year:ok]</cols>
      </table>
      <simple-id uuid='{4C865873-6B87-4B1E-AAFE-4030CF7E9DCF}' />
    </worksheet>
    <worksheet name='Exports'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='32'>asdf</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
          </datasources>
          <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
            <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Exports_monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Month' name='[mn:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[Action (Country,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_CDCA04CEC0DC4AEBBBCF956116FC0FCD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Pivot Field Names]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[mn:year:ok]'>
            <groupfilter from='1' function='range' level='[mn:year:ok]' to='12' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[mn:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[Action (Country,YEAR(Year))]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0iynzyu0k9870v15i0jmc03qe5co].[avg:Pivot Field Values:qk]' field-type='quantitative' fold='true' major-origin='0.0' major-show='false' major-spacing='10000.0' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.0iynzyu0k9870v15i0jmc03qe5co].[avg:Pivot Field Values:qk]' scope='rows' value='' />
            <format attr='width' field='[federated.0iynzyu0k9870v15i0jmc03qe5co].[avg:Pivot Field Values:qk]' value='54' />
            <format attr='height' field='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]' value='36' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]' value='76' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='rows' value='#666666' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#f2f2f274' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iynzyu0k9870v15i0jmc03qe5co].[avg:Pivot Field Values:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25187844038009644' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iynzyu0k9870v15i0jmc03qe5co].[avg:Pivot Field Values:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.2738673985004425' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0iynzyu0k9870v15i0jmc03qe5co].[avg:Pivot Field Values:qk] + [federated.0iynzyu0k9870v15i0jmc03qe5co].[avg:Pivot Field Values:qk])</rows>
        <cols>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</cols>
      </table>
      <simple-id uuid='{AEBAE547-4B53-4BEF-8720-DFC1C7362178}' />
    </worksheet>
    <worksheet name='Inflation'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e51600' fontsize='10'>      Inflation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (cpi_monthly)' name='federated.1huwcc40wqsqi51bhodb90c4rd8m' />
            <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
          </datasources>
          <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
            <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1huwcc40wqsqi51bhodb90c4rd8m'>
            <column caption='Country' datatype='string' name='[CAGR_CPI (copy)_91620115805462533]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Pivot Field Names],&apos;Austria&apos;) THEN REPLACE([Pivot Field Names],&apos;Austria&apos;,&apos;Australia&apos;)&#10;ELSE [Pivot Field Names]&#10;END' />
            </column>
            <column caption='sss' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='CPI_Monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[CAGR_CPI (copy)_91620115805462533]' derivation='None' name='[none:CAGR_CPI (copy)_91620115805462533:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[pcdf:avg:Pivot Field Values:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative,Compounded' ordering-field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[year]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[Action (Country,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_CDCA04CEC0DC4AEBBBCF956116FC0FCD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Pivot Field Names]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[Action (Country,YEAR(Year))]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[pcdf:avg:Pivot Field Values:qk:1]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[yr:year:ok]' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='cols' value='zTableau Book' />
            <format attr='font-style' scope='cols' value='normal' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='color' scope='cols' value='#242c97' />
            <format attr='color' scope='rows' value='#242c97' />
            <format attr='font-weight' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c7c2b5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[pcdf:avg:Pivot Field Values:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[yr:year:ok]</rows>
        <cols>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]</cols>
      </table>
      <simple-id uuid='{FAC56049-E3D8-459D-849B-1C5F17977BD4}' />
    </worksheet>
    <worksheet name='Inflation (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e51600' fontsize='10'>      Inflation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (cpi_monthly)' name='federated.1huwcc40wqsqi51bhodb90c4rd8m' />
            <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
          </datasources>
          <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
            <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1huwcc40wqsqi51bhodb90c4rd8m'>
            <column caption='Country' datatype='string' name='[CAGR_CPI (copy)_91620115805462533]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Pivot Field Names],&apos;Austria&apos;) THEN REPLACE([Pivot Field Names],&apos;Austria&apos;,&apos;Australia&apos;)&#10;ELSE [Pivot Field Names]&#10;END' />
            </column>
            <column caption='sss' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='CPI_Monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[CAGR_CPI (copy)_91620115805462533]' derivation='None' name='[none:CAGR_CPI (copy)_91620115805462533:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[pcdf:avg:Pivot Field Values:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative,Compounded' ordering-field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[year]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[Action (Country,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_CDCA04CEC0DC4AEBBBCF956116FC0FCD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Pivot Field Names]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[Action (Country,YEAR(Year))]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[pcdf:avg:Pivot Field Values:qk:1]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[yr:year:ok]' value='40' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c7c2b5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[pcdf:avg:Pivot Field Values:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[yr:year:ok]</rows>
        <cols>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]</cols>
      </table>
      <simple-id uuid='{30B22767-AD1B-43F0-815C-17A4B056F931}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (exchange_monthly)' name='federated.098uei71m1aili129s8t8014b1h5' />
            <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
          </datasources>
          <datasource-dependencies datasource='federated.098uei71m1aili129s8t8014b1h5'>
            <column caption='Country' datatype='string' name='[Calculation_88946105234595841]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Pivot Field Names],&apos;Ca0da&apos;) THEN REPLACE([Pivot Field Names],&apos;Ca0da&apos;,&apos;Canada&apos;)&#10;ELSEIF CONTAINS([Pivot Field Names],&apos;Chi0&apos;) THEN REPLACE([Pivot Field Names],&apos;Chi0&apos;,&apos;China&apos;)&#10;ELSEIF CONTAINS([Pivot Field Names],&apos;Taiwan, Chi0&apos;) THEN REPLACE([Pivot Field Names],&apos;Taiwan, Chi0&apos;,&apos;Taiwan&apos;)&#10;ELSE [Pivot Field Names] END' />
            </column>
            <column caption='sss' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Exchange_Monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_88946105234595841]' derivation='None' name='[none:Calculation_88946105234595841:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
            <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.098uei71m1aili129s8t8014b1h5].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.098uei71m1aili129s8t8014b1h5].[yr:year:ok]</cols>
      </table>
      <simple-id uuid='{8C1A2794-CC82-4EB7-8862-BA32A409CE1C}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (cpi_monthly)' name='federated.1huwcc40wqsqi51bhodb90c4rd8m' />
            <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
          </datasources>
          <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
            <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1huwcc40wqsqi51bhodb90c4rd8m'>
            <column caption='Country' datatype='string' name='[CAGR_CPI (copy)_91620115805462533]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Pivot Field Names],&apos;Austria&apos;) THEN REPLACE([Pivot Field Names],&apos;Austria&apos;,&apos;Australia&apos;)&#10;ELSE [Pivot Field Names]&#10;END' />
            </column>
            <column caption='sss' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[CAGR_CPI (copy)_91620115805462533]' derivation='None' name='[none:CAGR_CPI (copy)_91620115805462533:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CAGR_CPI (copy)_91620115805462533]' derivation='User' name='[usr:CAGR_CPI (copy)_91620115805462533:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[Country Set]' />
          <slices>
            <column>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[Country Set]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[usr:CAGR_CPI (copy)_91620115805462533:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:Pivot Field Names:nk]</rows>
        <cols>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[yr:year:ok]</cols>
      </table>
      <simple-id uuid='{0F8CD020-FB9F-499A-B5C8-22679F3EC304}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (cpi_monthly)' name='federated.1huwcc40wqsqi51bhodb90c4rd8m' />
            <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
          </datasources>
          <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
            <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1huwcc40wqsqi51bhodb90c4rd8m'>
            <column caption='Country' datatype='string' name='[CAGR_CPI (copy)_91620115805462533]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Pivot Field Names],&apos;Austria&apos;) THEN REPLACE([Pivot Field Names],&apos;Austria&apos;,&apos;Australia&apos;)&#10;ELSE [Pivot Field Names]&#10;END' />
            </column>
            <column caption='sss' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='CPI_Monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CAGR_CPI (copy)_91620115805462533]' derivation='None' name='[none:CAGR_CPI (copy)_91620115805462533:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[avg:Pivot Field Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[yr:year:ok]</rows>
        <cols>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:Pivot Field Names:nk]</cols>
      </table>
      <simple-id uuid='{19205367-E83C-4C26-8DBB-89A80DF6E260}' />
    </worksheet>
    <worksheet name='Sheet 14'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
            <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]' />
              <geometry column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0iynzyu0k9870v15i0jmc03qe5co].[Latitude (generated)]</rows>
        <cols>[federated.0iynzyu0k9870v15i0jmc03qe5co].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4CC873C4-1E4B-4EAC-95B3-8F2443B0041B}' />
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (exchange_monthly)' name='federated.098uei71m1aili129s8t8014b1h5' />
            <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
          </datasources>
          <datasource-dependencies datasource='federated.098uei71m1aili129s8t8014b1h5'>
            <column caption='Country' datatype='string' name='[Calculation_88946105234595841]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Pivot Field Names],&apos;Ca0da&apos;) THEN REPLACE([Pivot Field Names],&apos;Ca0da&apos;,&apos;Canada&apos;)&#10;ELSEIF CONTAINS([Pivot Field Names],&apos;Chi0&apos;) THEN REPLACE([Pivot Field Names],&apos;Chi0&apos;,&apos;China&apos;)&#10;ELSEIF CONTAINS([Pivot Field Names],&apos;Taiwan, Chi0&apos;) THEN REPLACE([Pivot Field Names],&apos;Taiwan, Chi0&apos;,&apos;Taiwan&apos;)&#10;ELSE [Pivot Field Names] END' />
            </column>
            <column caption='sss' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Exchange_Monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_88946105234595841]' derivation='None' name='[none:Calculation_88946105234595841:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
            <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.098uei71m1aili129s8t8014b1h5].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.098uei71m1aili129s8t8014b1h5].[yr:year:ok]</cols>
      </table>
      <simple-id uuid='{4C5728EA-2276-45B4-8E26-FEEAD23CA422}' />
    </worksheet>
    <worksheet name='YoY_Exchange'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e51600' fontsize='12'>YoY_Exchange</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (exchange_monthly)' name='federated.098uei71m1aili129s8t8014b1h5' />
            <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
          </datasources>
          <datasource-dependencies datasource='federated.098uei71m1aili129s8t8014b1h5'>
            <column caption='Country' datatype='string' name='[Calculation_88946105234595841]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Pivot Field Names],&apos;Ca0da&apos;) THEN REPLACE([Pivot Field Names],&apos;Ca0da&apos;,&apos;Canada&apos;)&#10;ELSEIF CONTAINS([Pivot Field Names],&apos;Chi0&apos;) THEN REPLACE([Pivot Field Names],&apos;Chi0&apos;,&apos;China&apos;)&#10;ELSEIF CONTAINS([Pivot Field Names],&apos;Taiwan, Chi0&apos;) THEN REPLACE([Pivot Field Names],&apos;Taiwan, Chi0&apos;,&apos;Taiwan&apos;)&#10;ELSE [Pivot Field Names] END' />
            </column>
            <column caption='sss' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Exchange_Monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_88946105234595841]' derivation='None' name='[none:Calculation_88946105234595841:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[pcdf:avg:Pivot Field Values:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.098uei71m1aili129s8t8014b1h5].[yr:year:ok]' ordering-field='[federated.098uei71m1aili129s8t8014b1h5].[year]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
            <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.098uei71m1aili129s8t8014b1h5].[Action (Country,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_23D9B36BD0E04EA99D86469E04E9D2FC]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Pivot Field Names]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.098uei71m1aili129s8t8014b1h5].[qr:year:ok]'>
            <groupfilter from='1' function='range' level='[qr:year:ok]' to='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.098uei71m1aili129s8t8014b1h5].[Action (Country,YEAR(Year))]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</column>
            <column>[federated.098uei71m1aili129s8t8014b1h5].[qr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.098uei71m1aili129s8t8014b1h5].[pcdf:avg:Pivot Field Values:qk]' field-type='quantitative' fold='true' major-origin='0.0' major-show='false' major-spacing='0.10000000000000001' minor-origin='0.0' minor-show='false' minor-spacing='0.01' scope='rows' type='space' />
            <format attr='title' class='1' field='[federated.098uei71m1aili129s8t8014b1h5].[pcdf:avg:Pivot Field Values:qk]' scope='rows' value='' />
            <format attr='width' field='[federated.098uei71m1aili129s8t8014b1h5].[pcdf:avg:Pivot Field Values:qk]' value='46' />
            <format attr='height' field='[federated.098uei71m1aili129s8t8014b1h5].[yr:year:ok]' value='34' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
            <format attr='band-level' scope='rows' value='1' />
            <format attr='band-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#f2f2f27e' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.098uei71m1aili129s8t8014b1h5].[pcdf:avg:Pivot Field Values:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.31784531474113464' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.098uei71m1aili129s8t8014b1h5].[pcdf:avg:Pivot Field Values:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.42779004573822021' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.098uei71m1aili129s8t8014b1h5].[pcdf:avg:Pivot Field Values:qk] + [federated.098uei71m1aili129s8t8014b1h5].[pcdf:avg:Pivot Field Values:qk])</rows>
        <cols>[federated.098uei71m1aili129s8t8014b1h5].[yr:year:ok]</cols>
      </table>
      <simple-id uuid='{3DEDA2E4-8BFA-4C93-AAAC-B60985920D83}' />
    </worksheet>
    <worksheet name='YoY_Exports (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run bold='true' fontalignment='1' fontcolor='#e51600' fontsize='12'>YoY_Exports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
          </datasources>
          <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
            <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Exports_monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Month' name='[mn:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[pcdf:avg:Pivot Field Values:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]' ordering-field='[federated.0iynzyu0k9870v15i0jmc03qe5co].[year]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[Action (Country,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_23D9B36BD0E04EA99D86469E04E9D2FC]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Pivot Field Names]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[mn:year:ok]'>
            <groupfilter function='level-members' level='[mn:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[Action (Country,YEAR(Year))]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[mn:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0iynzyu0k9870v15i0jmc03qe5co].[pcdf:avg:Pivot Field Values:qk]' field-type='quantitative' fold='true' major-origin='0.0' major-show='false' major-spacing='0.10000000000000001' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.0iynzyu0k9870v15i0jmc03qe5co].[pcdf:avg:Pivot Field Values:qk]' scope='rows' value='' />
            <format attr='width' field='[federated.0iynzyu0k9870v15i0jmc03qe5co].[pcdf:avg:Pivot Field Values:qk]' value='36' />
            <format attr='height' field='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]' value='34' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#f2f2f274' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]' />
              <lod column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[avg:Pivot Field Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iynzyu0k9870v15i0jmc03qe5co].[pcdf:avg:Pivot Field Values:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]' />
              <lod column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[avg:Pivot Field Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.42779004573822021' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iynzyu0k9870v15i0jmc03qe5co].[pcdf:avg:Pivot Field Values:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]' />
              <lod column='[federated.0iynzyu0k9870v15i0jmc03qe5co].[avg:Pivot Field Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.33983424305915833' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0iynzyu0k9870v15i0jmc03qe5co].[pcdf:avg:Pivot Field Values:qk] + [federated.0iynzyu0k9870v15i0jmc03qe5co].[pcdf:avg:Pivot Field Values:qk])</rows>
        <cols>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</cols>
      </table>
      <simple-id uuid='{2952BC02-102D-4595-BCB2-ABB7DC09AAD8}' />
    </worksheet>
    <worksheet name='YoYcpi'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e51600' fontsize='12'>YoY_CPI</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (cpi_monthly)' name='federated.1huwcc40wqsqi51bhodb90c4rd8m' />
            <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
          </datasources>
          <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
            <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1huwcc40wqsqi51bhodb90c4rd8m'>
            <column caption='Country' datatype='string' name='[CAGR_CPI (copy)_91620115805462533]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Pivot Field Names],&apos;Austria&apos;) THEN REPLACE([Pivot Field Names],&apos;Austria&apos;,&apos;Australia&apos;)&#10;ELSE [Pivot Field Names]&#10;END' />
            </column>
            <column caption='sss' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='CPI_Monthly' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[CAGR_CPI (copy)_91620115805462533]' derivation='None' name='[none:CAGR_CPI (copy)_91620115805462533:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[pcdf:avg:Pivot Field Values:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[yr:year:ok]' ordering-field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[year]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[year]' derivation='Quarter' name='[qr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[Action (Country,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_23D9B36BD0E04EA99D86469E04E9D2FC]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Pivot Field Names]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[qr:year:ok]'>
            <groupfilter from='1' function='range' level='[qr:year:ok]' to='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[Action (Country,YEAR(Year))]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</column>
            <column>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[qr:year:ok]</column>
            <column>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[pcdf:avg:Pivot Field Values:qk]' field-type='quantitative' fold='true' major-origin='0.0' major-show='false' major-spacing='0.10000000000000001' scope='rows' type='space' />
            <format attr='title' class='1' field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[pcdf:avg:Pivot Field Values:qk]' scope='rows' value='' />
            <format attr='width' field='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[pcdf:avg:Pivot Field Values:qk]' value='50' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[pcdf:avg:Pivot Field Values:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.18591159582138062' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[pcdf:avg:Pivot Field Values:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.33983424305915833' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1huwcc40wqsqi51bhodb90c4rd8m].[pcdf:avg:Pivot Field Values:qk] + [federated.1huwcc40wqsqi51bhodb90c4rd8m].[pcdf:avg:Pivot Field Values:qk])</rows>
        <cols>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[yr:year:ok]</cols>
      </table>
      <simple-id uuid='{2A749D93-E02B-4817-A24D-9D1CC83E0849}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#333333' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Sheet1 (exports_monthly)' name='federated.0iynzyu0k9870v15i0jmc03qe5co' />
      </datasources>
      <datasource-dependencies datasource='federated.0iynzyu0k9870v15i0jmc03qe5co'>
        <column caption='Country' datatype='string' name='[Pivot Field Names]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
        <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
        <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98020' id='43' param='horz' type-v2='layout-flow' w='98672' x='664' y='990'>
            <zone h='98020' id='32' param='vert' type-v2='layout-flow' w='85051' x='664' y='990'>
              <zone h='98020' id='7' param='horz' type-v2='layout-flow' w='85051' x='664' y='990'>
                <zone h='98020' id='5' type-v2='layout-basic' w='85051' x='664' y='990'>
                  <zone h='36611' id='3' name='CPI' show-title='false' w='29161' x='664' y='17952'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='36617' id='9' name='Exchange_rate' show-title='false' w='29408' x='29825' y='17946'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='44447' id='23' name='YoYcpi' w='29162' x='664' y='54563'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='16962' id='53' name='Inflation' w='29161' x='664' y='990'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='44447' id='59' name='YoY_Exchange' w='27944' x='29826' y='54563'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='44447' id='116' name='YoY_Exports (2)' w='27945' x='57770' y='54563'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='36617' id='129' name='Exports' show-title='false' w='26482' x='59233' y='17946'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='16956' id='138' name='CAGR_Exchange' w='27945' x='29825' y='990'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='16956' id='145' name='CAGR_Exports' w='27945' x='57770' y='990'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='164' h='98020' id='42' is-fixed='true' param='vert' type-v2='layout-flow' w='13621' x='85715' y='990'>
              <zone fixed-size='62' h='8663' id='45' is-fixed='true' mode='checkdropdown' name='CAGR_Exchange' param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]' type-v2='filter' w='13621' x='85715' y='990'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='88' h='11881' id='44' is-fixed='true' mode='checkdropdown' name='CAGR_Exchange' param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]' type-v2='filter' w='13621' x='85715' y='9653'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23020' id='118' name='YoY_Exports (2)' pane-specification-id='1' param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]' type-v2='color' w='13621' x='85715' y='21534'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2350' minheight='2350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='147' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98020' id='146' param='vert' type-v2='layout-flow' w='98672' x='664' y='990'>
                <zone fixed-size='128' h='16962' id='53' is-fixed='true' name='Inflation' w='29161' x='664' y='990'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='62' h='8663' id='45' mode='checkdropdown' name='CAGR_Exchange' param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]' type-v2='filter' w='13621' x='85715' y='990'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='88' h='11881' id='44' mode='checkdropdown' name='CAGR_Exchange' param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]' type-v2='filter' w='13621' x='85715' y='9653'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='128' h='16956' id='138' is-fixed='true' name='CAGR_Exchange' w='27945' x='29825' y='990'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='128' h='16956' id='145' is-fixed='true' name='CAGR_Exports' w='27945' x='57770' y='990'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36617' id='9' is-fixed='true' name='Exchange_rate' show-title='false' w='29408' x='29825' y='17946'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36617' id='129' is-fixed='true' name='Exports' show-title='false' w='26482' x='59233' y='17946'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36611' id='3' is-fixed='true' name='CPI' show-title='false' w='29161' x='664' y='17952'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44447' id='23' is-fixed='true' name='YoYcpi' w='29162' x='664' y='54563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44447' id='59' is-fixed='true' name='YoY_Exchange' w='27944' x='29826' y='54563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44447' id='116' is-fixed='true' name='YoY_Exports (2)' w='27945' x='57770' y='54563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23020' id='118' name='YoY_Exports (2)' pane-specification-id='1' param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]' type-v2='color' w='13621' x='85715' y='21534'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C0C0850E-3D63-40BA-9046-1B5BEBFB0573}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='CPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]' show-morefewerbutton='false' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='1' param='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[mn:year:ok]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:Pivot Field Names:nk]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[qr:year:ok]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{906A5507-00D3-4EC5-B585-96BF7C28F72F}' />
    </window>
    <window class='worksheet' name='Exchange_rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.098uei71m1aili129s8t8014b1h5].[Action (Country,YEAR(Year))]' type='filter' />
            <card pane-specification-id='2' param='[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[mn:year:ok]</field>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]</field>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[none:Pivot Field Names:nk]</field>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[qr:year:ok]</field>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{EFA50E0C-3790-4D0F-A729-5EF9A04951FD}' />
    </window>
    <window class='worksheet' name='Exports'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0iynzyu0k9870v15i0jmc03qe5co].[avg:Pivot Field Values:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0iynzyu0k9870v15i0jmc03qe5co].[mn:year:ok]</field>
            <field>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</field>
            <field>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</field>
            <field>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC173207-D628-4E74-B8A1-FB54F2F162A1}' />
    </window>
    <window class='worksheet' name='YoYcpi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:Pivot Field Names:nk]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[qr:year:ok]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8ECC216B-10B2-4025-BD8B-2A67512FF0E9}' />
    </window>
    <window class='worksheet' name='YoY_Exchange'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[mn:year:ok]</field>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]</field>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[none:Pivot Field Names:nk]</field>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[qr:year:ok]</field>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DAC49BE0-4272-45EE-884F-156C39520393}' />
    </window>
    <window class='worksheet' name='YoY_Exports (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]' type='filter' values='relevant' />
            <card pane-specification-id='1' param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0iynzyu0k9870v15i0jmc03qe5co].[mn:year:ok]</field>
            <field>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</field>
            <field>[federated.0iynzyu0k9870v15i0jmc03qe5co].[qr:year:ok]</field>
            <field>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A52F976C-5945-4C79-9EA0-BFE08AC4624C}' />
    </window>
    <window class='worksheet' name='Inflation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:Pivot Field Names:nk]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[usr:Calculation_165859141287727107:nk]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A596DEC7-6785-4C1B-BE97-08E04BDF3D31}' />
    </window>
    <window class='worksheet' name='Inflation (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:CAGR_CPI (copy)_91620115805462533:nk]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:Pivot Field Names:nk]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[usr:Calculation_165859141287727107:nk]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{609947B1-C231-4CDF-B9C4-7027D94BED5D}' />
    </window>
    <window class='worksheet' name='CAGR_Exchange'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.098uei71m1aili129s8t8014b1h5].[Action (Country,YEAR(Year))]' type='filter' />
            <card param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]</field>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[none:Pivot Field Names:nk]</field>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7F7F6173-038F-4627-8B87-DAC59CBCE03E}' />
    </window>
    <window class='worksheet' name='CAGR_Exports'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]' type='filter' />
            <card param='[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iynzyu0k9870v15i0jmc03qe5co].[none:Pivot Field Names:nk]</field>
            <field>[federated.0iynzyu0k9870v15i0jmc03qe5co].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EAA83659-1A86-4B70-9887-AEFBBE57141E}' />
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3DE12B7C-0DE3-41A6-8EED-910E1822D11A}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]</field>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8384AAEF-ED6B-4FCB-9501-1E2786327253}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1huwcc40wqsqi51bhodb90c4rd8m].[Country Set]' type='setMembership' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[CurrrentYear (copy)_91620115807444999]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[Country Set]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:Pivot Field Names:nk]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{022B8159-EE14-4226-825B-32880DC03E01}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[none:Pivot Field Names:nk]</field>
            <field>[federated.1huwcc40wqsqi51bhodb90c4rd8m].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A63FEE46-13A6-472C-A809-2682844366EB}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='CAGR_Exchange' />
        <viewpoint name='CAGR_Exports' />
        <viewpoint name='CPI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Exchange_rate'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.098uei71m1aili129s8t8014b1h5].[avg:Pivot Field Values:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Exports'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Inflation' />
        <viewpoint name='YoY_Exchange'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='YoY_Exports (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='YoYcpi'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='45' />
      <simple-id uuid='{1DCE12B3-24B4-4CFE-AD5E-E6DC65AA5F53}' />
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[none:Calculation_88946105234595841:nk]</field>
            <field>[federated.098uei71m1aili129s8t8014b1h5].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{EB134ED5-7EC1-4412-BA3E-A3C7C6D8EEE5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='208' name='CAGR_Exchange' width='384'>
      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
      aes7/AVphMsYy5JeuwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='208' name='CAGR_Exports' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='CPI' width='384'>
      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
      vWEDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Exchange_rate' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Exports' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dZ3RcZ37n+e+9t3IVciQBkCCIyEyAEQwSkyR3drfd4153j3d27Tnr49md
      s3Nmx7tnPD49691zPPbY2/ZYdtvuddtuu7ejultZalGUKIqiAiUGMeeEnIFC5br7osASKbYI
      EgRQBO7v80JCVd2q+y/w4vnd53luMGzbthEREccxc12AiIjkhuvmD0899RRHjhzJZS0iIjKL
      sgFw5MgRnn/++VzWIiIis0hDQCIiDqUAEBFxKAWAiIhDKQBERBxKASAi4lAKABERh3J9/In8
      /HyamppyUQsAqVSKeDyes/WLiDjFHQGQt6Catq/9di5qAeDi0cO8/P8+mbP1i4g4xR0BkLRh
      2M7dyNC4beRs3SIiTqI5ABERh1IAiIg4lAJARMShFAAiIg6lABARcSgFgIiIQykAREQcSgEg
      IuJQCgAREYdSAIiIOJQCQETEoRQAIiIOpQAQEXEoBYCIiEMpAEREHEoBICLiUAoAERGHUgCI
      iDiUAkBExKEUACIiDqUAEBFxKAWAiIhDKQBERBxKASAi4kCGYeLKdREiIjJ78orLqW/bSkPb
      NgWAiMh8Z7pcLF7WRsvm3eSXVnLxyEFe/rs/VgCIiMxHhmFQUF5Fy6Zd1K3ZRM/V8xx//Tlu
      nPuQdCoJoAAQEZlPfME8aldtpHnjDlweL2ffeZ2n/uR/JzI2fMeyDxwA6VSKzlPHWdCyEtOy
      AEjG49z48H1qVq/HMA2uHT1MfDzMkg1bSMXjxCPjhErKGLxxlWBRCZ5A8EHLEBFxtMolTbS0
      72Fh/QqunznKwZ/8Pb3XLmKnU5/4ngcKADud5tjzTzHa201F47JsAFw4+Br9Vy9StaKVzhPH
      SadSFC6s4ez+V1jQvJKhzuuYLheX3j7A2l/+yoOUICLiWG6vn0XL1rKs/TFMy+LUW3vZ/4O/
      IZWI39P7H6wHYBis/syvcPLnz2afGuq8jmEa5FcsBGCkq4PG7btxeX1cP/Y+ANGRYU698jzL
      H/sshmEQj4wz0t2Z+chYhBUrVjxQWSIi85krr5iCmmaWrFyPlRzn2tGDdJw/gQdoaWq89895
      kCIMw7jtcSqZ5NyBV1n1S7/MmddfJhmPYafTGBM9g8ziNkMdVzEtV3boJxmLMdLdAcDQjWtc
      Onv2QcoSEZlXDMPAG8hj6dp2lrXvJhaNcurQq7z7wvdJxaPYtj2lz53WSeBUPEZhZRVX3n+b
      wRtX6T57Em8oj3BfL/6CQjBNwKCyeSWBgkLOvP4yzTueIFBYRN3GbQBcO/oeZ15/eTrLEhGZ
      kyyXm8olzTRv3kVFbSNXThzmxW//Kf03Lk/L5z9QACRiUc7uf4XwQB9n9r1I9eo2GrbtAsDt
      D1C9qpVkLMapV54jnU5Tv+VRTMuFLy+f8vpmxvp7Cff3Eiotn5YvIyIyH4SKymjauIP61q2E
      h/o59dYr7P/+N0nEotO6ngcKALfXx/I9n/mFry1Z3w5kEmz1574MfDRkFCopA8ju9YuIOJ3L
      46WmeQ3Ltz5OXnE55w6/wbN/+Z8JD/XP3Dpn7JNv8fG5AhERAQyDkoW1NG14lMUr2ui9epEj
      e3/GjXPHsdPpGV+9TgQTEZllbq+fhnXbaN60C8MwOfPOPn76jf9IZPTOk7VmkgJARGQWmJaL
      itpGWjbvZmHDcq6cOMzr3/sm/Tcu5awmBYCIyAwKFZXSsG47DW3biIwOc/Ktn3PgR98iHh3P
      dWkKABGR6Wa5PZkJ3S2Pk19awYUPDvLit/6Qkf4emOIx+zNBASAiMi0MihfU0LRxB7UrNzDQ
      cYVjrz/D9TPHZmVCdyoUACIiD8Dt9bN0bTstm3djudyceWcfP/vz32N8eDDXpU1KASAicp9M
      y6J8UT3LtjzOgvplXD99lAM/+ha91y8+VEM8k1EAiIjco1BhCfVt26hv20o8Ms7pQ3t540d/
      SyIayXVpU6IAEBG5C9OyqG5ew/Itj1FYUc3FIwf5+bf/hJG+rilfhO1hoQAQEfk4w6Coooqm
      DTuoW9POQOcVTrzxEtdOH8G2H84J3alQAIiITHB7fdSt3kxL+27cHh9n332dn/35783o9Xhy
      SQEgIo5mmBZlNXUsa99DVeNKbpz9kDef+jZ91y/d9XaK84ECQEQcKVhQzNLWrTSuf4RkPMqp
      t17h4E//nngk92fozhYFgIg4hmGYVDevZtmWxyheUMOlY++w9x+/wWD39Tl1+OZ0UQCIyPxm
      GBSWLZiY0N3MUE8HJ998mWunPiA9z4d4JqMAEJF5yeMLsHjlelo27cIXzOPsu6/zzJNfZ2yw
      L9elPTQUACIyf0zcYGX51sepaVlDx7kTvPPcd+m5cp50Kpnr6h46CgARmfMC+UUsXdtO04ZH
      SadSnDz4c9766T+QiM3NM3RniwJAROYkwzCpblpFS/seSquXcOnYO+z757+gv/OqIyd0p0IB
      ICJzh2GQV1xG88ZdLG1tZ6S3i5MHf87e7/wZqUQ819XNOQoAEXnoub1+Fq9oo3nTLgJ5hZw7
      /AbPPvl/MjbYm+vS5jQFgIg8tEqqalnW/hiLl7fRefEU77/0I7oundGE7jRRAIjIQ8WfV0Dd
      6s00b9oJwKmDr3Dome/M2UsuP8wUACKSc4ZpUdWwnJbNuymtWcqVE4d5/Xt/Rd/1y4AmdGeK
      AkBEciZYUExL+x7qW7cwNtjPyYMv89r/95ckYtFcl+YICgARmVVur5+a5jW0tO8mr7iMc++9
      wbN/+Qea0M0BBYCIzIqSqlqaN+2idsU6ui+d5cjen9J54ZQmdHNIASAiM8YbyKO+dQtNGx7F
      ME3OvL2PH/3x/0ZsfCzXpQkKABGZZoZpsmDpMpo37aKytpGrpz7gjR/+Lb3XLqIJ3YeLAkBE
      pkUgv5CWzbtpWPcI4eEBTr75Em/88G90+OZDTAEgIlPm8nhZ1LKWls27yS+r5PzhN3nur/6A
      0YGeXJcm90ABICL3rXjhYpo27KB2xTr6blzi2GvP0nH+BKlkItelyX1QAIjIPfH4Aixt3ULz
      xh243F5OHdrLT//s94iMDuW6NJkiBYCIfCLTtCivbWRZ+x4q61q4dvoD3nzq2/RcOZfr0mQa
      KABEHKq6eTWN6x7BtCwufHCQy8ffxbbTAPjzCmnetJOGtm1EwyOceusVDvz4W8Qj4zmuWqbT
      AweAbduM9fUQKinDME1SyQRDN65hmCZFVYvAMBjp6iARi1KyaAnpVJJUIoknECA6OoLL68Pl
      8UzHdxGRe9S0YQc7v/a/YLncADSuf5S3n/kn+m5cZln7booqa7jwwZu8+Ld/yEh/d46rlZny
      QAFgp9OcePlpes6fYfu//l9xeTyc3f8KweJSxgf6CQ/04cvLp/vcafz5BYz2dFFUvZihzutU
      rVjD8Rd/ytrP/9p0fRcRuQeW20PbE7+Ky/3RjpflcrHp8/+Si0fe4uSbL3H9zDFN6DrAg/UA
      DIOmR5/AMK3sU02PPo5hGHSd/pDY+Bg9F87SsHUnbn+AY8/+iKLqxdjpNKf2vkDT9j24PB5s
      O006lel6er1eqqqqHqgsEflk3kAeoYLiO1+w05w/8CzJ4X4qK8pnvzCZdQ8UAIZh4Pb57nj+
      3Bt7SSXiNO14nBMvPYPL48U0TQzDAGyuvH+IQGExeeWVAIz0dHH+wKsAJMZGSCZ1bRCR6eby
      eKlqWEHD+kew3G5s2574m8wM5Y70dzM21K9r8zjItE8Cn9v/CsGSMqpWrMkGRCw8ijeUN3ES
      uEHtunbsdIprR95l0doNFFQspO1LXwXg2tH3OPD+O9NdlohjlVQtoXH9dmpXrGOw+wYHX3iK
      RDzGnv/+3xGc6AlEx0Z444fforPjRo6rldn0QAGQiEU5u/8V+i5fwH71BWrWrKP73CmKImEG
      r1+mbGkT1avaOPHyM1huN9Wr2jBME9OyqGndyPEXfkJxTS2hUnU3RaZTIL+QpWu30rh+OwDn
      3ts/ccz+cHaZH/7hv6Nm2VpMy+LaqSOM9HXlqlzJkQcKALfXx/I9n7ntue2/9W/vWK7ti79O
      Op3OHu1TULkQgFWf+uKDrF5EbuH2+qhpWUvj+kcorKjiyoeHee27T9LfceUXLj821Mepgz+f
      5SrlYTIr5wGYLhfmbKxIxIHKFzfQtHEHi1pa6blylhMHXqLz/AmSiXiuS5OHnE4EE5mD8orL
      qW/bSkPbNhKxCKff3sehp3XjdLk/CgCROcLjC7B4RRtNG3YSKCji0rG3efnv/itDPZq4lalR
      AIg8xAzTpKK2iZbNu1hYv5yO8yc4/PKP6L50RodrygNTAIg8hArKFtK4/hHqVm9ifGSQM+/s
      440ffotkPJrr0mQeUQCIPCS8/iB1azbTtHEHHl+A84cP8Pxf/9+6uYrMGAWASA5ZLjcL6pfR
      smk35YvruXb6CAef+ja91y5mr8wpMlMUACKzzqBk4SIaNzzK4uXrGOnv4vRbe9n3z39BMhHL
      dXHiIAoAkVng8nhZUNdCYUUVlXUtWC4XHec+5On/9vuMjwzmujxxKAWAyAwxLRflixto3rST
      6sZV3Dj3IWfe2cfx/c+Dbee6PBEFgMh0KyhfSH3rVupbtzI+MsCZt1/jrZ/8PbFIONelidxG
      ASAyDbyBELUrN9C8aSe+QIhzhw/w3F/9AWODvbkuTeQTKQBEpshye1iwdBnNG3dQvriB62eO
      cejp79B9+ayGeGROUACI3KfiBYtoWLedpWvbGey+zpm39/H6975JIqbr8MjcogAQuQf+vMLM
      SVobHsW0XJx99zV+8qf/B5Gx4cnfLPKQUgCIfAKX20t18yqaN+6isKKKqyffZ/8P/pq+a5cA
      DfHI3KcAELmNQUlVLc2bdrJk1QZ6rpzn5MGX6Tj3oa6vL/OOAkAECBWVsrR1Cw1t27FTKU4d
      2su7z3+PuA7dlHlMASCO5fL4qF2xjuZNOwkVlXLx6CH2fucbDHZeR0M84gQKAHEU07IoW1RP
      88ad1LSsoeP8Sd5/+Sm6Lp3W9fXFcRQA4ggFZQtoaNtG3ZrNxMbHOHVoL2/99B+IR8dzXZpI
      zigAZN5ye33UrWmfODs3j3OH9/Pit/4LI31duS5N5KGgAJB5xXK5qaxroXnTThbUtXDt9BHe
      +uk/0HP1vM7OFfkYBYDMC0ULamha/yi1K9czOtDLqbf28sYP/kZDPCJ3oQCQOcsbzKO+dQtN
      G3ZgWS7OvPMazzz5nwkP9ee6NJE5QQEgc4rL46WqcSXNG3dSUlXLlQ/fY//3v0nf9Uu5Lk1k
      zlEAyJxQWl1H88adLFreSv+Ny5w6tJeOcydIxqO5Lk1kzlIAyEMrWFBCfdtWGtq2kk6nOX1o
      L++9+AOi4ZFclyYyLygA5KHi9vpZtKyVpg2Pkl9ayaVjb7P3O3/OYNe1XJcmMu8oAOShUF7b
      SMvmXdQ0raHz4imOvvYMXRdPk9IF2ERmjAJAcsQgv7SChnXbWLp2C/HxMKcOvcLBp75NIqZx
      fZHZoACQWeXxB1myagON6x/FH8rnwpG3eOlbf8Rwb0euSxNxHAWAzDjTtKhc2kLzxp0sqF/G
      jTPHePe579Jz9YIuwCaSQwoAmRmGQXFlDfVtW1myaiPhoQFOvfUK+3/w1yTjsVxXJyIoAGSa
      eQMhlq5tp2njDizLzfn33+C5b/5fjA305ro0EfkYBYA8MMM0KVm4mMYNj1K7fB3XTh9h//f/
      hoGOy9i6AJvIQ0sBIFMWKiqlbs1mGtq2YafTnH1vPz/6439PPBrJdWkicg8eKABs22aku4Mz
      r71M25e+iuV2M3jjKpfeOYDL62P5Y58llUhw8pXnSCeTNG7bhWGahAf7Katr5OKh/VSvasMb
      DE3X95EZZrnc1K5YT9OmnRSUVXLp2Du8+k//jaGeG9jpdK7LE5H78GA9ANum7/IFvMG8bFf/
      4qH9rP3CV+g5f5qOE0eJjo5Q27aZQGERp159gcWtmxgfGqTn/GlSyaQa/znAtCxKa5ZmbqPY
      vJruy2c5tu8Zbpw9piEekTnsgQLAME2WbtrOiZefAcBOp3H7/JiWRVHVIi698ybJeIxQaTmW
      2z1xQw6bzlPHcXk8tH3p1wEY6eni4qH9AFiJGG1tbQ/2rWRa5JdUUFTbgrdsMYnoOOOdF7i8
      7/tEw6NUhFxUtLbmukQReQDTOwdgGNjpNLZtk0olMSwLwzSx0ynAfXMhiqoXM9bbRTwcxpdf
      QKikjGV7PgPAjQ+PcOif/mZay5J75/EFWLxiPc2bdhIsKOLCBwc58+N/YmSgR3fUEplnHmwO
      IJ0mOjpMIhohOjKEL78Q27YZ7e2m6/RxihctIToyRMepYwSLSvEEggD48vJZ3LqBD19+mrVf
      +AqWy4XHH8gU5PE8+LeS+2K6XFQuaaZ5004qa5vovHia9174Pl0XT2mIR2Qee6AASCWTdJ4+
      Qai0nJ4LZymvb2LZ7k9z6d2DBItLKK1dip1Oc+3IuwzduErD1l2kkglMlwt/fiH17Y8SGx0h
      UFQ8Xd9H7kNB2QKaNuxg6dp2Rgd6Of32qxz44bd0G0URh3igAHB5PNRt3HrH802P7Mn+bFgW
      i9s2ffQerzc78Vu4sOZBVi9T4A8VULtqA80bd+D2+jn33hv87M//E+Mjg7kuTURmmc4DcADL
      5c7cRnHTLkoWLub62WO8+dS36bl6XuP6Ig6mAJivDIOiimpaNu+iduUGBjqvcvrQq1w/c1TX
      4hERQAEw55QsXEztqo2YpsnlD9+j9+oF4KO9+GBBMUvXttOwbjsAZ999naf+5HeJhkdzVLGI
      PKwUAHPIouVtPPav/j2+YB4Aa/d8kX3//BdcPPIWi5e30bxpF/mllVw58R6vffdJ+juvaohH
      RD6RAmCOMC0Xmz//G/iCeRiGAWSO2X/k136bTZ/9Kp2XTnP89ee4ce5DXWNfRO6JAmCO8PqD
      5BWXZRt/AMMw8PgD/Pi//i6DXVdzWJ2IzEVmrguQexOPjhMeHrjj+fGRIUb7u3JQkYjMdQqA
      OSKVTHDo6e8Qi4SxbRvbtolHIxz62T+STMRzXZ6IzEEaAppDLh09xE+/8R+pW7MZ07S4dOxt
      Oi+eynVZIjJHKQDmmJ4r5+i5ci7XZYjIPKAhIBERh1IAiIg4lAJARMShFAAiIg41aQDcvMOX
      iIjML5MeBTTS3cmHLz1NWV09VStbCRQW33Y2qoiIzE2T9gAKFlSx6au/SV5ZJW/87Z/x5ref
      pP/KxdmoTUREZtCkPYDoyDAnXnmWyNAgLbs/TUVjC0ef/iHFi5aoJyAiModNGgC2naZu4zYK
      F9ZkG/w1n/8XM16YiIjMrLsGwPtPfZfI8O33il3ctpnqVa0zWpSIiMy8uwZAZk//9iOADENH
      joqIzAd3DQDTsggP9HH0uR9jkBn+WbR2A1Ur1sxKcSIiMnMmnQMYvHGVyoZl1KxZB4Dpcs94
      USIiMvPuGgDXj71PeLCf/svnMcxMD6CoupbChdWzUpyIiMycuwaA2+cjWFxCsLgk+5zl1hWk
      RUTmg7vO6FY0LiNQWIzL7aF6ZSsli+roOX9mtmoTEZEZdNfd+ZHuTs69sZdkPEbflYuMD/ZT
      vGjJbNUmIiIz6K4B4MsvoKJxGYlohNLapVgeL6GSstmqTUREZtBdh4A8/gBVK9diGAbd507R
      ceIIg9evzFZtIiIygyad0e0+c4LxoQEWtKwEwJ9fOONFiYjIzJs0APIrFzLS3UleWWXmDV7v
      jBclIiIz7x6O6TQID/Zz/IWfAFC9sjXbGxARkblr0gDIK6ugbtN2es6domBBNZVNy2ejLhER
      mWGTXtlt8PoVzr+5j9LaegauXeLSu2/ORl0iIjLDJu0BjPX3Utm0jNK6BjzBEFcOH5qNukRE
      ZIZNGgALWlZy5Gff58rhQ5guN2s+9+XZqEtERGbYpAHgcntYtvvTpFNJIHNuwN0MdVzjxodH
      cPv81G3ahmGaXDz0BolohPr2R0mnkkRHRylcWE3XmRMU1dTiDQSn59uIiMg9m/w8gPOnOfPa
      S+RXLARg4bJVVDS0fOLy59/cx+rPfZn+Kxe5dvQ9DMMkVFJGsKSUs2/spXplK0Od1zEti57z
      p6loXDZ930ZERO7ZpAHg9vmpXrGW2vVbADCsu88b55VXcvmdNwkP9lO7vp3rx96nauVaXB4v
      qXgMyFxjqPfCGdZ87l9gGAaRkaHsRebSI4O0tbU96PcSEZFJTBoAhmFw4dB+us+dBmBR60aq
      V679hcvatk0sPEZl03IMyyIyNAjY2ZvJ35SIjmPbHz1vWi58eQUA9PZ0cfzw4Qf5TiIicg8m
      DYB4ZJzGbbupXd8+6YelUyni42HK6hoJFBZz9f238ecXMdx5nUBRKYaVWV3J4qUUVFZx8pVn
      WfmpL+INhqhoaM6sb3zsAb+SiIjci0kDwBsMcfy5p+g4dQyARWs/uQdguVxUr2rj2HM/xrQs
      GrftxvJ4OP3qiyQTcZoe2YOdtgmVlFFUVUNkaIBwfy+h0vLp/VYiIjKpSQOgcEE1O//N72Yf
      x8JjxMfDeD7hyJ3KxmVUfmxid8UTn7/tcaCwCICFy1ffd8EiIjI9Jp8DME0s86OJ35HuDryh
      vE8MABERmRsmvRSEiIjMTwoAERGHuofLQWfYto2dTuPLy8ft889kTSIiMgsmvxjcQB/DHdfA
      MLl4aD/NO56gcGHNbNQmIiIzaNIhoOGOaximxfWj77H2C79G97lTs1GXiIjMsEkDoLBqEeff
      3EegsJjo6DDB4tLZqEtERGbYPV0NtO1Lv06gqIREZHzSq4GKiMjccNcegJ1OM3j9Cr0XzpJO
      JRnr7+XK4bdnqzYREZlBd+0BDFy/wolXniOdTHDj5DFcHg8tuz41W7WJiMgMumsAlCxaQusv
      f4XoyDALWlbOVk0iIjILJp0E9gSCXD3yLqlEfDbqERGRWTLpJHAyFmN8sJ8Df/cknmCQRWs2
      ULVizWzUJiIiM2jSAMgvr2Trv/o3jA8P4svLw+3VWcAiIvPBpAEQC4/y7g/+EX9BIeODAyx/
      7LOULK6bjdpERGQGTRoAXWdPUrdxG1Ur1hAe6OP8m/sUACIi88CkAVCyqI6jz/yQ8aEBBq5e
      onr1utmoS0REZtikRwHllVXQ9itfwxMI0rLrU1TpLl4iIvPCpAEQHRvh8I//iY4TRzj63I8I
      D/TNRl0iIjLDJh0C6r14jppVbSxq3cjQjatcOXyIZXs+Mxu1iYjIDJo0APJKyzn5ynPEI2Gi
      o6OMdHdw6Z03WbJhy2zUJyIiM2TSAAgUFlO3cRsAeWWVlNU1YLndM16YiIjMrEnnAMaHBhnt
      7aasroHIyDCx8BhldY2zUZuIiMygSQOgYMFCDMPgxT/+OqO9XdSsapuNukREZIZNGgCjvd30
      nD/Nxq/8D8TGRum9dG426hIRkRl21zmAZDyGP7+Qjf/d/4hpuSiuqWV8eGi2ahMRkRl01x7A
      iZefIZVMcv34B/RfvcRoXzc3jr8/W7WJiMgMumsAJOMxsG1S8RjpZBI7ndZ9AURE5om7HwZq
      23zw0+8xPtiPy+fHcmWGgUREZO67awCs/NQXM72AW+h+ACIi88NdA8DjD+DxB2arFhERmUWT
      HgZ6q1QiTjKuOQARkfngvgKg4+Qxrh19b6ZqERGRWTTptYDS6RSpib3+yqblmJYL27YxDGPG
      ixMRkZkzaQCM9nTx/lPfxV9QSHigD28wj/KGZhq37Z6N+kREZIZMGgDhgT7qt+ygZvU6rn7w
      Dp5giKvvvz0btYmIyAyadA6gsGoRl945wOlXX+TSuwcJFBZh2/Zs1CYiIjNo0h6ANxBi3a/+
      S0Z7e1jUthF/fiGtv/yVT1x+fGiQM6+/jGmaLNmwBW9eAad+/izpdJqGrTsxTJPwQD/l9U1c
      OPgaNWvW4w2GpvM7iYjIPZh8CGiwn+PPP0WgsJgF9io8vgBu3yefDHZ2/89Z8cTncXt9mcdv
      7GXJhq34C4s4tfd5FrduIjIyRPfZkwBq/EVEcmTSAMgvr6T9N36b0Z4ujj3/FL0XzrLyl77w
      C5e1bZvRni7O7HuJZDxG4/bdxMNjBEvKMncRs23ApuPEEdw+P21f+ioAI92dnD+4L1NQMk5b
      m+45ICIy0+5pEvjDl54mlUiwcNlqqlasuevyodJylj32GWJjo5w/+BqmaWGnU4CbzMyBQWlt
      PSM9ncTGRvEXFJJXVsGqz/wKADeOv8/Bf/jmA38xERG5u0kDwO0PsOrTX8SXV0A8PJY5JyD4
      i5c1DAOX18vQjWukkgl8wTz8BYXc+PAIweISfME8ADzBECse/xwfvvgz1v7yV7BcblymBwDT
      mrQkERGZBndtbW3bJpWI03HiKDc+/ADT5abpkccIFBV/4ntadn2aK4cPYZgGdZu2YVgurh99
      j5GeLuq37iSVTGC53fjyCmjYtovY2CiBwk/+PBERmRl3DYDjL/yEcH8fNWvWU1S9mJrV6ylc
      WH33D/R4WLp5+23PLVq74bbXvYFMF6KgsmqqdYuIyAO663kApbX1WG43nSePMdRxnUQsonMA
      RETmibv2ABYuW8WClpXEw2N0nT3Bxbf2ExkavG2PXkRE5qZJZ1wNw8AbymNx6yYWt25SD0BE
      ZJ64r8tBA7oKqIjIPHHfASAiIvODAkBExKEUACIiDqUAEBFxKAWAiIhDKQBERBxKASAi4lAK
      ABERh1IAiIg4lAJARMShFAAiIg6lABARcSgFgIiIQykAREQcSgEgIuJQCgAREYdSAIiIOJQC
      QETEoRQAIiIOpQAQEXEoV64LEBGR6WMYUBT0UBT0UBD0UBh0UzjxuDDooTTfS1HQS2HQowAQ
      EXlYuS0Dt2XicpmEfK5sI16c56Uk5Mk27PlBD4UBNyGfG5/HYigcZygcZ3g8kf15cCzOpZ4w
      /aMxBkZjDIbjCgARkdnkdZsEvS6CPhchn5vikIfiWxrzwlDm/0UhL4YBBmAYBrbxEl4AABX5
      SURBVLFEisGxOIPhOANjMQbG4nQMDDMYjjMy0dCPRZOEY8l7rkUBMIcYBmxpLuPxNQuxTIO9
      x7p47UQ3qbSd69JEHOlmA+22TIpCHopD3kxjHvpoyKVoonEvDnkpDLqxbQhPNNQj4wkGxjIN
      +lA4zumOEYYmGvnBsTixZIpEMk08ZZOegb9zBcAc8vn11fzuF1fgtjJz9ztXVvKXL57lH1+7
      mOPKROYH0wCv28LnsfC5rTvGz0vyvNmGPuh14fNY+D0Wlmlkh1UGxiaGXMJxzneOMhCOZxv1
      oXCceDKd66+ZpQCYI7xuk689Wpdt/AFclslXty/hRwevMB5P5bA6kYdbvt9NfsBNvt9NQcCd
      3TMvzvNSfMuwi99jkUzZJFJpkimbofHbG+/znaPZ4ZdwLEkkliISTxJNPDyN+v1QAMwRAY+L
      goDnjucLgh5+c089A6NxAOKpNMPhRPb1gbEYaTvTdRyNJIhNbKjxZJqR8Y+WS6XT3OxgptM2
      N3ubtv3RzyK5ZpkGLtPAsgzy/O7bhlmywy9BDwUBD/l+F3kTDf/IeILRSIKRSCI7MTowlmnQ
      h8Jx+kczQzDhaJJU2iaZth0xtKoAmCNGIgku9YyxprYIwzCATON8vT9Mx0Ak2zMIeCwqCnxA
      ZuKoKOTJnuxREPRkl/N5LEK+j/75k6nbA+DWjT+ZsrPrGxiLY08EyvB4gngqEyixeIrRaGby
      KZ5MMTKezL6nfyz20fcYT2S7wMlUOrvnZNs247GPejGReFLBMwv8HgvTgPFYilz9un1uE7/H
      hd9rEfS6KAp5KM3z3jYpWhj0UBjw4Lp5VIxlEImnsnvmg2Nx+kZjnO8czU6KjkQyjf7wLTs6
      cjsFwByRStv82bOn+C9fa6V8ooEfGIvxRz85wdvn+h/4831uk8x0Vma4yZwIGWviDw4y46PF
      ed7se4qCHlxmZjm/10XQm9mcfB6L2vLMcpZpsD5Ykn1PYciDy8x8nsdl4raM7HJet5VZyMj0
      eCZKIBJPEZ4Il2Q6zVA4zkQGMRROkEyn71wulVnupsFwPBtqkViK8YkjJRIpm5Hx25dzQvD4
      3Ca/taeBXasqMQ2DN0/38FcvnmMkMj2NpcdlZsbPA5lx81snRW827DfH01Npm0g8RTSeYiya
      ZHAsRt/EHvnFnjGGLmWGYYbGE0TjKaKJFLFEyhH/TjNNATCHfHh1mK/92ZtsqC/BNA3eu9BP
      z3Bs8jfeg1vHMKOJT55PuDEQmZb1fZyR/c8tjyf+G/RaBCbCxe0yKQi4s8sVh7xM5AlBrwu/
      J7Ocx2WysDiQXW7l4qJsoNycvIPM0Rv5E59nYlAY8jCRacQSaWITv4tk2iYyERo2EI4lmcgd
      wtEEkYk5mHgynW1EP+oxZZYbjSaITSwXTaQZiyayn9c/8tG/YyKVzg7bpdOZxzdN1wTi//R4
      I7++fUm2N/krmxcT8rn5/e8dzdYLmWB2W2YmrF1m5tjzW49wmTgmvTjkJc/vyh7eaBgwODEZ
      euuk6NW+MEcvDzI4ceTL4FicxETv01aDPusUAHPMwFicF4905rqMaWdn/3PL44n/jkaT2eEl
      gOsP3uG5Jz53ptEDcJkmfm8mNAwMQr6Peih5fjde981ejUW+PxMohgElt/SYllaGsp/nc1uE
      fJnlLDMTZDcZxke/CtMwskNupmHcNkyTGU7LBEoskWZ0IlBSaZuhsXh22eHxOIlk5tHNvedP
      tVZlG//MOg12rqykZziaGVufaOS9bgvbtrMN9MBY7LZJ0esD4xy/OsTAWJyxSIJwLHN4Y2yO
      Too6jQJA5BNEE+nbekaD4dlZr8s0so2zZYI10cUxDG47Cqww6MY18djvsQhOzOm4TJPC4EcH
      DBSFPPg9mc+r9PrI97uzPaBbmYZBz3CUDy4OMDgxMToezxyHnkylSaS0iz7fzEgAxMJjXHjr
      dZp3PI6dtjn/1mskYzHq2x8lnUoRHR2mqGoRnaeOU7y4Dm8gOBNliMxJybTNzT5AZgTqF+9N
      D94yx3E/DDLzNLf2Amzb5vDFfn548IrG1h1kRgLg3IFXiQwNkE6luXb0PQoqFhIsLuXcgb1U
      r2xjuKsD03LRd+k8lc0rZqIEEfkENvDnz50m6HWxqbEM04Ajlwf5w6dOqPF3mGkPgJ7zZwiV
      lGUfhwf6qFnVhuXxkIpn9liGO6/Te+EMaz//axiGwfjwIN1nTwKQHh2ira1tussSkY/54UmD
      fdfHMA2D3hGbitoWKmpzXZXMpmkNgEQsyrkDe2ne8QS9F88y2tOVecG4fbl0MjkxsZTZ3XC5
      PYRKywHoGRrk2OHD01mWiIj8AtN6QxgDg6WbHyEeGSeViJOMRwkUFDHUcY3oyDCmK5M3RTW1
      NG7fzcmXn8G2bTyBIGVLGihb0kB+eeV0liQiIp9gWnsALq+XyqblANjpFCWL6iiqqeXMvpdI
      xmM0PfIY6XSKvNJyChdUE2loIdzfm937FxGR2TNjh4EuXLYayHQxlj/22dteCxQUAbBAE8Ai
      IjmjewKLiDiUAkBExKEUACIiDqUAEBFxKAWAiIhDKQBERBxKASAi4lAKABERh1IAiIg4lAJA
      RMShFAAiIg6lABARcSgFgIiIQykAREQcSgEgIuJQCgAREYdSAIiIOJQCQETEoRQAIiIOpQAQ
      EXEoBYCIiEMpAEREHEoBICLiUAoAERGHUgCIiDiUAkBExKEUACIiDqUAEBFxKAWAiIhDKQBE
      RBxKASAi4lAKABERh1IAiIg4lAJARMShFAAiIg6lABARcajpDwDbJjIyRHR0OPtULDzG+PAg
      AOl0ilQyCUAqkSCdSk17CSIiMjnXdH/gqVdfwDAtIiNDLGhegS+/gItv7ccdCFBcXUuopIyh
      rhvUrGrlyNPfZ9Wnv4Rp+ae7DBERmcS0B0Dj9t1Ybg/9Vy4y1HGdgWtXaNnzabyBIMeee4pg
      cSl2OsXZN/ayqHUTbt/tjb/b7SY/P3+6yxIRkY+Z9gCw3B6uH3ufvsvnWPH4Fzj16gt4fAFM
      y4VhGIDN5XcPEiwqoemRxwAY7rrB2f2vZD4gGqG8vHy6yxIRkY+Z9gC4/N5B4pEIqz/7ZQzD
      wHJ7SEQjGKaJbduAQe36dqIjw/ScP01FQwsFlVWs//JvAHDt6Hsc+Lu/mO6yRETkY6Z9Evjy
      e4cAm3MH9tJ3+QILWlZwau9znHzlOUprl04sZdC4fQ/Xj73P+NDAdJcgIiL3YNp7AJu/9q+x
      7XTmw91eLI+Hlp2fIpVMECgqwU6nySurwLQs1nzuy2BMdwUiInIvpj0AvMHQHc/58guyPxuW
      BZYFgOV2T/fqRUTkHulEMBERh1IAiIg4lAJARMShFAAiIg6lABARcSgFgIiIQykAREQcSgEg
      IuJQCgAREYdSAIiIOJQCQETEoRQAIiIOpQAQEXEoBYCIiEMpAEREHEoBICLiUAoAERGHUgCI
      iDiUAkBExKEUACIiDqUAEBFxKAWAiIhDKQBERBxKASAi4lAKABERh1IAiIg4lAJgDjI9BqbX
      yHUZMg9oW3I2V64LkHtnegxK2wsILfWDAeHLUfreHCYVSee6NJljDLdB6ZYC8m5uS1ei9B3Q
      tuQ0CoA5pKS9gIKVQQwjs8eW3xLAcBl0vTiQ48pkriltz6fw1m2pOYDpMuh8QdtSrhgWYE6t
      N2YYYLju/70KgDnC9BjkLfVn/2ABDMMgtMRHsM5HOm7nsDqZS0yXQV5D4I5tKXjLtmRYYPms
      Ka/D8pmZBm0KDJeB5Z366LTlt6Y8uG26DUzPVIfEDFwBE6Y8omaQTky9B2Yn778NUADMFZ+w
      URmmQV69H1s9d7lHhpkJgTueNzLBYKcyDUkqkprydmUnbNLxqb3ZTtrEB5JTWzGQjqVJT6Ex
      zLzZJvkAw2DpaDr7+5sK+0H246bwXgXAHJGO2YSvRDPDPhN7brZtM3YlStfLgzmuTuaa8p02
      BcuDt21L4atRul4emFJDInOTAmAO6T0wjOEyCNX6MhN3V2P0vq7GX+5f38FhTLdBaElmEnj8
      Woye14bU+DuMAmAOSUdTeN/qY0MPWCa8dQG6xgweYNBRHCodTeM51J/Zlix46yKktC05jgJg
      Dlm3IM3vtSfI92Ye/+oS+NO3Xbx2Vf+Mcn9aK9P8py0JCia2pS8vgf/nHRevXrFQCDjHrLQc
      6VQKbBvT5cKemOUwDOO2n+XuXKbNb65Oku/NHPIFEHLDb61JcvC6RTyt36Hcm5vbUsEt21Jw
      Ylt687pFLJXb+gAM7KkeEQlkeshTfu8DrDffa+Oe4rp9Lgi6pzYGZxlQ6Lv/9814AIwPDXDq
      1RcwDJPFbZvw+PyM9nWzoGUVJ3/+LA1bd+IJBGe6jDkv5LapDNncmpWGAZUh+NPdcZI5Ogoo
      ZcNQVOFzP2IpGIvn7nfmsWBJ4Z3bUnkQ/ud1CcYTRva5Qu/UG+KQB7zW1Bo0jzX1I2IsE1wm
      pKf4fp8rs11PRTwFo/Gpvde2YXCKf0vpKb53xgPg2pH3aNq+B19eASdefprFbZuJRyJcO/Iu
      eWUVavzvUThhMBAxKPDevmUOROCPDrl5gMOHp8QACrwPtrfkNIZhUzSFvbTpZhrQWpmiJv/2
      54ei8H6XSfKW3uRYAuLJqf0jx1KZ90+FbUN0iuuFTEM81QBIpCFlO2PDtr7+9a9/HWDfvn2c
      O3eOUEkZSzZsmbYVdJ4+zsKWVVhuN91nT1K4sJpzb+wlNjZKy85fwjAMhrtucPz5n9Bx4iju
      yCiVhfm0trZi2zaPP/440WiU7du34/F4qK+vp6GhAY/Hw+7du4nFYjz++OPEYjFaW1upqKig
      tLSUDRs2kEqlsu/fsmULgUCAJUuW0NLSgmVZ2dd2795NKpVi1apVVFVVUVhYyObNm0kmk9ll
      Nm/eTH5+PosWLWLFihUYhpF9befOnQAsX76cRYsWEQqF2LZtG4lEIrvMhg0bKCoqYuHChaxZ
      s+a27/bII4/gcrloampi6dKl+P1+duzYQTwezy7T2rae8x2DrC4O45roYsZS8HRXDQXLHiNh
      +qlY1MCC2iaitodN2/fQNxqn/dHHGRhL0LC8lVDxAjyhEpat3cRwJM2WHU/QOxJj9fqtpN0h
      ShYuoWbpMsJJK/vaxm27GY7aLGlaRUF5DZa/kFXrtzI4nqJt+xNcHYhRt2ozMXchnuIaKpau
      omfcoGHtVsJGiED5EkoWL6MvarF2W2b5Ve176BxNU7F0FZ7iGmLuQhrWbqVjJJVdpm7VZqKu
      Arwli7KfefO15Rt30hsxKa1dTqB8CeNmHs3rHuHGcDK7TO2KjSR9JVgFC1nYuJbuMNnXWtY/
      ymDCQ1FNM3kL6hlJ+1m+cSfXhxLZZWpa1kGoAjtYzqJl6+kas7OvNbZuYyTtJ29BPUU1zQzE
      3aze8hhXB2Ks3vIYN4aTLGxci6uwiqSvhLpVm+kcTbN22y9xpjtG1Yqt9KfzoWgJweoVXB21
      aN6cea1+/R4uD0H+olWk8xcxaBdQvXIbF/pT2WUWLGtnyCgimVdDweLVXBkxs68tad3JtTEX
      gYXLMIrr6EuGqF27g3N9yewyZY0bOX1tkDV3bEvVpJY+QWfUh6eiCXd5IwMJPys27eLaYJy1
      257g2mCcmpZ1GHmVpANlLF6+4Y7fzagdIFhRR9niFiIpF+0T29LmRx5jcDxFXcsa8kurcAWL
      WdnWztB4Kru9rWxrB28+xQsWU9+8gljK4JHdTzA0FqX9kV1EUwZLm1dQXrUYdyCfdZu3MRpN
      ZpdZvW4T/rwiyhdUsXzlapJp2PXYE4yNR9n6yA5s00V9Uws1tXW4fQG2bn+U8Vgiu8yatvWU
      lJZRUVFBW1sb6XQ6+ze4bds2vF4v9fX1NDY23tYGPfbYY9k2qLKykpKSkl/YBgWDwWwbZJrm
      J7ZBBQUFtLe3/8I2qKam5o42aMeOHVRXV993u2bYEwPxv//7v8/zzz9PReMydv7Of5i2ADjx
      82do2LITt8/P0Wd/RO26dvqvXmS0p4u6jdvIr1hw2/LXjr7Hgb/7i2lb//xis6wkzbaaNKYJ
      B6+bHOsxsTVpJ/fNpmViW3JNbEtHtS05zowPAZUsquPSO28SKComWFwKgOX2sPyxz/LBz77P
      2i/8Gm7vQ9AvnhMMTvZbnOw3s49FpsbgVL/FKW1LjjbjAVDRuAzL5SYRjVDf/ijJRBxvKITb
      52flE18gFY8pAO6b/lhlumhbcrIZDwDDMChb2ph97Pb6sg2+v6BwplcvIiKfQDeEERFxKAWA
      iIhDKQBERBxKASAi4lAKABERh1IAiIg4lAJARMShFAAiIg6lABARcSgFgIiIQykAREQcSgEg
      IuJQd1wMzm/YLLGmeBufaRAzH4IbkoqIOMAdAXD13Bm+8R/+bS5qAWDDhg2sXbuWDz74IGc1
      yPzwO7/zOzz55JO5LkPmuJt38Hr++edzXcq0uyMA0uk04+Pjuaglu37LsnK2fpk/vF5vrkuQ
      ecA0Tdxud67LmBEzfj+A+3X+/HmSyWSuy5B5YN++fbkuQeaBvr4+jh8/nusyZsRDFwAdHR25
      LkHmCQ0jynQYHh5meHg412XMiIcuACSjsLAQv99POp2mp6cHl8tFaWlp9jFAWVkZLpeLvr4+
      4vE4lZWV2LZNMpmkv78/x99AHgYej4fi4mJM02RwcJBIJEJJSQlerzf7OBQKkZ+fTyQSYXBw
      kPz8fILBIPF4XNvRPKfDQB9SqVSKrq4uEokEgUCAsrIyent7GR8fp6ioiPz8fGKxGN3d3ZSX
      l2NZFrZt09PTw8DAQK7Ll4eE2+2mt7eX7u5uiouLCQQCmKZJZ2cnpaWlGIZBUVERnZ2d+Hw+
      fD4foVCIzs5OTNMkEAjk+ivIDFIAPKRGR0dxuVyEQiGi0SgAyWSScDiMx+PB5/MxNjZGKpUi
      nU7jdrvxer2UlJTg8XhyXL08LMLhMKlUiuLiYsbHx/H5fIyOjmLbNvF4HJ/PRyQSwbZtRkdH
      8fv9GIaBaZqMj4/j9/tz/RVkBikAHlLBYJCKigo6OjpIpSY/NyIajXLjxg1GRkaorKychQpl
      LjBNk5qaGqLRKIODg3dd1jAMkskkIyMjlJeXU1BQgG3bs1Sp5IIC4CFkGAZlZWV0dnaSTqcB
      sG0bj8eT7RFEIhHy8vJwuVwYhoHX68U0TZLJZPY9ImVlZQwODhIOhzEMg0gkQn5+PqZp4vF4
      iEaj+P1+TNMkLy+PSCRCOBymu7ubdDpNOBzO9VeQGaRJ4IeQYRhEo1FKS0sBGBoaore3l9LS
      UlKpFH19fdi2TWlpKWVlZXR3dwNQXFyMZVmaA5CseDxOMBjMTuoODg7i8/moqKigp6cH27bp
      7++noqKCcDhMMpmkuLgYr9fL2NgYsVgs119BZpAC4CGUTqfp6uq64/mPP9fX13fb45tHB4nc
      9IuGfT7+3Pj4+G0nf2oHwjk0BCQi4lAKABERh1IAiIg4lAJARMShFAAiIg6lABARcSgFgIiI
      QykAREQc6v8H5nFsVzmSM9IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='168' name='Inflation' width='384'>
      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
    </thumbnail>
    <thumbnail height='168' name='Inflation (2)' width='384'>
      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
      9qxkUtD0ogMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 11' width='384'>
      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
    </thumbnail>
    <thumbnail height='208' name='Sheet 13' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 14' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 15' width='384'>
      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
      jo4nfo6qqvijP/ojDA8P486dO5ifn0cQBCgWi9i3bx+GhoaQy+UgSRK++93vwjCMRzuG+/v7
      MTQ0BFVVcf36deTz+Uff99vf/jYymcyqO4+o9YkwDMNGD4KI1i8MQwRBAMdxEIYhNE2DLMur
      Ps/3fdRqtUf7BZ70ORRfQgjBABARxZAQQvCgDyKimGIAiIhiigEgIoopBoCIKKYYACKimGIA
      IsD3ffBmLCLabQxABHiexwAQ0a5jAIiIYooBICKKKQaAiCimGAAiophiAIiIYooBICKKKQaA
      iCimGAAiophiAIiIYooBICKKKQaAiCimGAAiophiAIiIYooBICKKKQaAiCimGAAiophiAIiI
      YooBICKKKQaAiCimGAAiophiAIiIYooBICKKKQaAiCimGAAiophiAIiIYooBICKKKQaAiCim
      GAAiophiAIiIYooBICKKKQaAiCimGAAiophiAIiIYooBICKKKQaAiCimGAAiophiAIiIYooB
      ICKKKQaAiCimGAAiophiAIiIYooBICKKKQaAiCimGAAiophiAIiIYooBICKKKQaAiCimGAAi
      ophKNHoA1PzCMITlBZCEgCoLCCEaPSQiWgcGgLYkCEPM1zx8eGsRWT2B53tTaNMTDAFRE2AA
      aEvmax5+fXcJVSdAzXEwU3Ux3JXE0e4UEnz/J4o0rgHQljh+ANsLAAAhAMcPcXPWwqLpNXZg
      RPRMDABtSUaTocr1P0YVx8fn45UGjYiI1osBoC1JqzIOdRqQV0z3TFYcjMyaCMOwMQMjomdi
      AGhLhBDoz+noyqh1r/sBcHmqyqkgoghjAGjL1ISE490paCsuA5YsHzdnTTgP1wiIKFoYANoW
      xZSCA0Wj7rUgBO4t2pgsOwg4FUQUObwNdIOCIEC5XMalS5cwNTUF3/dRLBZx/Phx5HI5SJIU
      y/vfZQk4UNQxW3UxVXEfvV51AozMmiimFCRVuYEjJKKVRMhVunVzXReff/453n33XQBAJpOB
      EAK1Wg22beO3fuu38Ju/+ZswDOMZ36mebdtQFAWS1PwXZCOzJj69X4bt1f9YvdCbwvO96QaN
      iohWEkIIXgFswPj4OH72s5+hWCzizTffRF9fHyRJwsTEBD744AN8+OGH6OrqwokTJ2J5FQAA
      +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
    </thumbnail>
    <thumbnail height='384' name='YoY_Exchange' width='384'>
      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
      J95ZMIoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='YoY_Exports (2)' width='384'>
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='YoYcpi' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
